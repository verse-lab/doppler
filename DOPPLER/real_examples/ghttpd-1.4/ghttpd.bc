; ModuleID = 'llvm-link'
source_filename = "llvm-link"
target datalayout = "e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128"
target triple = "aarch64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.t_vhost = type { [255 x i8], [255 x i8], [255 x i8], [255 x i8], [255 x i8] }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.timeval = type { i64, i64 }
%struct.fd_set = type { [16 x i64] }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.stat = type { i64, i64, i32, i32, i32, i32, i64, i64, i64, i32, i32, i64, %struct.timeval, %struct.timeval, %struct.timeval, [2 x i32] }
%struct.tm = type opaque
%"struct.std::__va_list" = type { i8*, i8*, i8*, i32, i32 }

@.str = private unnamed_addr constant [25 x i8] c"/usr/local/ghttpd/htdocs\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"index.html\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"/cgi-bin\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"/usr/local/ghttpd/cgi-bin\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"ghttpd launched into background, PID = %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"nobody\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"Connection from %s\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"REMOTE_ADDR\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@.str.1.9 = private unnamed_addr constant [11 x i8] c"tempstring\00", align 1
@.str.2.10 = private unnamed_addr constant [9 x i8] c"mimetype\00", align 1
@.str.3.11 = private unnamed_addr constant [9 x i8] c"tempdata\00", align 1
@.str.4.12 = private unnamed_addr constant [4 x i8] c"ptr\00", align 1
@.str.5.13 = private unnamed_addr constant [5 x i8] c"ptr2\00", align 1
@.str.6.14 = private unnamed_addr constant [10 x i8] c"host_ptr1\00", align 1
@.str.7.15 = private unnamed_addr constant [10 x i8] c"host_ptr2\00", align 1
@.str.8.16 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"loop\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"flag\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"numbytes\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"sa\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"addrlen\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"thehost\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"/cmderror.html\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"Host:\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c" \0D\0A\09\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"ret\00", align 1
@.str.19 = private unnamed_addr constant [39 x i8] c"Connection from %s, request = \22GET %s\22\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"opt\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"HTTP/1.1 200 OK\0A\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"Server: GazTek HTTP Daemon v1.4\0A\00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.23 = private unnamed_addr constant [13 x i8] c"QUERY_STRING\00", align 1
@.str.24 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"/cgierror.html\00", align 1
@.str.26 = private unnamed_addr constant [25 x i8] c"application/octet-stream\00", align 1
@__const.showdir.dirfooter = private unnamed_addr constant [191 x i8] c"</TABLE><hr><center><font size=-1>This page is being provided to you by ghttpd<br><A HREF=\22http://members.xoom.com/gaztek\22>http://members.xoom.com/gaztek</a></TD></TR></TABLE></BODY></HTML>\0A\00", align 1
@.str.27 = private unnamed_addr constant [377 x i8] c"HTTP/1.1 200 OK\0AServer: GazTek HTTP Daemon v1.4\0AContent-Type: text/html\0A\0A<HTML><BODY bgcolor=\22#33CCFF\22><center><TABLE BORDER=3 COLS=1 WIDTH=\2275%\22 BGCOLOR=\22#66FFFF\22><tr><td><center><h2><u>Directory listing for %s</u></h2></center><TABLE BORDER=3 COLS=2 WIDTH=100% BGCOLOR=\22#FFFFFF\22><tr><td><b><center>Filename</center></b></td><td><b><center>Size (bytes)</center></b></td></tr>\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"scandir\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"%s%s/%s\00", align 1
@.str.30 = private unnamed_addr constant [87 x i8] c"<tr><td><center><A HREF=\22%s/%s\22>%s</a></center></td><td><center>%d</center></td></tr>\0A\00", align 1
@assocNames = dso_local global [32 x [2 x [100 x i8]]] [[2 x [100 x i8]] [[100 x i8] c"mp2\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"audio/x-mpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"mpa\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"audio/x-mpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"abs\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"audio/x-mpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"mpega\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"audio/x-mpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"mpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"video/mpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"mpg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"video/mpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"mpe\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"video/mpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"mpv\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"video/mpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"vbs\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"video/mpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"mpegv\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"video/mpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"bin\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"application/octet-stream\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"com\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"application/octet-stream\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"dll\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"application/octet-stream\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"bmp\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"image/x-MS-bmp\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"exe\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"application/octet-stream\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"mid\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"audio/x-midi\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"midi\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"audio/x-midi\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"htm\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"text/html\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"html\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"text/html\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"txt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"text/plain\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"gif\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"image/gif\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"tar\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"application/x-tar\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"jpg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"image/jpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"jpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"image/jpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"png\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"image/png\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"ra\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"audio/x-pn-realaudio\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"ram\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"audio/x-pn-realaudio\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"sys\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"application/octet-stream\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"wav\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"audio/x-wav\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"xbm\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"image/x-xbitmap\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] [[100 x i8] c"zip\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [100 x i8] c"application/x-zip\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], [2 x [100 x i8]] zeroinitializer], align 1, !dbg !0
@.str.31 = private unnamed_addr constant [17 x i8] c"/etc/ghttpd.conf\00", align 1
@.str.1.32 = private unnamed_addr constant [3 x i8] c"rt\00", align 1
@.str.2.33 = private unnamed_addr constant [5 x i8] c" \09\0A\0D\00", align 1
@.str.3.34 = private unnamed_addr constant [14 x i8] c"<virtualhost>\00", align 1
@vhosts = dso_local global %struct.t_vhost* null, align 8, !dbg !26
@no_vhosts = dso_local global i64 0, align 8, !dbg !51
@.str.4.37 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@defaulthost = dso_local global %struct.t_vhost zeroinitializer, align 1, !dbg !61
@.str.5.38 = private unnamed_addr constant [4 x i8] c"\22 \09\00", align 1
@.str.6.39 = private unnamed_addr constant [15 x i8] c"</virtualhost>\00", align 1
@.str.7.40 = private unnamed_addr constant [5 x i8] c"Host\00", align 1
@.str.8.41 = private unnamed_addr constant [13 x i8] c"DocumentRoot\00", align 1
@.str.9.42 = private unnamed_addr constant [12 x i8] c"DefaultPage\00", align 1
@.str.10.43 = private unnamed_addr constant [10 x i8] c"CgiBinDir\00", align 1
@.str.11.44 = private unnamed_addr constant [11 x i8] c"CgiBinRoot\00", align 1
@.str.12.47 = private unnamed_addr constant [4 x i8] c"\22\09 \00", align 1
@.str.13.48 = private unnamed_addr constant [11 x i8] c"ServerRoot\00", align 1
@SERVERROOT = dso_local global [255 x i8] c"/usr/local/ghttpdalign 1, !dbg !59
@.str.14.49 = private unnamed_addr constant [11 x i8] c"ServerPort\00", align 1
@SERVERPORT = dso_local global i32 80, align 4, !dbg !54
@.str.15.50 = private unnamed_addr constant [11 x i8] c"ServerType\00", align 1
@SERVERTYPE = dso_local global [255 x i8] c"Standalonealign 1, !dbg !57
@.str.16.51 = private unnamed_addr constant [14 x i8] c"<VirtualHost>\00", align 1
@.str.17.52 = private unnamed_addr constant [47 x i8] c"Warning: unknown variable in config file \22%s\22\0A\00", align 1
@__const.Log.datetime = private unnamed_addr constant [22 x i8] c"[%d.%m.%Y] [%H:%M.%S]\00", align 1
@.str.18.55 = private unnamed_addr constant [8 x i8] c"logfile\00", align 1
@.str.19.56 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.20.57 = private unnamed_addr constant [3 x i8] c"tm\00", align 1
@.str.21.58 = private unnamed_addr constant [5 x i8] c"temp\00", align 1
@.str.22.59 = private unnamed_addr constant [6 x i8] c"temp2\00", align 1
@.str.23.60 = private unnamed_addr constant [12 x i8] c"logfilename\00", align 1
@.str.24.61 = private unnamed_addr constant [9 x i8] c"%s - %s\0A\00", align 1
@.str.25.62 = private unnamed_addr constant [14 x i8] c"%s/ghttpd.log\00", align 1
@.str.26.63 = private unnamed_addr constant [3 x i8] c"at\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main() #0 !dbg !76 {
entry:
  %retval = alloca i32, align 4
  %xx = alloca i32, align 4
  %sockfd = alloca i32, align 4
  %new_fd = alloca i32, align 4
  %numbytes = alloca i32, align 4
  %my_addr = alloca %struct.sockaddr_in, align 4
  %their_addr = alloca %struct.sockaddr_in, align 4
  %sin_size = alloca i32, align 4
  %i = alloca i32, align 4
  %tv = alloca %struct.timeval, align 8
  %readfds = alloca %struct.fd_set, align 8
  %exceptfds = alloca %struct.fd_set, align 8
  %pw = alloca %struct.passwd*, align 8
  store i32 0, i32* %retval, align 4
  call void @llvm.dbg.declare(metadata i32* %xx, metadata !80, metadata !DIExpression()), !dbg !81
  store i32 0, i32* %xx, align 4, !dbg !81
  call void @llvm.dbg.declare(metadata i32* %sockfd, metadata !82, metadata !DIExpression()), !dbg !83
  call void @llvm.dbg.declare(metadata i32* %new_fd, metadata !84, metadata !DIExpression()), !dbg !85
  call void @llvm.dbg.declare(metadata i32* %numbytes, metadata !86, metadata !DIExpression()), !dbg !87
  store i32 0, i32* %numbytes, align 4, !dbg !87
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in* %my_addr, metadata !88, metadata !DIExpression()), !dbg !111
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in* %their_addr, metadata !112, metadata !DIExpression()), !dbg !113
  call void @llvm.dbg.declare(metadata i32* %sin_size, metadata !114, metadata !DIExpression()), !dbg !115
  call void @llvm.dbg.declare(metadata i32* %i, metadata !116, metadata !DIExpression()), !dbg !117
  call void @llvm.dbg.declare(metadata %struct.timeval* %tv, metadata !118, metadata !DIExpression()), !dbg !127
  call void @llvm.dbg.declare(metadata %struct.fd_set* %readfds, metadata !128, metadata !DIExpression()), !dbg !138
  call void @llvm.dbg.declare(metadata %struct.fd_set* %exceptfds, metadata !139, metadata !DIExpression()), !dbg !140
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !141, metadata !DIExpression()), !dbg !155
  %call = call i8* @strcpy(i8* getelementptr inbounds (%struct.t_vhost, %struct.t_vhost* @defaulthost, i32 0, i32 1, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #9, !dbg !156
  %call1 = call i8* @strcpy(i8* getelementptr inbounds (%struct.t_vhost, %struct.t_vhost* @defaulthost, i32 0, i32 2, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #9, !dbg !157
  %call2 = call i8* @strcpy(i8* getelementptr inbounds (%struct.t_vhost, %struct.t_vhost* @defaulthost, i32 0, i32 3, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !158
  %call3 = call i8* @strcpy(i8* getelementptr inbounds (%struct.t_vhost, %struct.t_vhost* @defaulthost, i32 0, i32 4, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)) #9, !dbg !159
  %call4 = call i32 bitcast (i64 ()* @count_vhosts to i32 ()*)(), !dbg !160
  %conv = sext i32 %call4 to i64, !dbg !160
  store i64 %conv, i64* @no_vhosts, align 8, !dbg !161
  %0 = load i64, i64* @no_vhosts, align 8, !dbg !162
  %add = add i64 %0, 1, !dbg !163
  %mul = mul i64 %add, 1275, !dbg !164
  %call5 = call noalias align 16 i8* @malloc(i64 %mul) #9, !dbg !165
  %1 = bitcast i8* %call5 to %struct.t_vhost*, !dbg !166
  store %struct.t_vhost* %1, %struct.t_vhost** @vhosts, align 8, !dbg !167
  %call6 = call i32 @getpid() #9, !dbg !168
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i32 %call6), !dbg !169
  call void @closelog(), !dbg !170
  br label %while.body, !dbg !171

while.body:                                       ; preds = %if.end, %entry
  %2 = load i32, i32* %new_fd, align 4, !dbg !172
  %call8 = call i32 @serveconnection(i32 %2), !dbg !175
  %cmp = icmp eq i32 %call8, -1, !dbg !176
  br i1 %cmp, label %if.then, label %if.end, !dbg !177

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !178

if.end:                                           ; preds = %while.body
  %3 = load i32, i32* %new_fd, align 4, !dbg !179
  %call10 = call i32 @close(i32 %3), !dbg !180
  br label %while.body, !dbg !171, !llvm.loop !181

while.end:                                        ; preds = %if.then
  ret i32 0, !dbg !183
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local noalias align 16 i8* @malloc(i64) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local void @closelog() #3

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @inetd_server() #0 !dbg !184 {
entry:
  %their_addr = alloca %struct.sockaddr_in, align 4
  %sval = alloca i64, align 8
  %pw = alloca %struct.passwd*, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in* %their_addr, metadata !185, metadata !DIExpression()), !dbg !186
  call void @llvm.dbg.declare(metadata i64* %sval, metadata !187, metadata !DIExpression()), !dbg !190
  store i64 16, i64* %sval, align 8, !dbg !190
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !191, metadata !DIExpression()), !dbg !192
  %0 = bitcast %struct.sockaddr_in* %their_addr to %struct.sockaddr*, !dbg !193
  %1 = bitcast i64* %sval to i32*, !dbg !195
  %call = call i32 @getpeername(i32 0, %struct.sockaddr* %0, i32* %1) #9, !dbg !196
  %cmp = icmp slt i32 %call, 0, !dbg !197
  br i1 %cmp, label %if.then, label %if.end, !dbg !198

if.then:                                          ; preds = %entry
  call void @exit(i32 1) #10, !dbg !199
  unreachable, !dbg !199

if.end:                                           ; preds = %entry
  %call1 = call %struct.passwd* @getpwnam(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)), !dbg !201
  store %struct.passwd* %call1, %struct.passwd** %pw, align 8, !dbg !203
  %cmp2 = icmp ne %struct.passwd* %call1, null, !dbg !204
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !205

if.then3:                                         ; preds = %if.end
  %2 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !206
  %pw_gid = getelementptr inbounds %struct.passwd, %struct.passwd* %2, i32 0, i32 3, !dbg !208
  %3 = load i32, i32* %pw_gid, align 4, !dbg !208
  %call4 = call i32 @setgid(i32 %3) #9, !dbg !209
  %4 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !210
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %4, i32 0, i32 2, !dbg !211
  %5 = load i32, i32* %pw_uid, align 8, !dbg !211
  %call5 = call i32 @setuid(i32 %5) #9, !dbg !212
  br label %if.end6, !dbg !213

if.end6:                                          ; preds = %if.then3, %if.end
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %their_addr, i32 0, i32 2, !dbg !214
  %coerce.dive = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr, i32 0, i32 0, !dbg !215
  %6 = load i32, i32* %coerce.dive, align 4, !dbg !215
  %coerce.val.ii = zext i32 %6 to i64, !dbg !215
  %call7 = call i32 bitcast (i32 (...)* @inet_ntoa to i32 (i64)*)(i64 %coerce.val.ii), !dbg !215
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i32 %call7), !dbg !216
  %sin_addr8 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %their_addr, i32 0, i32 2, !dbg !217
  %coerce.dive9 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr8, i32 0, i32 0, !dbg !218
  %7 = load i32, i32* %coerce.dive9, align 4, !dbg !218
  %coerce.val.ii10 = zext i32 %7 to i64, !dbg !218
  %call11 = call i32 bitcast (i32 (...)* @inet_ntoa to i32 (i64)*)(i64 %coerce.val.ii10), !dbg !218
  %conv = sext i32 %call11 to i64, !dbg !219
  %8 = inttoptr i64 %conv to i8*, !dbg !219
  %call12 = call i32 @setenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8* %8, i32 1) #9, !dbg !220
  %call13 = call i32 @serveconnection(i32 0), !dbg !221
  ret i32 0, !dbg !222
}

; Function Attrs: nounwind
declare dso_local i32 @getpeername(i32, %struct.sockaddr*, i32*) #2

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

declare dso_local %struct.passwd* @getpwnam(i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @setgid(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @setuid(i32) #2

declare dso_local i32 @inet_ntoa(...) #3

; Function Attrs: nounwind
declare dso_local i32 @setenv(i8*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @signal_handler(i32 %signum) #0 !dbg !223 {
entry:
  %signum.addr = alloca i32, align 4
  store i32 %signum, i32* %signum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %signum.addr, metadata !226, metadata !DIExpression()), !dbg !227
  %0 = load i32, i32* %signum.addr, align 4, !dbg !228
  %cmp = icmp eq i32 %0, 17, !dbg !230
  br i1 %cmp, label %if.then, label %if.else, !dbg !231

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !232

while.cond:                                       ; preds = %while.body, %if.then
  %call = call i32 @waitpid(i32 -1, i32* null, i32 1), !dbg !234
  %cmp1 = icmp sgt i32 %call, 0, !dbg !235
  br i1 %cmp1, label %while.body, label %while.end, !dbg !232

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !232, !llvm.loop !236

while.end:                                        ; preds = %while.cond
  br label %if.end10, !dbg !239

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %signum.addr, align 4, !dbg !240
  %cmp2 = icmp eq i32 %1, 1, !dbg !242
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !243

if.then3:                                         ; preds = %if.else
  call void @readinconfig(), !dbg !244
  br label %if.end, !dbg !244

if.else4:                                         ; preds = %if.else
  br label %while.cond5, !dbg !245

while.cond5:                                      ; preds = %while.body8, %if.else4
  %call6 = call i32 @waitpid(i32 -1, i32* null, i32 1), !dbg !247
  %cmp7 = icmp sgt i32 %call6, 0, !dbg !248
  br i1 %cmp7, label %while.body8, label %while.end9, !dbg !245

while.body8:                                      ; preds = %while.cond5
  br label %while.cond5, !dbg !245, !llvm.loop !249

while.end9:                                       ; preds = %while.cond5
  call void @exit(i32 0) #10, !dbg !251
  unreachable, !dbg !251

if.end:                                           ; preds = %if.then3
  br label %if.end10

if.end10:                                         ; preds = %if.end, %while.end
  ret void, !dbg !252
}

declare dso_local i32 @waitpid(i32, i32*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @serveconnection(i32 %sockfd) #0 !dbg !253 {
entry:
  %retval = alloca i32, align 4
  %sockfd.addr = alloca i32, align 4
  %in = alloca %struct._IO_FILE*, align 8
  %tempdata = alloca [8192 x i8], align 1
  %ptr = alloca i8*, align 8
  %ptr2 = alloca i8*, align 8
  %host_ptr1 = alloca i8*, align 8
  %host_ptr2 = alloca i8*, align 8
  %tempstring = alloca [8192 x i8], align 1
  %mimetype = alloca [50 x i8], align 1
  %filename = alloca [255 x i8], align 1
  %loop = alloca i32, align 4
  %flag = alloca i32, align 4
  %numbytes = alloca i32, align 4
  %sa = alloca %struct.sockaddr_in, align 4
  %addrlen = alloca i32, align 4
  %thehost = alloca %struct.t_vhost*, align 8
  %ret = alloca i32, align 4
  %opt = alloca i32, align 4
  store i32 %sockfd, i32* %sockfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sockfd.addr, metadata !256, metadata !DIExpression()), !dbg !257
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %in, metadata !258, metadata !DIExpression()), !dbg !312
  call void @llvm.dbg.declare(metadata [8192 x i8]* %tempdata, metadata !313, metadata !DIExpression()), !dbg !317
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !318, metadata !DIExpression()), !dbg !319
  call void @llvm.dbg.declare(metadata i8** %ptr2, metadata !320, metadata !DIExpression()), !dbg !321
  call void @llvm.dbg.declare(metadata i8** %host_ptr1, metadata !322, metadata !DIExpression()), !dbg !323
  call void @llvm.dbg.declare(metadata i8** %host_ptr2, metadata !324, metadata !DIExpression()), !dbg !325
  call void @llvm.dbg.declare(metadata [8192 x i8]* %tempstring, metadata !326, metadata !DIExpression()), !dbg !327
  call void @llvm.dbg.declare(metadata [50 x i8]* %mimetype, metadata !328, metadata !DIExpression()), !dbg !332
  call void @llvm.dbg.declare(metadata [255 x i8]* %filename, metadata !333, metadata !DIExpression()), !dbg !334
  call void @llvm.dbg.declare(metadata i32* %loop, metadata !335, metadata !DIExpression()), !dbg !336
  store i32 0, i32* %loop, align 4, !dbg !336
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !337, metadata !DIExpression()), !dbg !338
  store i32 0, i32* %flag, align 4, !dbg !338
  call void @llvm.dbg.declare(metadata i32* %numbytes, metadata !339, metadata !DIExpression()), !dbg !340
  store i32 0, i32* %numbytes, align 4, !dbg !340
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in* %sa, metadata !341, metadata !DIExpression()), !dbg !351
  call void @llvm.dbg.declare(metadata i32* %addrlen, metadata !352, metadata !DIExpression()), !dbg !353
  store i32 16, i32* %addrlen, align 4, !dbg !353
  call void @llvm.dbg.declare(metadata %struct.t_vhost** %thehost, metadata !354, metadata !DIExpression()), !dbg !364
  %0 = bitcast [255 x i8]* %filename to i8*, !dbg !365
  call void @klee_make_symbolic(i8* %0, i64 255, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)), !dbg !366
  %1 = bitcast [8192 x i8]* %tempstring to i8*, !dbg !367
  call void @klee_make_symbolic(i8* %1, i64 8192, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.9, i64 0, i64 0)), !dbg !368
  %2 = bitcast [50 x i8]* %mimetype to i8*, !dbg !369
  call void @klee_make_symbolic(i8* %2, i64 50, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.10, i64 0, i64 0)), !dbg !370
  %3 = bitcast [8192 x i8]* %tempdata to i8*, !dbg !371
  call void @klee_make_symbolic(i8* %3, i64 8192, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3.11, i64 0, i64 0)), !dbg !372
  %4 = bitcast i8** %ptr to i8*, !dbg !373
  call void @klee_make_symbolic(i8* %4, i64 8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.12, i64 0, i64 0)), !dbg !374
  %5 = bitcast i8** %ptr2 to i8*, !dbg !375
  call void @klee_make_symbolic(i8* %5, i64 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.13, i64 0, i64 0)), !dbg !376
  %6 = bitcast i8** %host_ptr1 to i8*, !dbg !377
  call void @klee_make_symbolic(i8* %6, i64 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.14, i64 0, i64 0)), !dbg !378
  %7 = bitcast i8** %host_ptr2 to i8*, !dbg !379
  call void @klee_make_symbolic(i8* %7, i64 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.15, i64 0, i64 0)), !dbg !380
  %8 = bitcast %struct._IO_FILE** %in to i8*, !dbg !381
  call void @klee_make_symbolic(i8* %8, i64 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8.16, i64 0, i64 0)), !dbg !382
  %9 = bitcast i32* %loop to i8*, !dbg !383
  call void @klee_make_symbolic(i8* %9, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)), !dbg !384
  %10 = bitcast i32* %flag to i8*, !dbg !385
  call void @klee_make_symbolic(i8* %10, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !386
  %11 = bitcast i32* %numbytes to i8*, !dbg !387
  call void @klee_make_symbolic(i8* %11, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0)), !dbg !388
  %12 = bitcast %struct.sockaddr_in* %sa to i8*, !dbg !389
  call void @klee_make_symbolic(i8* %12, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0)), !dbg !390
  %13 = bitcast i32* %addrlen to i8*, !dbg !391
  call void @klee_make_symbolic(i8* %13, i64 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0)), !dbg !392
  %14 = bitcast %struct.t_vhost** %thehost to i8*, !dbg !393
  call void @klee_make_symbolic(i8* %14, i64 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0)), !dbg !394
  store %struct.t_vhost* @defaulthost, %struct.t_vhost** %thehost, align 8, !dbg !395
  %15 = load i8*, i8** %ptr, align 8, !dbg !396
  %cmp = icmp eq i8* %15, null, !dbg !398
  br i1 %cmp, label %if.then, label %if.end, !dbg !399

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [255 x i8], [255 x i8]* %filename, i64 0, i64 0, !dbg !400
  %call = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([255 x i8], [255 x i8]* @SERVERROOT, i64 0, i64 0)) #9, !dbg !402
  %arraydecay1 = getelementptr inbounds [255 x i8], [255 x i8]* %filename, i64 0, i64 0, !dbg !403
  %call2 = call i8* @strcat(i8* %arraydecay1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #9, !dbg !404
  br label %sendpage, !dbg !405

if.end:                                           ; preds = %entry
  %arraydecay3 = getelementptr inbounds [8192 x i8], [8192 x i8]* %tempdata, i64 0, i64 0, !dbg !406
  %call4 = call i8* @strstr(i8* %arraydecay3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0)) #11, !dbg !407
  store i8* %call4, i8** %host_ptr1, align 8, !dbg !408
  %16 = load i8*, i8** %host_ptr1, align 8, !dbg !409
  %tobool = icmp ne i8* %16, null, !dbg !409
  br i1 %tobool, label %if.then5, label %if.else, !dbg !411

if.then5:                                         ; preds = %if.end
  %17 = load i8*, i8** %host_ptr1, align 8, !dbg !412
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 6, !dbg !414
  %call6 = call i8* @strtok(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0)) #9, !dbg !415
  store i8* %call6, i8** %host_ptr2, align 8, !dbg !416
  store i32 0, i32* %loop, align 4, !dbg !417
  br label %for.cond, !dbg !419

for.cond:                                         ; preds = %for.inc, %if.then5
  %18 = load i32, i32* %loop, align 4, !dbg !420
  %conv = zext i32 %18 to i64, !dbg !420
  %19 = load i64, i64* @no_vhosts, align 8, !dbg !422
  %cmp7 = icmp ult i64 %conv, %19, !dbg !423
  br i1 %cmp7, label %for.body, label %for.end, !dbg !424

for.body:                                         ; preds = %for.cond
  %20 = load %struct.t_vhost*, %struct.t_vhost** @vhosts, align 8, !dbg !425
  %21 = load i32, i32* %loop, align 4, !dbg !427
  %idxprom = zext i32 %21 to i64, !dbg !425
  %arrayidx = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %20, i64 %idxprom, !dbg !425
  %host = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %arrayidx, i32 0, i32 0, !dbg !428
  %arraydecay9 = getelementptr inbounds [255 x i8], [255 x i8]* %host, i64 0, i64 0, !dbg !425
  %22 = load i8*, i8** %host_ptr2, align 8, !dbg !429
  %call10 = call i32 @gstricmp(i8* %arraydecay9, i8* %22), !dbg !430
  %tobool11 = icmp ne i32 %call10, 0, !dbg !430
  br i1 %tobool11, label %if.end15, label %if.then12, !dbg !431

if.then12:                                        ; preds = %for.body
  %23 = load %struct.t_vhost*, %struct.t_vhost** @vhosts, align 8, !dbg !432
  %24 = load i32, i32* %loop, align 4, !dbg !433
  %idxprom13 = zext i32 %24 to i64, !dbg !432
  %arrayidx14 = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %23, i64 %idxprom13, !dbg !432
  store %struct.t_vhost* %arrayidx14, %struct.t_vhost** %thehost, align 8, !dbg !434
  br label %if.end15, !dbg !435

if.end15:                                         ; preds = %if.then12, %for.body
  br label %for.inc, !dbg !436

for.inc:                                          ; preds = %if.end15
  %25 = load i32, i32* %loop, align 4, !dbg !437
  %inc = add i32 %25, 1, !dbg !437
  store i32 %inc, i32* %loop, align 4, !dbg !437
  br label %for.cond, !dbg !438, !llvm.loop !439

for.end:                                          ; preds = %for.cond
  br label %if.end16, !dbg !441

if.else:                                          ; preds = %if.end
  store %struct.t_vhost* @defaulthost, %struct.t_vhost** %thehost, align 8, !dbg !442
  br label %if.end16

if.end16:                                         ; preds = %if.else, %for.end
  %26 = load i32, i32* %sockfd.addr, align 4, !dbg !443
  %27 = bitcast %struct.sockaddr_in* %sa to %struct.sockaddr*, !dbg !444
  %call17 = call i32 @getpeername(i32 %26, %struct.sockaddr* %27, i32* %addrlen) #9, !dbg !445
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !446, metadata !DIExpression()), !dbg !447
  %28 = bitcast i32* %ret to i8*, !dbg !448
  call void @klee_make_symbolic(i8* %28, i64 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)), !dbg !449
  %29 = load i32, i32* %ret, align 4, !dbg !450
  %30 = load i8*, i8** %ptr, align 8, !dbg !451
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0), i32 %29, i8* %30), !dbg !452
  call void @llvm.dbg.declare(metadata i32* %opt, metadata !453, metadata !DIExpression()), !dbg !454
  %31 = bitcast i32* %opt to i8*, !dbg !455
  call void @klee_make_symbolic(i8* %31, i64 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0)), !dbg !456
  %32 = load i32, i32* %opt, align 4, !dbg !457
  %tobool18 = icmp ne i32 %32, 0, !dbg !457
  br i1 %tobool18, label %if.then19, label %if.end62, !dbg !459

if.then19:                                        ; preds = %if.end16
  %arraydecay20 = getelementptr inbounds [255 x i8], [255 x i8]* %filename, i64 0, i64 0, !dbg !460
  %call21 = call i32 @does_file_exist(i8* %arraydecay20), !dbg !463
  %cmp22 = icmp eq i32 %call21, 1, !dbg !464
  br i1 %cmp22, label %land.lhs.true, label %if.end59, !dbg !465

land.lhs.true:                                    ; preds = %if.then19
  %arraydecay24 = getelementptr inbounds [255 x i8], [255 x i8]* %filename, i64 0, i64 0, !dbg !466
  %call25 = call i32 @isDirectory(i8* %arraydecay24), !dbg !467
  %cmp26 = icmp eq i32 %call25, 0, !dbg !468
  br i1 %cmp26, label %if.then28, label %if.end59, !dbg !469

if.then28:                                        ; preds = %land.lhs.true
  %33 = load i32, i32* %sockfd.addr, align 4, !dbg !470
  %call29 = call i64 @send(i32 %33, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), i64 16, i32 0), !dbg !473
  %cmp30 = icmp eq i64 %call29, -1, !dbg !474
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !475

if.then32:                                        ; preds = %if.then28
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %in, align 8, !dbg !476
  %call33 = call i32 @fclose(%struct._IO_FILE* %34), !dbg !478
  store i32 -1, i32* %retval, align 4, !dbg !479
  br label %return, !dbg !479

if.end34:                                         ; preds = %if.then28
  %35 = load i32, i32* %sockfd.addr, align 4, !dbg !480
  %call35 = call i64 @send(i32 %35, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i64 32, i32 0), !dbg !482
  %cmp36 = icmp eq i64 %call35, -1, !dbg !483
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !484

if.then38:                                        ; preds = %if.end34
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %in, align 8, !dbg !485
  %call39 = call i32 @fclose(%struct._IO_FILE* %36), !dbg !487
  store i32 -1, i32* %retval, align 4, !dbg !488
  br label %return, !dbg !488

if.end40:                                         ; preds = %if.end34
  %37 = load i32, i32* %sockfd.addr, align 4, !dbg !489
  %call41 = call i32 @dup2(i32 %37, i32 0) #9, !dbg !491
  %cmp42 = icmp ne i32 0, %call41, !dbg !492
  br i1 %cmp42, label %if.then47, label %lor.lhs.false, !dbg !493

lor.lhs.false:                                    ; preds = %if.end40
  %38 = load i32, i32* %sockfd.addr, align 4, !dbg !494
  %call44 = call i32 @dup2(i32 %38, i32 1) #9, !dbg !495
  %cmp45 = icmp ne i32 1, %call44, !dbg !496
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !497

if.then47:                                        ; preds = %lor.lhs.false, %if.end40
  store i32 -1, i32* %retval, align 4, !dbg !498
  br label %return, !dbg !498

if.end48:                                         ; preds = %lor.lhs.false
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !499
  call void @setbuf(%struct._IO_FILE* %39, i8* null) #9, !dbg !500
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !501
  call void @setbuf(%struct._IO_FILE* %40, i8* null) #9, !dbg !502
  %41 = load i32, i32* %flag, align 4, !dbg !503
  %cmp49 = icmp eq i32 %41, 1, !dbg !505
  br i1 %cmp49, label %if.then51, label %if.end54, !dbg !506

if.then51:                                        ; preds = %if.end48
  %42 = load i8*, i8** %ptr2, align 8, !dbg !507
  %add.ptr52 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !508
  %call53 = call i32 @setenv(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8* %add.ptr52, i32 1) #9, !dbg !509
  br label %if.end54, !dbg !509

if.end54:                                         ; preds = %if.then51, %if.end48
  %43 = load %struct.t_vhost*, %struct.t_vhost** %thehost, align 8, !dbg !510
  %CGIBINROOT = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %43, i32 0, i32 4, !dbg !511
  %arraydecay55 = getelementptr inbounds [255 x i8], [255 x i8]* %CGIBINROOT, i64 0, i64 0, !dbg !510
  %call56 = call i32 @chdir(i8* %arraydecay55) #9, !dbg !512
  %arraydecay57 = getelementptr inbounds [255 x i8], [255 x i8]* %filename, i64 0, i64 0, !dbg !513
  %call58 = call i32 (i8*, i8*, ...) @execl(i8* %arraydecay57, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0)) #9, !dbg !514
  br label %if.end59, !dbg !515

if.end59:                                         ; preds = %if.end54, %land.lhs.true, %if.then19
  %arraydecay60 = getelementptr inbounds [255 x i8], [255 x i8]* %filename, i64 0, i64 0, !dbg !516
  %call61 = call i8* @strcat(i8* %arraydecay60, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !517
  br label %sendpage, !dbg !518

if.end62:                                         ; preds = %if.end16
  %arraydecay63 = getelementptr inbounds [255 x i8], [255 x i8]* %filename, i64 0, i64 0, !dbg !519
  %call64 = call i32 @does_file_exist(i8* %arraydecay63), !dbg !521
  %cmp65 = icmp eq i32 %call64, 0, !dbg !522
  br i1 %cmp65, label %if.then67, label %if.end81, !dbg !523

if.then67:                                        ; preds = %if.end62
  %arraydecay68 = getelementptr inbounds [255 x i8], [255 x i8]* %filename, i64 0, i64 0, !dbg !524
  %call69 = call i32 @does_file_exist(i8* %arraydecay68), !dbg !527
  %cmp70 = icmp eq i32 %call69, 0, !dbg !528
  br i1 %cmp70, label %if.then72, label %if.end80, !dbg !529

if.then72:                                        ; preds = %if.then67
  %arraydecay73 = getelementptr inbounds [255 x i8], [255 x i8]* %filename, i64 0, i64 0, !dbg !530
  %call74 = call i32 @isDirectory(i8* %arraydecay73), !dbg !533
  %cmp75 = icmp eq i32 %call74, 1, !dbg !534
  br i1 %cmp75, label %if.then77, label %if.end79, !dbg !535

if.then77:                                        ; preds = %if.then72
  %arraydecay78 = getelementptr inbounds [255 x i8], [255 x i8]* %filename, i64 0, i64 0, !dbg !536
  %44 = load i32, i32* %sockfd.addr, align 4, !dbg !538
  %45 = load %struct.t_vhost*, %struct.t_vhost** %thehost, align 8, !dbg !539
  call void @showdir(i8* %arraydecay78, i32 %44, %struct.t_vhost* %45), !dbg !540
  store i32 0, i32* %retval, align 4, !dbg !541
  br label %return, !dbg !541

if.end79:                                         ; preds = %if.then72
  br label %if.end80, !dbg !542

if.end80:                                         ; preds = %if.end79, %if.then67
  br label %if.end81, !dbg !543

if.end81:                                         ; preds = %if.end80, %if.end62
  br label %sendpage, !dbg !544

sendpage:                                         ; preds = %if.end81, %if.end59, %if.then
  call void @llvm.dbg.label(metadata !545), !dbg !546
  %46 = load i32, i32* %sockfd.addr, align 4, !dbg !547
  %call82 = call i32 @close(i32 %46), !dbg !548
  store i32 0, i32* %retval, align 4, !dbg !549
  br label %return, !dbg !549

return:                                           ; preds = %sendpage, %if.then77, %if.then47, %if.then38, %if.then32
  %47 = load i32, i32* %retval, align 4, !dbg !550
  ret i32 %47, !dbg !550
}

declare dso_local void @klee_make_symbolic(i8*, i64, i8*) #3

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8*, i8*) #2

; Function Attrs: nounwind readonly willreturn
declare dso_local i8* @strstr(i8*, i8*) #5

; Function Attrs: nounwind
declare dso_local i8* @strtok(i8*, i8*) #2

declare dso_local i64 @send(i32, i8*, i64, i32) #3

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @dup2(i32, i32) #2

; Function Attrs: nounwind
declare dso_local void @setbuf(%struct._IO_FILE*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @chdir(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @execl(i8*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @showdir(i8* %directory, i32 %sockfd, %struct.t_vhost* %thehost) #0 !dbg !551 {
entry:
  %directory.addr = alloca i8*, align 8
  %sockfd.addr = alloca i32, align 4
  %thehost.addr = alloca %struct.t_vhost*, align 8
  %namelist = alloca %struct.dirent**, align 8
  %n = alloca i32, align 4
  %loop = alloca i32, align 4
  %size = alloca i64, align 8
  %in = alloca %struct._IO_FILE*, align 8
  %tempstring = alloca [255 x i8], align 1
  %dirheader = alloca [2048 x i8], align 1
  %dirfooter = alloca [191 x i8], align 1
  store i8* %directory, i8** %directory.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %directory.addr, metadata !554, metadata !DIExpression()), !dbg !555
  store i32 %sockfd, i32* %sockfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sockfd.addr, metadata !556, metadata !DIExpression()), !dbg !557
  store %struct.t_vhost* %thehost, %struct.t_vhost** %thehost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.t_vhost** %thehost.addr, metadata !558, metadata !DIExpression()), !dbg !559
  call void @llvm.dbg.declare(metadata %struct.dirent*** %namelist, metadata !560, metadata !DIExpression()), !dbg !575
  call void @llvm.dbg.declare(metadata i32* %n, metadata !576, metadata !DIExpression()), !dbg !577
  call void @llvm.dbg.declare(metadata i32* %loop, metadata !578, metadata !DIExpression()), !dbg !579
  call void @llvm.dbg.declare(metadata i64* %size, metadata !580, metadata !DIExpression()), !dbg !581
  store i64 0, i64* %size, align 8, !dbg !581
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %in, metadata !582, metadata !DIExpression()), !dbg !583
  call void @llvm.dbg.declare(metadata [255 x i8]* %tempstring, metadata !584, metadata !DIExpression()), !dbg !585
  call void @llvm.dbg.declare(metadata [2048 x i8]* %dirheader, metadata !586, metadata !DIExpression()), !dbg !590
  call void @llvm.dbg.declare(metadata [191 x i8]* %dirfooter, metadata !591, metadata !DIExpression()), !dbg !596
  %0 = bitcast [191 x i8]* %dirfooter to i8*, !dbg !596
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([191 x i8], [191 x i8]* @__const.showdir.dirfooter, i32 0, i32 0), i64 191, i1 false), !dbg !596
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %dirheader, i64 0, i64 0, !dbg !597
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 0, i64 2048, i1 false), !dbg !597
  %arraydecay1 = getelementptr inbounds [2048 x i8], [2048 x i8]* %dirheader, i64 0, i64 0, !dbg !598
  %1 = load i8*, i8** %directory.addr, align 8, !dbg !599
  %2 = load %struct.t_vhost*, %struct.t_vhost** %thehost.addr, align 8, !dbg !600
  %DOCUMENTROOT = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %2, i32 0, i32 1, !dbg !601
  %arraydecay2 = getelementptr inbounds [255 x i8], [255 x i8]* %DOCUMENTROOT, i64 0, i64 0, !dbg !600
  %call = call i64 @strlen(i8* %arraydecay2) #11, !dbg !602
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %call, !dbg !603
  %call3 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay1, i8* getelementptr inbounds ([377 x i8], [377 x i8]* @.str.27, i64 0, i64 0), i8* %add.ptr) #9, !dbg !604
  %3 = load i32, i32* %sockfd.addr, align 4, !dbg !605
  %arraydecay4 = getelementptr inbounds [2048 x i8], [2048 x i8]* %dirheader, i64 0, i64 0, !dbg !607
  %call5 = call i64 @send(i32 %3, i8* %arraydecay4, i64 2048, i32 0), !dbg !608
  %cmp = icmp eq i64 %call5, -1, !dbg !609
  br i1 %cmp, label %if.then, label %if.end, !dbg !610

if.then:                                          ; preds = %entry
  br label %return, !dbg !611

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %directory.addr, align 8, !dbg !612
  %call6 = call i32 @scandir(i8* %4, %struct.dirent*** %namelist, i32 (%struct.dirent*)* null, i32 (%struct.dirent**, %struct.dirent**)* @alphasort), !dbg !613
  store i32 %call6, i32* %n, align 4, !dbg !614
  %5 = load %struct.t_vhost*, %struct.t_vhost** %thehost.addr, align 8, !dbg !615
  %DOCUMENTROOT7 = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %5, i32 0, i32 1, !dbg !616
  %arraydecay8 = getelementptr inbounds [255 x i8], [255 x i8]* %DOCUMENTROOT7, i64 0, i64 0, !dbg !615
  %call9 = call i64 @strlen(i8* %arraydecay8) #11, !dbg !617
  %6 = load i8*, i8** %directory.addr, align 8, !dbg !618
  %add.ptr10 = getelementptr inbounds i8, i8* %6, i64 %call9, !dbg !618
  store i8* %add.ptr10, i8** %directory.addr, align 8, !dbg !618
  %7 = load i32, i32* %n, align 4, !dbg !619
  %cmp11 = icmp slt i32 %7, 0, !dbg !621
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !622

if.then12:                                        ; preds = %if.end
  call void @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0)), !dbg !623
  br label %if.end42, !dbg !623

if.else:                                          ; preds = %if.end
  store i32 0, i32* %loop, align 4, !dbg !624
  br label %for.cond, !dbg !626

for.cond:                                         ; preds = %for.inc, %if.else
  %8 = load i32, i32* %loop, align 4, !dbg !627
  %9 = load i32, i32* %n, align 4, !dbg !629
  %cmp13 = icmp slt i32 %8, %9, !dbg !630
  br i1 %cmp13, label %for.body, label %for.end, !dbg !631

for.body:                                         ; preds = %for.cond
  %arraydecay14 = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !632
  %10 = load %struct.t_vhost*, %struct.t_vhost** %thehost.addr, align 8, !dbg !634
  %DOCUMENTROOT15 = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %10, i32 0, i32 1, !dbg !635
  %arraydecay16 = getelementptr inbounds [255 x i8], [255 x i8]* %DOCUMENTROOT15, i64 0, i64 0, !dbg !634
  %11 = load i8*, i8** %directory.addr, align 8, !dbg !636
  %12 = load %struct.dirent**, %struct.dirent*** %namelist, align 8, !dbg !637
  %13 = load i32, i32* %loop, align 4, !dbg !638
  %idxprom = sext i32 %13 to i64, !dbg !637
  %arrayidx = getelementptr inbounds %struct.dirent*, %struct.dirent** %12, i64 %idxprom, !dbg !637
  %14 = load %struct.dirent*, %struct.dirent** %arrayidx, align 8, !dbg !637
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %14, i32 0, i32 4, !dbg !639
  %arraydecay17 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !637
  %call18 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i8* %arraydecay16, i8* %11, i8* %arraydecay17) #9, !dbg !640
  %arraydecay19 = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !641
  %call20 = call i64 @get_file_size(i8* %arraydecay19), !dbg !642
  store i64 %call20, i64* %size, align 8, !dbg !643
  %arraydecay21 = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !644
  %call22 = call i32 @isDirectory(i8* %arraydecay21), !dbg !646
  %tobool = icmp ne i32 %call22, 0, !dbg !646
  br i1 %tobool, label %if.then23, label %if.end24, !dbg !647

if.then23:                                        ; preds = %for.body
  store i64 0, i64* %size, align 8, !dbg !648
  br label %if.end24, !dbg !649

if.end24:                                         ; preds = %if.then23, %for.body
  %arraydecay25 = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !650
  %15 = load i8*, i8** %directory.addr, align 8, !dbg !651
  %16 = load %struct.dirent**, %struct.dirent*** %namelist, align 8, !dbg !652
  %17 = load i32, i32* %loop, align 4, !dbg !653
  %idxprom26 = sext i32 %17 to i64, !dbg !652
  %arrayidx27 = getelementptr inbounds %struct.dirent*, %struct.dirent** %16, i64 %idxprom26, !dbg !652
  %18 = load %struct.dirent*, %struct.dirent** %arrayidx27, align 8, !dbg !652
  %d_name28 = getelementptr inbounds %struct.dirent, %struct.dirent* %18, i32 0, i32 4, !dbg !654
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name28, i64 0, i64 0, !dbg !652
  %19 = load %struct.dirent**, %struct.dirent*** %namelist, align 8, !dbg !655
  %20 = load i32, i32* %loop, align 4, !dbg !656
  %idxprom30 = sext i32 %20 to i64, !dbg !655
  %arrayidx31 = getelementptr inbounds %struct.dirent*, %struct.dirent** %19, i64 %idxprom30, !dbg !655
  %21 = load %struct.dirent*, %struct.dirent** %arrayidx31, align 8, !dbg !655
  %d_name32 = getelementptr inbounds %struct.dirent, %struct.dirent* %21, i32 0, i32 4, !dbg !657
  %arraydecay33 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name32, i64 0, i64 0, !dbg !655
  %22 = load i64, i64* %size, align 8, !dbg !658
  %call34 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay25, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.30, i64 0, i64 0), i8* %15, i8* %arraydecay29, i8* %arraydecay33, i64 %22) #9, !dbg !659
  %23 = load i32, i32* %sockfd.addr, align 4, !dbg !660
  %arraydecay35 = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !662
  %arraydecay36 = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !663
  %call37 = call i64 @strlen(i8* %arraydecay36) #11, !dbg !664
  %call38 = call i64 @send(i32 %23, i8* %arraydecay35, i64 %call37, i32 0), !dbg !665
  %cmp39 = icmp eq i64 %call38, -1, !dbg !666
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !667

if.then40:                                        ; preds = %if.end24
  br label %return, !dbg !668

if.end41:                                         ; preds = %if.end24
  br label %for.inc, !dbg !669

for.inc:                                          ; preds = %if.end41
  %24 = load i32, i32* %loop, align 4, !dbg !670
  %inc = add nsw i32 %24, 1, !dbg !670
  store i32 %inc, i32* %loop, align 4, !dbg !670
  br label %for.cond, !dbg !671, !llvm.loop !672

for.end:                                          ; preds = %for.cond
  br label %if.end42

if.end42:                                         ; preds = %for.end, %if.then12
  %25 = load i32, i32* %sockfd.addr, align 4, !dbg !674
  %arraydecay43 = getelementptr inbounds [191 x i8], [191 x i8]* %dirfooter, i64 0, i64 0, !dbg !675
  %call44 = call i64 @send(i32 %25, i8* %arraydecay43, i64 191, i32 0), !dbg !676
  br label %return, !dbg !677

return:                                           ; preds = %if.end42, %if.then40, %if.then
  ret void, !dbg !677
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: nounwind readonly willreturn
declare dso_local i64 @strlen(i8*) #5

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @alphasort(%struct.dirent**, %struct.dirent**) #5

declare dso_local i32 @scandir(i8*, %struct.dirent***, i32 (%struct.dirent*)*, i32 (%struct.dirent**, %struct.dirent**)*) #3

declare dso_local void @perror(i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @getmimetype(i8* %filename, i8* %mimetype) #0 !dbg !678 {
entry:
  %filename.addr = alloca i8*, align 8
  %mimetype.addr = alloca i8*, align 8
  %tempstring = alloca [50 x i8], align 1
  %tempstring2 = alloca [50 x i8], align 1
  %loop = alloca i32, align 4
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !681, metadata !DIExpression()), !dbg !682
  store i8* %mimetype, i8** %mimetype.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mimetype.addr, metadata !683, metadata !DIExpression()), !dbg !684
  call void @llvm.dbg.declare(metadata [50 x i8]* %tempstring, metadata !685, metadata !DIExpression()), !dbg !686
  call void @llvm.dbg.declare(metadata [50 x i8]* %tempstring2, metadata !687, metadata !DIExpression()), !dbg !688
  call void @llvm.dbg.declare(metadata i32* %loop, metadata !689, metadata !DIExpression()), !dbg !690
  store i32 0, i32* %loop, align 4, !dbg !690
  %arraydecay = getelementptr inbounds [50 x i8], [50 x i8]* %tempstring, i64 0, i64 0, !dbg !691
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 0, i64 50, i1 false), !dbg !691
  store i32 1, i32* %loop, align 4, !dbg !692
  br label %for.cond, !dbg !694

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %loop, align 4, !dbg !695
  %conv = zext i32 %0 to i64, !dbg !695
  %1 = load i8*, i8** %filename.addr, align 8, !dbg !697
  %call = call i64 @strlen(i8* %1) #11, !dbg !698
  %cmp = icmp ult i64 %conv, %call, !dbg !699
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !700

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %filename.addr, align 8, !dbg !701
  %3 = load i8*, i8** %filename.addr, align 8, !dbg !702
  %call2 = call i64 @strlen(i8* %3) #11, !dbg !703
  %4 = load i32, i32* %loop, align 4, !dbg !704
  %conv3 = zext i32 %4 to i64, !dbg !704
  %sub = sub i64 %call2, %conv3, !dbg !705
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !701
  %5 = load i8, i8* %arrayidx, align 1, !dbg !701
  %conv4 = zext i8 %5 to i32, !dbg !701
  %cmp5 = icmp ne i32 %conv4, 46, !dbg !706
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %6 = phi i1 [ false, %for.cond ], [ %cmp5, %land.rhs ], !dbg !707
  br i1 %6, label %for.body, label %for.end, !dbg !708

for.body:                                         ; preds = %land.end
  %7 = load i8*, i8** %filename.addr, align 8, !dbg !709
  %8 = load i8*, i8** %filename.addr, align 8, !dbg !710
  %call7 = call i64 @strlen(i8* %8) #11, !dbg !711
  %9 = load i32, i32* %loop, align 4, !dbg !712
  %conv8 = zext i32 %9 to i64, !dbg !712
  %sub9 = sub i64 %call7, %conv8, !dbg !713
  %arrayidx10 = getelementptr inbounds i8, i8* %7, i64 %sub9, !dbg !709
  %10 = load i8, i8* %arrayidx10, align 1, !dbg !709
  %11 = load i32, i32* %loop, align 4, !dbg !714
  %sub11 = sub i32 %11, 1, !dbg !715
  %idxprom = zext i32 %sub11 to i64, !dbg !716
  %arrayidx12 = getelementptr inbounds [50 x i8], [50 x i8]* %tempstring, i64 0, i64 %idxprom, !dbg !716
  store i8 %10, i8* %arrayidx12, align 1, !dbg !717
  br label %for.inc, !dbg !716

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %loop, align 4, !dbg !718
  %inc = add i32 %12, 1, !dbg !718
  store i32 %inc, i32* %loop, align 4, !dbg !718
  br label %for.cond, !dbg !719, !llvm.loop !720

for.end:                                          ; preds = %land.end
  store i32 0, i32* %loop, align 4, !dbg !722
  br label %for.cond13, !dbg !724

for.cond13:                                       ; preds = %for.inc28, %for.end
  %13 = load i32, i32* %loop, align 4, !dbg !725
  %conv14 = zext i32 %13 to i64, !dbg !725
  %arraydecay15 = getelementptr inbounds [50 x i8], [50 x i8]* %tempstring, i64 0, i64 0, !dbg !727
  %call16 = call i64 @strlen(i8* %arraydecay15) #11, !dbg !728
  %cmp17 = icmp ult i64 %conv14, %call16, !dbg !729
  br i1 %cmp17, label %for.body19, label %for.end30, !dbg !730

for.body19:                                       ; preds = %for.cond13
  %arraydecay20 = getelementptr inbounds [50 x i8], [50 x i8]* %tempstring, i64 0, i64 0, !dbg !731
  %call21 = call i64 @strlen(i8* %arraydecay20) #11, !dbg !732
  %14 = load i32, i32* %loop, align 4, !dbg !733
  %conv22 = zext i32 %14 to i64, !dbg !733
  %sub23 = sub i64 %call21, %conv22, !dbg !734
  %sub24 = sub i64 %sub23, 1, !dbg !735
  %arrayidx25 = getelementptr inbounds [50 x i8], [50 x i8]* %tempstring, i64 0, i64 %sub24, !dbg !736
  %15 = load i8, i8* %arrayidx25, align 1, !dbg !736
  %16 = load i32, i32* %loop, align 4, !dbg !737
  %idxprom26 = zext i32 %16 to i64, !dbg !738
  %arrayidx27 = getelementptr inbounds [50 x i8], [50 x i8]* %tempstring2, i64 0, i64 %idxprom26, !dbg !738
  store i8 %15, i8* %arrayidx27, align 1, !dbg !739
  br label %for.inc28, !dbg !738

for.inc28:                                        ; preds = %for.body19
  %17 = load i32, i32* %loop, align 4, !dbg !740
  %inc29 = add i32 %17, 1, !dbg !740
  store i32 %inc29, i32* %loop, align 4, !dbg !740
  br label %for.cond13, !dbg !741, !llvm.loop !742

for.end30:                                        ; preds = %for.cond13
  %18 = load i32, i32* %loop, align 4, !dbg !744
  %idxprom31 = zext i32 %18 to i64, !dbg !745
  %arrayidx32 = getelementptr inbounds [50 x i8], [50 x i8]* %tempstring2, i64 0, i64 %idxprom31, !dbg !745
  store i8 0, i8* %arrayidx32, align 1, !dbg !746
  store i32 0, i32* %loop, align 4, !dbg !747
  br label %for.cond33, !dbg !749

for.cond33:                                       ; preds = %for.inc49, %for.end30
  %19 = load i32, i32* %loop, align 4, !dbg !750
  %idxprom34 = zext i32 %19 to i64, !dbg !752
  %arrayidx35 = getelementptr inbounds [0 x [2 x [100 x i8]]], [0 x [2 x [100 x i8]]]* bitcast ([32 x [2 x [100 x i8]]]* @assocNames to [0 x [2 x [100 x i8]]]*), i64 0, i64 %idxprom34, !dbg !752
  %arrayidx36 = getelementptr inbounds [2 x [100 x i8]], [2 x [100 x i8]]* %arrayidx35, i64 0, i64 0, !dbg !752
  %arraydecay37 = getelementptr inbounds [100 x i8], [100 x i8]* %arrayidx36, i64 0, i64 0, !dbg !752
  %call38 = call i32 @strcmp(i8* %arraydecay37, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0)) #11, !dbg !753
  %tobool = icmp ne i32 %call38, 0, !dbg !753
  br i1 %tobool, label %land.rhs39, label %land.end47, !dbg !754

land.rhs39:                                       ; preds = %for.cond33
  %20 = load i32, i32* %loop, align 4, !dbg !755
  %idxprom40 = zext i32 %20 to i64, !dbg !756
  %arrayidx41 = getelementptr inbounds [0 x [2 x [100 x i8]]], [0 x [2 x [100 x i8]]]* bitcast ([32 x [2 x [100 x i8]]]* @assocNames to [0 x [2 x [100 x i8]]]*), i64 0, i64 %idxprom40, !dbg !756
  %arrayidx42 = getelementptr inbounds [2 x [100 x i8]], [2 x [100 x i8]]* %arrayidx41, i64 0, i64 0, !dbg !756
  %arraydecay43 = getelementptr inbounds [100 x i8], [100 x i8]* %arrayidx42, i64 0, i64 0, !dbg !756
  %arraydecay44 = getelementptr inbounds [50 x i8], [50 x i8]* %tempstring2, i64 0, i64 0, !dbg !757
  %call45 = call i32 @strcmp(i8* %arraydecay43, i8* %arraydecay44) #11, !dbg !758
  %tobool46 = icmp ne i32 %call45, 0, !dbg !754
  br label %land.end47

land.end47:                                       ; preds = %land.rhs39, %for.cond33
  %21 = phi i1 [ false, %for.cond33 ], [ %tobool46, %land.rhs39 ], !dbg !759
  br i1 %21, label %for.body48, label %for.end51, !dbg !760

for.body48:                                       ; preds = %land.end47
  br label %for.inc49, !dbg !760

for.inc49:                                        ; preds = %for.body48
  %22 = load i32, i32* %loop, align 4, !dbg !761
  %inc50 = add i32 %22, 1, !dbg !761
  store i32 %inc50, i32* %loop, align 4, !dbg !761
  br label %for.cond33, !dbg !762, !llvm.loop !763

for.end51:                                        ; preds = %land.end47
  %23 = load i8*, i8** %mimetype.addr, align 8, !dbg !765
  %24 = load i32, i32* %loop, align 4, !dbg !766
  %idxprom52 = zext i32 %24 to i64, !dbg !767
  %arrayidx53 = getelementptr inbounds [0 x [2 x [100 x i8]]], [0 x [2 x [100 x i8]]]* bitcast ([32 x [2 x [100 x i8]]]* @assocNames to [0 x [2 x [100 x i8]]]*), i64 0, i64 %idxprom52, !dbg !767
  %arrayidx54 = getelementptr inbounds [2 x [100 x i8]], [2 x [100 x i8]]* %arrayidx53, i64 0, i64 1, !dbg !767
  %arraydecay55 = getelementptr inbounds [100 x i8], [100 x i8]* %arrayidx54, i64 0, i64 0, !dbg !767
  %call56 = call i8* @strcpy(i8* %23, i8* %arraydecay55) #9, !dbg !768
  %25 = load i8*, i8** %mimetype.addr, align 8, !dbg !769
  %call57 = call i32 @strcmp(i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0)) #11, !dbg !771
  %tobool58 = icmp ne i32 %call57, 0, !dbg !771
  br i1 %tobool58, label %if.end, label %if.then, !dbg !772

if.then:                                          ; preds = %for.end51
  %26 = load i8*, i8** %mimetype.addr, align 8, !dbg !773
  %call59 = call i8* @strcpy(i8* %26, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i64 0, i64 0)) #9, !dbg !774
  br label %if.end, !dbg !774

if.end:                                           ; preds = %if.then, %for.end51
  ret void, !dbg !775
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strcmp(i8*, i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @getfileline(i8* %line, %struct._IO_FILE* %in) #0 !dbg !776 {
entry:
  %line.addr = alloca i8*, align 8
  %in.addr = alloca %struct._IO_FILE*, align 8
  %loop = alloca i32, align 4
  store i8* %line, i8** %line.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %line.addr, metadata !813, metadata !DIExpression()), !dbg !814
  store %struct._IO_FILE* %in, %struct._IO_FILE** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %in.addr, metadata !815, metadata !DIExpression()), !dbg !816
  call void @llvm.dbg.declare(metadata i32* %loop, metadata !817, metadata !DIExpression()), !dbg !818
  store i32 0, i32* %loop, align 4, !dbg !818
  %0 = load i8*, i8** %line.addr, align 8, !dbg !819
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8, !dbg !820
  %call = call i8* @fgets(i8* %0, i32 255, %struct._IO_FILE* %1), !dbg !821
  store i32 0, i32* %loop, align 4, !dbg !822
  br label %for.cond, !dbg !824

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %loop, align 4, !dbg !825
  %cmp = icmp ult i32 %2, 255, !dbg !827
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !828

land.rhs:                                         ; preds = %for.cond
  %3 = load i8*, i8** %line.addr, align 8, !dbg !829
  %4 = load i32, i32* %loop, align 4, !dbg !830
  %idxprom = zext i32 %4 to i64, !dbg !829
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !829
  %5 = load i8, i8* %arrayidx, align 1, !dbg !829
  %conv = zext i8 %5 to i32, !dbg !829
  %cmp1 = icmp ne i32 %conv, 0, !dbg !831
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %6 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !832
  br i1 %6, label %for.body, label %for.end, !dbg !833

for.body:                                         ; preds = %land.end
  %7 = load i8*, i8** %line.addr, align 8, !dbg !834
  %8 = load i32, i32* %loop, align 4, !dbg !836
  %idxprom3 = zext i32 %8 to i64, !dbg !834
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i64 %idxprom3, !dbg !834
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !834
  %conv5 = zext i8 %9 to i32, !dbg !834
  %cmp6 = icmp eq i32 %conv5, 13, !dbg !837
  br i1 %cmp6, label %if.then, label %lor.lhs.false, !dbg !838

lor.lhs.false:                                    ; preds = %for.body
  %10 = load i8*, i8** %line.addr, align 8, !dbg !839
  %11 = load i32, i32* %loop, align 4, !dbg !840
  %idxprom8 = zext i32 %11 to i64, !dbg !839
  %arrayidx9 = getelementptr inbounds i8, i8* %10, i64 %idxprom8, !dbg !839
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !839
  %conv10 = zext i8 %12 to i32, !dbg !839
  %cmp11 = icmp eq i32 %conv10, 10, !dbg !841
  br i1 %cmp11, label %if.then, label %if.end, !dbg !842

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %13 = load i8*, i8** %line.addr, align 8, !dbg !843
  %14 = load i32, i32* %loop, align 4, !dbg !844
  %idxprom13 = zext i32 %14 to i64, !dbg !843
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !843
  store i8 0, i8* %arrayidx14, align 1, !dbg !845
  br label %if.end, !dbg !843

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !846

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %loop, align 4, !dbg !847
  %inc = add i32 %15, 1, !dbg !847
  store i32 %inc, i32* %loop, align 4, !dbg !847
  br label %for.cond, !dbg !848, !llvm.loop !849

for.end:                                          ; preds = %land.end
  ret void, !dbg !851
}

declare dso_local i8* @fgets(i8*, i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @does_file_exist(i8* %filename) #0 !dbg !852 {
entry:
  %retval = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !855, metadata !DIExpression()), !dbg !856
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !857, metadata !DIExpression()), !dbg !890
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !891
  %call = call i32 @stat(i8* %0, %struct.stat* %st) #9, !dbg !893
  %tobool = icmp ne i32 %call, 0, !dbg !893
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !894

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %filename.addr, align 8, !dbg !895
  %call1 = call i32 @isDirectory(i8* %1), !dbg !896
  %tobool2 = icmp ne i32 %call1, 0, !dbg !896
  br i1 %tobool2, label %if.then, label %if.end, !dbg !897

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !898
  br label %return, !dbg !898

if.end:                                           ; preds = %lor.lhs.false
  store i32 1, i32* %retval, align 4, !dbg !899
  br label %return, !dbg !899

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !900
  ret i32 %2, !dbg !900
}

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isDirectory(i8* %filename) #0 !dbg !901 {
entry:
  %retval = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !902, metadata !DIExpression()), !dbg !903
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !904, metadata !DIExpression()), !dbg !905
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !906
  %call = call i32 @stat(i8* %0, %struct.stat* %st) #9, !dbg !908
  %tobool = icmp ne i32 %call, 0, !dbg !908
  br i1 %tobool, label %if.then, label %if.end, !dbg !909

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !910
  br label %return, !dbg !910

if.end:                                           ; preds = %entry
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 2, !dbg !911
  %1 = load i32, i32* %st_mode, align 8, !dbg !911
  %and = and i32 %1, 61440, !dbg !911
  %cmp = icmp eq i32 %and, 16384, !dbg !911
  br i1 %cmp, label %if.end2, label %if.then1, !dbg !913

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !914
  br label %return, !dbg !914

if.end2:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !915
  br label %return, !dbg !915

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !916
  ret i32 %2, !dbg !916
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @get_file_size(i8* %filename) #0 !dbg !917 {
entry:
  %retval = alloca i64, align 8
  %filename.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !920, metadata !DIExpression()), !dbg !921
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !922, metadata !DIExpression()), !dbg !923
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !924
  %call = call i32 @stat(i8* %0, %struct.stat* %st) #9, !dbg !926
  %tobool = icmp ne i32 %call, 0, !dbg !926
  br i1 %tobool, label %if.end, label %if.then, !dbg !927

if.then:                                          ; preds = %entry
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !928
  %1 = load i64, i64* %st_size, align 8, !dbg !928
  store i64 %1, i64* %retval, align 8, !dbg !929
  br label %return, !dbg !929

if.end:                                           ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !930
  br label %return, !dbg !930

return:                                           ; preds = %if.end, %if.then
  %2 = load i64, i64* %retval, align 8, !dbg !931
  ret i64 %2, !dbg !931
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @count_vhosts() #0 !dbg !932 {
entry:
  %retval = alloca i64, align 8
  %in = alloca %struct._IO_FILE*, align 8
  %count = alloca i64, align 8
  %tempstring = alloca [255 x i8], align 1
  %ptr1 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %in, metadata !935, metadata !DIExpression()), !dbg !936
  call void @llvm.dbg.declare(metadata i64* %count, metadata !937, metadata !DIExpression()), !dbg !938
  store i64 0, i64* %count, align 8, !dbg !938
  call void @llvm.dbg.declare(metadata [255 x i8]* %tempstring, metadata !939, metadata !DIExpression()), !dbg !940
  call void @llvm.dbg.declare(metadata i8** %ptr1, metadata !941, metadata !DIExpression()), !dbg !942
  store i8* null, i8** %ptr1, align 8, !dbg !942
  %call = call noalias %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.32, i64 0, i64 0)), !dbg !943
  store %struct._IO_FILE* %call, %struct._IO_FILE** %in, align 8, !dbg !945
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !946
  br i1 %cmp, label %if.then, label %if.end, !dbg !947

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !948
  br label %return, !dbg !948

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !949

while.cond:                                       ; preds = %if.end13, %if.end
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %in, align 8, !dbg !950
  %call1 = call i32 @feof(%struct._IO_FILE* %0) #9, !dbg !951
  %tobool = icmp ne i32 %call1, 0, !dbg !952
  %lnot = xor i1 %tobool, true, !dbg !952
  br i1 %lnot, label %while.body, label %while.end, !dbg !949

while.body:                                       ; preds = %while.cond
  %arraydecay = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !953
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 0, i64 255, i1 false), !dbg !953
  %arraydecay2 = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !955
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %in, align 8, !dbg !956
  call void @getfileline(i8* %arraydecay2, %struct._IO_FILE* %1), !dbg !957
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %in, align 8, !dbg !958
  %call3 = call i32 @feof(%struct._IO_FILE* %2) #9, !dbg !960
  %tobool4 = icmp ne i32 %call3, 0, !dbg !960
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !961

if.then5:                                         ; preds = %while.body
  br label %while.end, !dbg !962

if.end6:                                          ; preds = %while.body
  %arraydecay7 = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !963
  %call8 = call i8* @strtok(i8* %arraydecay7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.33, i64 0, i64 0)) #9, !dbg !964
  store i8* %call8, i8** %ptr1, align 8, !dbg !965
  %3 = load i8*, i8** %ptr1, align 8, !dbg !966
  %tobool9 = icmp ne i8* %3, null, !dbg !966
  br i1 %tobool9, label %land.lhs.true, label %if.end13, !dbg !968

land.lhs.true:                                    ; preds = %if.end6
  %4 = load i8*, i8** %ptr1, align 8, !dbg !969
  %call10 = call i32 @gstricmp(i8* %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.34, i64 0, i64 0)), !dbg !970
  %tobool11 = icmp ne i32 %call10, 0, !dbg !970
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !971

if.then12:                                        ; preds = %land.lhs.true
  %5 = load i64, i64* %count, align 8, !dbg !972
  %inc = add i64 %5, 1, !dbg !972
  store i64 %inc, i64* %count, align 8, !dbg !972
  br label %if.end13, !dbg !973

if.end13:                                         ; preds = %if.then12, %land.lhs.true, %if.end6
  br label %while.cond, !dbg !949, !llvm.loop !974

while.end:                                        ; preds = %if.then5, %while.cond
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %in, align 8, !dbg !976
  %call14 = call i32 @fclose(%struct._IO_FILE* %6), !dbg !977
  %7 = load i64, i64* %count, align 8, !dbg !978
  store i64 %7, i64* %retval, align 8, !dbg !979
  br label %return, !dbg !979

return:                                           ; preds = %while.end, %if.then
  %8 = load i64, i64* %retval, align 8, !dbg !980
  ret i64 %8, !dbg !980
}

declare dso_local noalias %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @feof(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @gstricmp(i8* %string1, i8* %string2) #0 !dbg !981 {
entry:
  %retval = alloca i32, align 4
  %string1.addr = alloca i8*, align 8
  %string2.addr = alloca i8*, align 8
  %loop = alloca i32, align 4
  store i8* %string1, i8** %string1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string1.addr, metadata !984, metadata !DIExpression()), !dbg !985
  store i8* %string2, i8** %string2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string2.addr, metadata !986, metadata !DIExpression()), !dbg !987
  call void @llvm.dbg.declare(metadata i32* %loop, metadata !988, metadata !DIExpression()), !dbg !989
  store i32 0, i32* %loop, align 4, !dbg !989
  %0 = load i8*, i8** %string1.addr, align 8, !dbg !990
  %tobool = icmp ne i8* %0, null, !dbg !990
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !992

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %string2.addr, align 8, !dbg !993
  %tobool1 = icmp ne i8* %1, null, !dbg !993
  br i1 %tobool1, label %if.end, label %if.then, !dbg !994

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !995
  br label %return, !dbg !995

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond, !dbg !996

while.cond:                                       ; preds = %if.end11, %if.end
  %2 = load i8*, i8** %string1.addr, align 8, !dbg !997
  %3 = load i8, i8* %2, align 1, !dbg !998
  %conv = zext i8 %3 to i32, !dbg !998
  %tobool2 = icmp ne i32 %conv, 0, !dbg !998
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !999

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %string2.addr, align 8, !dbg !1000
  %5 = load i8, i8* %4, align 1, !dbg !1001
  %conv3 = zext i8 %5 to i32, !dbg !1001
  %tobool4 = icmp ne i32 %conv3, 0, !dbg !999
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool4, %land.rhs ], !dbg !1002
  br i1 %6, label %while.body, label %while.end, !dbg !996

while.body:                                       ; preds = %land.end
  %7 = load i8*, i8** %string1.addr, align 8, !dbg !1003
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !1003
  store i8* %incdec.ptr, i8** %string1.addr, align 8, !dbg !1003
  %8 = load i8, i8* %7, align 1, !dbg !1005
  %conv5 = zext i8 %8 to i32, !dbg !1005
  %call = call i32 @tolower(i32 %conv5) #11, !dbg !1006
  %9 = load i8*, i8** %string2.addr, align 8, !dbg !1007
  %incdec.ptr6 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !1007
  store i8* %incdec.ptr6, i8** %string2.addr, align 8, !dbg !1007
  %10 = load i8, i8* %9, align 1, !dbg !1008
  %conv7 = zext i8 %10 to i32, !dbg !1008
  %call8 = call i32 @tolower(i32 %conv7) #11, !dbg !1009
  %cmp = icmp ne i32 %call, %call8, !dbg !1010
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !1011

if.then10:                                        ; preds = %while.body
  store i32 1, i32* %retval, align 4, !dbg !1012
  br label %return, !dbg !1012

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !996, !llvm.loop !1013

while.end:                                        ; preds = %land.end
  %11 = load i8*, i8** %string1.addr, align 8, !dbg !1015
  %incdec.ptr12 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !1015
  store i8* %incdec.ptr12, i8** %string1.addr, align 8, !dbg !1015
  %12 = load i8, i8* %11, align 1, !dbg !1017
  %conv13 = zext i8 %12 to i32, !dbg !1017
  %call14 = call i32 @tolower(i32 %conv13) #11, !dbg !1018
  %13 = load i8*, i8** %string2.addr, align 8, !dbg !1019
  %incdec.ptr15 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !1019
  store i8* %incdec.ptr15, i8** %string2.addr, align 8, !dbg !1019
  %14 = load i8, i8* %13, align 1, !dbg !1020
  %conv16 = zext i8 %14 to i32, !dbg !1020
  %call17 = call i32 @tolower(i32 %conv16) #11, !dbg !1021
  %cmp18 = icmp ne i32 %call14, %call17, !dbg !1022
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !1023

if.then20:                                        ; preds = %while.end
  store i32 1, i32* %retval, align 4, !dbg !1024
  br label %return, !dbg !1024

if.end21:                                         ; preds = %while.end
  store i32 0, i32* %retval, align 4, !dbg !1025
  br label %return, !dbg !1025

return:                                           ; preds = %if.end21, %if.then20, %if.then10, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !1026
  ret i32 %15, !dbg !1026
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @tolower(i32) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @VirtualHostDefinition(%struct._IO_FILE* %in) #0 !dbg !1027 {
entry:
  %in.addr = alloca %struct._IO_FILE*, align 8
  %tempstring = alloca [255 x i8], align 1
  %ptr1 = alloca i8*, align 8
  %ptr2 = alloca i8*, align 8
  %thevhost = alloca %struct.t_vhost*, align 8
  store %struct._IO_FILE* %in, %struct._IO_FILE** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %in.addr, metadata !1030, metadata !DIExpression()), !dbg !1031
  call void @llvm.dbg.declare(metadata [255 x i8]* %tempstring, metadata !1032, metadata !DIExpression()), !dbg !1033
  call void @llvm.dbg.declare(metadata i8** %ptr1, metadata !1034, metadata !DIExpression()), !dbg !1035
  store i8* null, i8** %ptr1, align 8, !dbg !1035
  call void @llvm.dbg.declare(metadata i8** %ptr2, metadata !1036, metadata !DIExpression()), !dbg !1037
  store i8* null, i8** %ptr2, align 8, !dbg !1037
  call void @llvm.dbg.declare(metadata %struct.t_vhost** %thevhost, metadata !1038, metadata !DIExpression()), !dbg !1048
  store %struct.t_vhost* null, %struct.t_vhost** %thevhost, align 8, !dbg !1048
  %0 = load %struct.t_vhost*, %struct.t_vhost** @vhosts, align 8, !dbg !1049
  %1 = load i64, i64* @no_vhosts, align 8, !dbg !1050
  %arrayidx = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %0, i64 %1, !dbg !1049
  store %struct.t_vhost* %arrayidx, %struct.t_vhost** %thevhost, align 8, !dbg !1051
  %2 = load %struct.t_vhost*, %struct.t_vhost** %thevhost, align 8, !dbg !1052
  %host = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %2, i32 0, i32 0, !dbg !1053
  %arraydecay = getelementptr inbounds [255 x i8], [255 x i8]* %host, i64 0, i64 0, !dbg !1052
  %call = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4.37, i64 0, i64 0)) #9, !dbg !1054
  %3 = load %struct.t_vhost*, %struct.t_vhost** %thevhost, align 8, !dbg !1055
  %DOCUMENTROOT = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %3, i32 0, i32 1, !dbg !1056
  %arraydecay1 = getelementptr inbounds [255 x i8], [255 x i8]* %DOCUMENTROOT, i64 0, i64 0, !dbg !1055
  %call2 = call i8* @strcpy(i8* %arraydecay1, i8* getelementptr inbounds (%struct.t_vhost, %struct.t_vhost* @defaulthost, i32 0, i32 1, i64 0)) #9, !dbg !1057
  %4 = load %struct.t_vhost*, %struct.t_vhost** %thevhost, align 8, !dbg !1058
  %DEFAULTPAGE = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %4, i32 0, i32 2, !dbg !1059
  %arraydecay3 = getelementptr inbounds [255 x i8], [255 x i8]* %DEFAULTPAGE, i64 0, i64 0, !dbg !1058
  %call4 = call i8* @strcpy(i8* %arraydecay3, i8* getelementptr inbounds (%struct.t_vhost, %struct.t_vhost* @defaulthost, i32 0, i32 2, i64 0)) #9, !dbg !1060
  %5 = load %struct.t_vhost*, %struct.t_vhost** %thevhost, align 8, !dbg !1061
  %CGIBINDIR = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %5, i32 0, i32 3, !dbg !1062
  %arraydecay5 = getelementptr inbounds [255 x i8], [255 x i8]* %CGIBINDIR, i64 0, i64 0, !dbg !1061
  %call6 = call i8* @strcpy(i8* %arraydecay5, i8* getelementptr inbounds (%struct.t_vhost, %struct.t_vhost* @defaulthost, i32 0, i32 3, i64 0)) #9, !dbg !1063
  %6 = load %struct.t_vhost*, %struct.t_vhost** %thevhost, align 8, !dbg !1064
  %CGIBINROOT = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %6, i32 0, i32 4, !dbg !1065
  %arraydecay7 = getelementptr inbounds [255 x i8], [255 x i8]* %CGIBINROOT, i64 0, i64 0, !dbg !1064
  %call8 = call i8* @strcpy(i8* %arraydecay7, i8* getelementptr inbounds (%struct.t_vhost, %struct.t_vhost* @defaulthost, i32 0, i32 4, i64 0)) #9, !dbg !1066
  br label %while.cond, !dbg !1067

while.cond:                                       ; preds = %if.end72, %if.then28, %if.then22, %if.then17, %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8, !dbg !1068
  %call9 = call i32 @feof(%struct._IO_FILE* %7) #9, !dbg !1069
  %tobool = icmp ne i32 %call9, 0, !dbg !1070
  %lnot = xor i1 %tobool, true, !dbg !1070
  br i1 %lnot, label %while.body, label %while.end, !dbg !1067

while.body:                                       ; preds = %while.cond
  %arraydecay10 = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !1071
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8, !dbg !1073
  call void @getfileline(i8* %arraydecay10, %struct._IO_FILE* %8), !dbg !1074
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8, !dbg !1075
  %call11 = call i32 @feof(%struct._IO_FILE* %9) #9, !dbg !1077
  %tobool12 = icmp ne i32 %call11, 0, !dbg !1077
  br i1 %tobool12, label %if.then, label %if.end, !dbg !1078

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !1079

if.end:                                           ; preds = %while.body
  %arraydecay13 = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !1080
  %call14 = call i8* @strtok(i8* %arraydecay13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.38, i64 0, i64 0)) #9, !dbg !1081
  store i8* %call14, i8** %ptr1, align 8, !dbg !1082
  %call15 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.38, i64 0, i64 0)) #9, !dbg !1083
  store i8* %call15, i8** %ptr2, align 8, !dbg !1084
  %10 = load i8*, i8** %ptr1, align 8, !dbg !1085
  %tobool16 = icmp ne i8* %10, null, !dbg !1085
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !1087

if.then17:                                        ; preds = %if.end
  br label %while.cond, !dbg !1088, !llvm.loop !1089

if.end18:                                         ; preds = %if.end
  %11 = load i8*, i8** %ptr1, align 8, !dbg !1091
  %arrayidx19 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !1091
  %12 = load i8, i8* %arrayidx19, align 1, !dbg !1091
  %conv = zext i8 %12 to i32, !dbg !1091
  %cmp = icmp ne i32 %conv, 60, !dbg !1093
  br i1 %cmp, label %land.lhs.true, label %if.end23, !dbg !1094

land.lhs.true:                                    ; preds = %if.end18
  %13 = load i8*, i8** %ptr2, align 8, !dbg !1095
  %tobool21 = icmp ne i8* %13, null, !dbg !1095
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !1096

if.then22:                                        ; preds = %land.lhs.true
  br label %while.cond, !dbg !1097, !llvm.loop !1089

if.end23:                                         ; preds = %land.lhs.true, %if.end18
  %14 = load i8*, i8** %ptr1, align 8, !dbg !1098
  %arrayidx24 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !1098
  %15 = load i8, i8* %arrayidx24, align 1, !dbg !1098
  %conv25 = zext i8 %15 to i32, !dbg !1098
  %cmp26 = icmp eq i32 %conv25, 35, !dbg !1100
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !1101

if.then28:                                        ; preds = %if.end23
  br label %while.cond, !dbg !1102, !llvm.loop !1089

if.end29:                                         ; preds = %if.end23
  %16 = load i8*, i8** %ptr1, align 8, !dbg !1103
  %call30 = call i32 @gstricmp(i8* %16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.39, i64 0, i64 0)), !dbg !1105
  %tobool31 = icmp ne i32 %call30, 0, !dbg !1105
  br i1 %tobool31, label %if.else, label %if.then32, !dbg !1106

if.then32:                                        ; preds = %if.end29
  br label %while.end, !dbg !1107

if.else:                                          ; preds = %if.end29
  %17 = load i8*, i8** %ptr1, align 8, !dbg !1108
  %call33 = call i32 @gstricmp(i8* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.40, i64 0, i64 0)), !dbg !1110
  %tobool34 = icmp ne i32 %call33, 0, !dbg !1110
  br i1 %tobool34, label %if.else39, label %if.then35, !dbg !1111

if.then35:                                        ; preds = %if.else
  %18 = load %struct.t_vhost*, %struct.t_vhost** %thevhost, align 8, !dbg !1112
  %host36 = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %18, i32 0, i32 0, !dbg !1113
  %arraydecay37 = getelementptr inbounds [255 x i8], [255 x i8]* %host36, i64 0, i64 0, !dbg !1112
  %19 = load i8*, i8** %ptr2, align 8, !dbg !1114
  %call38 = call i8* @strcpy(i8* %arraydecay37, i8* %19) #9, !dbg !1115
  br label %if.end71, !dbg !1115

if.else39:                                        ; preds = %if.else
  %20 = load i8*, i8** %ptr1, align 8, !dbg !1116
  %call40 = call i32 @gstricmp(i8* %20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.41, i64 0, i64 0)), !dbg !1118
  %tobool41 = icmp ne i32 %call40, 0, !dbg !1118
  br i1 %tobool41, label %if.else46, label %if.then42, !dbg !1119

if.then42:                                        ; preds = %if.else39
  %21 = load %struct.t_vhost*, %struct.t_vhost** %thevhost, align 8, !dbg !1120
  %DOCUMENTROOT43 = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %21, i32 0, i32 1, !dbg !1121
  %arraydecay44 = getelementptr inbounds [255 x i8], [255 x i8]* %DOCUMENTROOT43, i64 0, i64 0, !dbg !1120
  %22 = load i8*, i8** %ptr2, align 8, !dbg !1122
  %call45 = call i8* @strcpy(i8* %arraydecay44, i8* %22) #9, !dbg !1123
  br label %if.end70, !dbg !1123

if.else46:                                        ; preds = %if.else39
  %23 = load i8*, i8** %ptr1, align 8, !dbg !1124
  %call47 = call i32 @gstricmp(i8* %23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.42, i64 0, i64 0)), !dbg !1126
  %tobool48 = icmp ne i32 %call47, 0, !dbg !1126
  br i1 %tobool48, label %if.else53, label %if.then49, !dbg !1127

if.then49:                                        ; preds = %if.else46
  %24 = load %struct.t_vhost*, %struct.t_vhost** %thevhost, align 8, !dbg !1128
  %DEFAULTPAGE50 = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %24, i32 0, i32 2, !dbg !1129
  %arraydecay51 = getelementptr inbounds [255 x i8], [255 x i8]* %DEFAULTPAGE50, i64 0, i64 0, !dbg !1128
  %25 = load i8*, i8** %ptr2, align 8, !dbg !1130
  %call52 = call i8* @strcpy(i8* %arraydecay51, i8* %25) #9, !dbg !1131
  br label %if.end69, !dbg !1131

if.else53:                                        ; preds = %if.else46
  %26 = load i8*, i8** %ptr1, align 8, !dbg !1132
  %call54 = call i32 @gstricmp(i8* %26, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.43, i64 0, i64 0)), !dbg !1134
  %tobool55 = icmp ne i32 %call54, 0, !dbg !1134
  br i1 %tobool55, label %if.else60, label %if.then56, !dbg !1135

if.then56:                                        ; preds = %if.else53
  %27 = load %struct.t_vhost*, %struct.t_vhost** %thevhost, align 8, !dbg !1136
  %CGIBINDIR57 = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %27, i32 0, i32 3, !dbg !1137
  %arraydecay58 = getelementptr inbounds [255 x i8], [255 x i8]* %CGIBINDIR57, i64 0, i64 0, !dbg !1136
  %28 = load i8*, i8** %ptr2, align 8, !dbg !1138
  %call59 = call i8* @strcpy(i8* %arraydecay58, i8* %28) #9, !dbg !1139
  br label %if.end68, !dbg !1139

if.else60:                                        ; preds = %if.else53
  %29 = load i8*, i8** %ptr1, align 8, !dbg !1140
  %call61 = call i32 @gstricmp(i8* %29, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.44, i64 0, i64 0)), !dbg !1142
  %tobool62 = icmp ne i32 %call61, 0, !dbg !1142
  br i1 %tobool62, label %if.end67, label %if.then63, !dbg !1143

if.then63:                                        ; preds = %if.else60
  %30 = load %struct.t_vhost*, %struct.t_vhost** %thevhost, align 8, !dbg !1144
  %CGIBINROOT64 = getelementptr inbounds %struct.t_vhost, %struct.t_vhost* %30, i32 0, i32 4, !dbg !1145
  %arraydecay65 = getelementptr inbounds [255 x i8], [255 x i8]* %CGIBINROOT64, i64 0, i64 0, !dbg !1144
  %31 = load i8*, i8** %ptr2, align 8, !dbg !1146
  %call66 = call i8* @strcpy(i8* %arraydecay65, i8* %31) #9, !dbg !1147
  br label %if.end67, !dbg !1147

if.end67:                                         ; preds = %if.then63, %if.else60
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then56
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then49
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then42
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then35
  br label %if.end72

if.end72:                                         ; preds = %if.end71
  br label %while.cond, !dbg !1067, !llvm.loop !1089

while.end:                                        ; preds = %if.then32, %if.then, %while.cond
  %32 = load i64, i64* @no_vhosts, align 8, !dbg !1148
  %inc = add i64 %32, 1, !dbg !1148
  store i64 %inc, i64* @no_vhosts, align 8, !dbg !1148
  ret void, !dbg !1149
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @gstrlwr(i8* %string) #0 !dbg !1150 {
entry:
  %string.addr = alloca i8*, align 8
  %loop = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !1153, metadata !DIExpression()), !dbg !1154
  call void @llvm.dbg.declare(metadata i32* %loop, metadata !1155, metadata !DIExpression()), !dbg !1156
  store i32 0, i32* %loop, align 4, !dbg !1156
  %0 = load i8*, i8** %string.addr, align 8, !dbg !1157
  %tobool = icmp ne i8* %0, null, !dbg !1157
  br i1 %tobool, label %if.end, label %if.then, !dbg !1159

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !1160

if.end:                                           ; preds = %entry
  store i32 0, i32* %loop, align 4, !dbg !1161
  br label %for.cond, !dbg !1163

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %loop, align 4, !dbg !1164
  %cmp = icmp ult i32 %1, 255, !dbg !1166
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !1167

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %string.addr, align 8, !dbg !1168
  %3 = load i32, i32* %loop, align 4, !dbg !1169
  %idxprom = zext i32 %3 to i64, !dbg !1168
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !1168
  %4 = load i8, i8* %arrayidx, align 1, !dbg !1168
  %conv = zext i8 %4 to i32, !dbg !1168
  %tobool1 = icmp ne i32 %conv, 0, !dbg !1167
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %tobool1, %land.rhs ], !dbg !1170
  br i1 %5, label %for.body, label %for.end, !dbg !1171

for.body:                                         ; preds = %land.end
  %6 = load i8*, i8** %string.addr, align 8, !dbg !1172
  %7 = load i32, i32* %loop, align 4, !dbg !1173
  %idxprom2 = zext i32 %7 to i64, !dbg !1172
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 %idxprom2, !dbg !1172
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !1172
  %conv4 = zext i8 %8 to i32, !dbg !1172
  %call = call i32 @tolower(i32 %conv4) #11, !dbg !1174
  %conv5 = trunc i32 %call to i8, !dbg !1174
  %9 = load i8*, i8** %string.addr, align 8, !dbg !1175
  %10 = load i32, i32* %loop, align 4, !dbg !1176
  %idxprom6 = zext i32 %10 to i64, !dbg !1175
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %idxprom6, !dbg !1175
  store i8 %conv5, i8* %arrayidx7, align 1, !dbg !1177
  br label %for.inc, !dbg !1175

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %loop, align 4, !dbg !1178
  %inc = add i32 %11, 1, !dbg !1178
  store i32 %inc, i32* %loop, align 4, !dbg !1178
  br label %for.cond, !dbg !1179, !llvm.loop !1180

for.end:                                          ; preds = %land.end, %if.then
  ret void, !dbg !1182
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @readinconfig() #0 !dbg !1183 {
entry:
  %in = alloca %struct._IO_FILE*, align 8
  %ptr1 = alloca i8*, align 8
  %ptr2 = alloca i8*, align 8
  %tempstring = alloca [255 x i8], align 1
  %loop = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %in, metadata !1186, metadata !DIExpression()), !dbg !1187
  call void @llvm.dbg.declare(metadata i8** %ptr1, metadata !1188, metadata !DIExpression()), !dbg !1189
  store i8* null, i8** %ptr1, align 8, !dbg !1189
  call void @llvm.dbg.declare(metadata i8** %ptr2, metadata !1190, metadata !DIExpression()), !dbg !1191
  store i8* null, i8** %ptr2, align 8, !dbg !1191
  call void @llvm.dbg.declare(metadata [255 x i8]* %tempstring, metadata !1192, metadata !DIExpression()), !dbg !1193
  call void @llvm.dbg.declare(metadata i32* %loop, metadata !1194, metadata !DIExpression()), !dbg !1195
  store i32 0, i32* %loop, align 4, !dbg !1195
  %call = call noalias %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.32, i64 0, i64 0)), !dbg !1196
  store %struct._IO_FILE* %call, %struct._IO_FILE** %in, align 8, !dbg !1198
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !1199
  br i1 %cmp, label %if.then, label %if.end, !dbg !1200

if.then:                                          ; preds = %entry
  br label %return, !dbg !1201

if.end:                                           ; preds = %entry
  store i64 0, i64* @no_vhosts, align 8, !dbg !1202
  br label %while.cond, !dbg !1203

while.cond:                                       ; preds = %if.end69, %if.then21, %if.then15, %if.then10, %if.end
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %in, align 8, !dbg !1204
  %call1 = call i32 @feof(%struct._IO_FILE* %0) #9, !dbg !1205
  %tobool = icmp ne i32 %call1, 0, !dbg !1206
  %lnot = xor i1 %tobool, true, !dbg !1206
  br i1 %lnot, label %while.body, label %while.end, !dbg !1203

while.body:                                       ; preds = %while.cond
  %arraydecay = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !1207
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %in, align 8, !dbg !1209
  call void @getfileline(i8* %arraydecay, %struct._IO_FILE* %1), !dbg !1210
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %in, align 8, !dbg !1211
  %call2 = call i32 @feof(%struct._IO_FILE* %2) #9, !dbg !1213
  %tobool3 = icmp ne i32 %call2, 0, !dbg !1213
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !1214

if.then4:                                         ; preds = %while.body
  br label %while.end, !dbg !1215

if.end5:                                          ; preds = %while.body
  %arraydecay6 = getelementptr inbounds [255 x i8], [255 x i8]* %tempstring, i64 0, i64 0, !dbg !1216
  %call7 = call i8* @strtok(i8* %arraydecay6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.47, i64 0, i64 0)) #9, !dbg !1217
  store i8* %call7, i8** %ptr1, align 8, !dbg !1218
  %call8 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.47, i64 0, i64 0)) #9, !dbg !1219
  store i8* %call8, i8** %ptr2, align 8, !dbg !1220
  %3 = load i8*, i8** %ptr1, align 8, !dbg !1221
  %tobool9 = icmp ne i8* %3, null, !dbg !1221
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !1223

if.then10:                                        ; preds = %if.end5
  br label %while.cond, !dbg !1224, !llvm.loop !1225

if.end11:                                         ; preds = %if.end5
  %4 = load i8*, i8** %ptr1, align 8, !dbg !1227
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !1227
  %5 = load i8, i8* %arrayidx, align 1, !dbg !1227
  %conv = zext i8 %5 to i32, !dbg !1227
  %cmp12 = icmp ne i32 %conv, 60, !dbg !1229
  br i1 %cmp12, label %land.lhs.true, label %if.end16, !dbg !1230

land.lhs.true:                                    ; preds = %if.end11
  %6 = load i8*, i8** %ptr2, align 8, !dbg !1231
  %tobool14 = icmp ne i8* %6, null, !dbg !1231
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !1232

if.then15:                                        ; preds = %land.lhs.true
  br label %while.cond, !dbg !1233, !llvm.loop !1225

if.end16:                                         ; preds = %land.lhs.true, %if.end11
  %7 = load i8*, i8** %ptr1, align 8, !dbg !1234
  %arrayidx17 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !1234
  %8 = load i8, i8* %arrayidx17, align 1, !dbg !1234
  %conv18 = zext i8 %8 to i32, !dbg !1234
  %cmp19 = icmp eq i32 %conv18, 35, !dbg !1236
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !1237

if.then21:                                        ; preds = %if.end16
  br label %while.cond, !dbg !1238, !llvm.loop !1225

if.end22:                                         ; preds = %if.end16
  %9 = load i8*, i8** %ptr1, align 8, !dbg !1239
  %call23 = call i32 @gstricmp(i8* %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13.48, i64 0, i64 0)), !dbg !1241
  %tobool24 = icmp ne i32 %call23, 0, !dbg !1241
  br i1 %tobool24, label %if.else, label %if.then25, !dbg !1242

if.then25:                                        ; preds = %if.end22
  %10 = load i8*, i8** %ptr2, align 8, !dbg !1243
  %call26 = call i8* @strcpy(i8* getelementptr inbounds ([255 x i8], [255 x i8]* @SERVERROOT, i64 0, i64 0), i8* %10) #9, !dbg !1244
  br label %if.end69, !dbg !1244

if.else:                                          ; preds = %if.end22
  %11 = load i8*, i8** %ptr1, align 8, !dbg !1245
  %call27 = call i32 @gstricmp(i8* %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.41, i64 0, i64 0)), !dbg !1247
  %tobool28 = icmp ne i32 %call27, 0, !dbg !1247
  br i1 %tobool28, label %if.else31, label %if.then29, !dbg !1248

if.then29:                                        ; preds = %if.else
  %12 = load i8*, i8** %ptr2, align 8, !dbg !1249
  %call30 = call i8* @strcpy(i8* getelementptr inbounds (%struct.t_vhost, %struct.t_vhost* @defaulthost, i32 0, i32 1, i64 0), i8* %12) #9, !dbg !1250
  br label %if.end68, !dbg !1250

if.else31:                                        ; preds = %if.else
  %13 = load i8*, i8** %ptr1, align 8, !dbg !1251
  %call32 = call i32 @gstricmp(i8* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.42, i64 0, i64 0)), !dbg !1253
  %tobool33 = icmp ne i32 %call32, 0, !dbg !1253
  br i1 %tobool33, label %if.else36, label %if.then34, !dbg !1254

if.then34:                                        ; preds = %if.else31
  %14 = load i8*, i8** %ptr2, align 8, !dbg !1255
  %call35 = call i8* @strcpy(i8* getelementptr inbounds (%struct.t_vhost, %struct.t_vhost* @defaulthost, i32 0, i32 2, i64 0), i8* %14) #9, !dbg !1256
  br label %if.end67, !dbg !1256

if.else36:                                        ; preds = %if.else31
  %15 = load i8*, i8** %ptr1, align 8, !dbg !1257
  %call37 = call i32 @gstricmp(i8* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.43, i64 0, i64 0)), !dbg !1259
  %tobool38 = icmp ne i32 %call37, 0, !dbg !1259
  br i1 %tobool38, label %if.else41, label %if.then39, !dbg !1260

if.then39:                                        ; preds = %if.else36
  %16 = load i8*, i8** %ptr2, align 8, !dbg !1261
  %call40 = call i8* @strcpy(i8* getelementptr inbounds (%struct.t_vhost, %struct.t_vhost* @defaulthost, i32 0, i32 3, i64 0), i8* %16) #9, !dbg !1262
  br label %if.end66, !dbg !1262

if.else41:                                        ; preds = %if.else36
  %17 = load i8*, i8** %ptr1, align 8, !dbg !1263
  %call42 = call i32 @gstricmp(i8* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.44, i64 0, i64 0)), !dbg !1265
  %tobool43 = icmp ne i32 %call42, 0, !dbg !1265
  br i1 %tobool43, label %if.else46, label %if.then44, !dbg !1266

if.then44:                                        ; preds = %if.else41
  %18 = load i8*, i8** %ptr2, align 8, !dbg !1267
  %call45 = call i8* @strcpy(i8* getelementptr inbounds (%struct.t_vhost, %struct.t_vhost* @defaulthost, i32 0, i32 4, i64 0), i8* %18) #9, !dbg !1268
  br label %if.end65, !dbg !1268

if.else46:                                        ; preds = %if.else41
  %19 = load i8*, i8** %ptr1, align 8, !dbg !1269
  %call47 = call i32 @gstricmp(i8* %19, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.49, i64 0, i64 0)), !dbg !1271
  %tobool48 = icmp ne i32 %call47, 0, !dbg !1271
  br i1 %tobool48, label %if.else51, label %if.then49, !dbg !1272

if.then49:                                        ; preds = %if.else46
  %20 = load i8*, i8** %ptr2, align 8, !dbg !1273
  %call50 = call i32 @atoi(i8* %20) #11, !dbg !1274
  store i32 %call50, i32* @SERVERPORT, align 4, !dbg !1275
  br label %if.end64, !dbg !1276

if.else51:                                        ; preds = %if.else46
  %21 = load i8*, i8** %ptr1, align 8, !dbg !1277
  %call52 = call i32 @gstricmp(i8* %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15.50, i64 0, i64 0)), !dbg !1279
  %tobool53 = icmp ne i32 %call52, 0, !dbg !1279
  br i1 %tobool53, label %if.else56, label %if.then54, !dbg !1280

if.then54:                                        ; preds = %if.else51
  %22 = load i8*, i8** %ptr2, align 8, !dbg !1281
  %call55 = call i8* @strcpy(i8* getelementptr inbounds ([255 x i8], [255 x i8]* @SERVERTYPE, i64 0, i64 0), i8* %22) #9, !dbg !1282
  br label %if.end63, !dbg !1282

if.else56:                                        ; preds = %if.else51
  %23 = load i8*, i8** %ptr1, align 8, !dbg !1283
  %call57 = call i32 @gstricmp(i8* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16.51, i64 0, i64 0)), !dbg !1285
  %tobool58 = icmp ne i32 %call57, 0, !dbg !1285
  br i1 %tobool58, label %if.else60, label %if.then59, !dbg !1286

if.then59:                                        ; preds = %if.else56
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %in, align 8, !dbg !1287
  call void @VirtualHostDefinition(%struct._IO_FILE* %24), !dbg !1288
  br label %if.end62, !dbg !1288

if.else60:                                        ; preds = %if.else56
  %25 = load i8*, i8** %ptr1, align 8, !dbg !1289
  %call61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.17.52, i64 0, i64 0), i8* %25), !dbg !1290
  br label %if.end62

if.end62:                                         ; preds = %if.else60, %if.then59
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then54
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then49
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then44
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then39
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then34
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then29
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then25
  br label %while.cond, !dbg !1203, !llvm.loop !1225

while.end:                                        ; preds = %if.then4, %while.cond
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %in, align 8, !dbg !1291
  %call70 = call i32 @fclose(%struct._IO_FILE* %26), !dbg !1292
  br label %return, !dbg !1293

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !1293
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @atoi(i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @Log(i8* %format, ...) #0 !dbg !1294 {
entry:
  %format.addr = alloca i8*, align 8
  %logfile = alloca %struct._IO_FILE*, align 8
  %t = alloca i64, align 8
  %tm = alloca %struct.tm*, align 8
  %temp = alloca [200 x i8], align 1
  %temp2 = alloca [200 x i8], align 1
  %logfilename = alloca [255 x i8], align 1
  %datetime = alloca [22 x i8], align 1
  %datetime_final = alloca [128 x i8], align 1
  %ap = alloca %"struct.std::__va_list", align 8
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !1297, metadata !DIExpression()), !dbg !1298
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %logfile, metadata !1299, metadata !DIExpression()), !dbg !1300
  call void @llvm.dbg.declare(metadata i64* %t, metadata !1301, metadata !DIExpression()), !dbg !1304
  call void @llvm.dbg.declare(metadata %struct.tm** %tm, metadata !1305, metadata !DIExpression()), !dbg !1308
  call void @llvm.dbg.declare(metadata [200 x i8]* %temp, metadata !1309, metadata !DIExpression()), !dbg !1313
  call void @llvm.dbg.declare(metadata [200 x i8]* %temp2, metadata !1314, metadata !DIExpression()), !dbg !1315
  call void @llvm.dbg.declare(metadata [255 x i8]* %logfilename, metadata !1316, metadata !DIExpression()), !dbg !1317
  call void @llvm.dbg.declare(metadata [22 x i8]* %datetime, metadata !1318, metadata !DIExpression()), !dbg !1322
  %0 = bitcast [22 x i8]* %datetime to i8*, !dbg !1322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @__const.Log.datetime, i32 0, i32 0), i64 22, i1 false), !dbg !1322
  call void @llvm.dbg.declare(metadata [128 x i8]* %datetime_final, metadata !1323, metadata !DIExpression()), !dbg !1327
  call void @llvm.dbg.declare(metadata %"struct.std::__va_list"* %ap, metadata !1328, metadata !DIExpression()), !dbg !1342
  %1 = bitcast %struct._IO_FILE** %logfile to i8*, !dbg !1343
  call void @klee_make_symbolic(i8* %1, i64 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.55, i64 0, i64 0)), !dbg !1344
  %2 = bitcast i64* %t to i8*, !dbg !1345
  call void @klee_make_symbolic(i8* %2, i64 8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19.56, i64 0, i64 0)), !dbg !1346
  %3 = bitcast %struct.tm** %tm to i8*, !dbg !1347
  call void @klee_make_symbolic(i8* %3, i64 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.57, i64 0, i64 0)), !dbg !1348
  %4 = bitcast [200 x i8]* %temp to i8*, !dbg !1349
  call void @klee_make_symbolic(i8* %4, i64 200, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21.58, i64 0, i64 0)), !dbg !1350
  %5 = bitcast [200 x i8]* %temp2 to i8*, !dbg !1351
  call void @klee_make_symbolic(i8* %5, i64 200, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.59, i64 0, i64 0)), !dbg !1352
  %6 = bitcast [255 x i8]* %logfilename to i8*, !dbg !1353
  call void @klee_make_symbolic(i8* %6, i64 255, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23.60, i64 0, i64 0)), !dbg !1354
  %ap1 = bitcast %"struct.std::__va_list"* %ap to i8*, !dbg !1355
  call void @llvm.va_start(i8* %ap1), !dbg !1355
  %ap2 = bitcast %"struct.std::__va_list"* %ap to i8*, !dbg !1356
  call void @llvm.va_end(i8* %ap2), !dbg !1356
  %call = call i32 bitcast (i32 (...)* @time to i32 (i64*)*)(i64* %t), !dbg !1357
  %call3 = call i32 bitcast (i32 (...)* @localtime to i32 (i64*)*)(i64* %t), !dbg !1358
  %conv = sext i32 %call3 to i64, !dbg !1358
  %7 = inttoptr i64 %conv to %struct.tm*, !dbg !1358
  store %struct.tm* %7, %struct.tm** %tm, align 8, !dbg !1359
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %datetime_final, i64 0, i64 0, !dbg !1360
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 0, i64 128, i1 false), !dbg !1360
  %arraydecay4 = getelementptr inbounds [200 x i8], [200 x i8]* %temp2, i64 0, i64 0, !dbg !1361
  %arraydecay5 = getelementptr inbounds [128 x i8], [128 x i8]* %datetime_final, i64 0, i64 0, !dbg !1362
  %arraydecay6 = getelementptr inbounds [200 x i8], [200 x i8]* %temp, i64 0, i64 0, !dbg !1363
  %call7 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24.61, i64 0, i64 0), i8* %arraydecay5, i8* %arraydecay6) #9, !dbg !1364
  %arraydecay8 = getelementptr inbounds [255 x i8], [255 x i8]* %logfilename, i64 0, i64 0, !dbg !1365
  %call9 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25.62, i64 0, i64 0), i8* getelementptr inbounds ([255 x i8], [255 x i8]* @SERVERROOT, i64 0, i64 0)) #9, !dbg !1366
  %arraydecay10 = getelementptr inbounds [255 x i8], [255 x i8]* %logfilename, i64 0, i64 0, !dbg !1367
  %call11 = call noalias %struct._IO_FILE* @fopen(i8* %arraydecay10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.63, i64 0, i64 0)), !dbg !1369
  store %struct._IO_FILE* %call11, %struct._IO_FILE** %logfile, align 8, !dbg !1370
  %cmp = icmp eq %struct._IO_FILE* %call11, null, !dbg !1371
  br i1 %cmp, label %if.then, label %if.end, !dbg !1372

if.then:                                          ; preds = %entry
  br label %return, !dbg !1373

if.end:                                           ; preds = %entry
  %arraydecay13 = getelementptr inbounds [200 x i8], [200 x i8]* %temp2, i64 0, i64 0, !dbg !1374
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %logfile, align 8, !dbg !1375
  %call14 = call i32 @fputs(i8* %arraydecay13, %struct._IO_FILE* %8), !dbg !1376
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %logfile, align 8, !dbg !1377
  %call15 = call i32 @fclose(%struct._IO_FILE* %9), !dbg !1378
  br label %return, !dbg !1379

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !1379
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

declare dso_local i32 @time(...) #3

declare dso_local i32 @localtime(...) #3

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

attributes #0 = { noinline nounwind uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon,+outline-atomics" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon,+outline-atomics" }
attributes #3 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon,+outline-atomics" }
attributes #4 = { noreturn nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon,+outline-atomics" }
attributes #5 = { nounwind readonly willreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon,+outline-atomics" }
attributes #6 = { argmemonly nofree nounwind willreturn }
attributes #7 = { argmemonly nofree nounwind willreturn writeonly }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind readonly willreturn }

!llvm.dbg.cu = !{!28, !2, !63}
!llvm.ident = !{!66, !66, !66}
!llvm.module.flags = !{!67, !68, !69, !70, !71, !72, !73, !74, !75}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "assocNames", scope: !2, file: !3, line: 305, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 13.0.1-2ubuntu2.2", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !20, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "protocol.c", directory: "/root/DOPExploit/MyDOP/benchmarks/ghttpd-1.4")
!4 = !{}
!5 = !{!6, !7}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 180, size: 128, elements: !10)
!9 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/socket.h", directory: "")
!10 = !{!11, !15}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !8, file: !9, line: 182, baseType: !12, size: 16)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !13, line: 28, baseType: !14)
!13 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/sockaddr.h", directory: "")
!14 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !8, file: !9, line: 183, baseType: !16, size: 112, offset: 16)
!16 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 112, elements: !18)
!17 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!18 = !{!19}
!19 = !DISubrange(count: 14)
!20 = !{!0}
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 51200, elements: !22)
!22 = !{!23, !24, !25}
!23 = !DISubrange(count: 32)
!24 = !DISubrange(count: 2)
!25 = !DISubrange(count: 100)
!26 = !DIGlobalVariableExpression(var: !27, expr: !DIExpression())
!27 = distinct !DIGlobalVariable(name: "vhosts", scope: !28, file: !29, line: 42, type: !31, isLocal: false, isDefinition: true)
!28 = distinct !DICompileUnit(language: DW_LANG_C99, file: !29, producer: "Ubuntu clang version 13.0.1-2ubuntu2.2", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !30, globals: !50, splitDebugInlining: false, nameTableKind: None)
!29 = !DIFile(filename: "main.c", directory: "/root/DOPExploit/MyDOP/benchmarks/ghttpd-1.4")
!30 = !{!31, !44, !6, !49}
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "t_vhost", file: !33, line: 30, baseType: !34)
!33 = !DIFile(filename: "./ghttpd.h", directory: "/root/DOPExploit/MyDOP/benchmarks/ghttpd-1.4")
!34 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !33, line: 23, size: 10200, elements: !35)
!35 = !{!36, !40, !41, !42, !43}
!36 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !34, file: !33, line: 25, baseType: !37, size: 2040)
!37 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 2040, elements: !38)
!38 = !{!39}
!39 = !DISubrange(count: 255)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "DOCUMENTROOT", scope: !34, file: !33, line: 26, baseType: !37, size: 2040, offset: 2040)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "DEFAULTPAGE", scope: !34, file: !33, line: 27, baseType: !37, size: 2040, offset: 4080)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "CGIBINDIR", scope: !34, file: !33, line: 28, baseType: !37, size: 2040, offset: 6120)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "CGIBINROOT", scope: !34, file: !33, line: 29, baseType: !37, size: 2040, offset: 8160)
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64)
!45 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 180, size: 128, elements: !46)
!46 = !{!47, !48}
!47 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !45, file: !9, line: 182, baseType: !12, size: 16)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !45, file: !9, line: 183, baseType: !16, size: 112, offset: 16)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!50 = !{!51, !26, !54, !57, !59, !61}
!51 = !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!52 = distinct !DIGlobalVariable(name: "no_vhosts", scope: !28, file: !29, line: 41, type: !53, isLocal: false, isDefinition: true)
!53 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!54 = !DIGlobalVariableExpression(var: !55, expr: !DIExpression())
!55 = distinct !DIGlobalVariable(name: "SERVERPORT", scope: !28, file: !29, line: 44, type: !56, isLocal: false, isDefinition: true)
!56 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!57 = !DIGlobalVariableExpression(var: !58, expr: !DIExpression())
!58 = distinct !DIGlobalVariable(name: "SERVERTYPE", scope: !28, file: !29, line: 45, type: !37, isLocal: false, isDefinition: true)
!59 = !DIGlobalVariableExpression(var: !60, expr: !DIExpression())
!60 = distinct !DIGlobalVariable(name: "SERVERROOT", scope: !28, file: !29, line: 46, type: !37, isLocal: false, isDefinition: true)
!61 = !DIGlobalVariableExpression(var: !62, expr: !DIExpression())
!62 = distinct !DIGlobalVariable(name: "defaulthost", scope: !28, file: !29, line: 48, type: !32, isLocal: false, isDefinition: true)
!63 = distinct !DICompileUnit(language: DW_LANG_C99, file: !64, producer: "Ubuntu clang version 13.0.1-2ubuntu2.2", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !65, splitDebugInlining: false, nameTableKind: None)
!64 = !DIFile(filename: "util.c", directory: "/root/DOPExploit/MyDOP/benchmarks/ghttpd-1.4")
!65 = !{!6}
!66 = !{!"Ubuntu clang version 13.0.1-2ubuntu2.2"}
!67 = !{i32 7, !"Dwarf Version", i32 4}
!68 = !{i32 2, !"Debug Info Version", i32 3}
!69 = !{i32 1, !"wchar_size", i32 4}
!70 = !{i32 1, !"branch-target-enforcement", i32 0}
!71 = !{i32 1, !"sign-return-address", i32 0}
!72 = !{i32 1, !"sign-return-address-all", i32 0}
!73 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!74 = !{i32 7, !"uwtable", i32 1}
!75 = !{i32 7, !"frame-pointer", i32 1}
!76 = distinct !DISubprogram(name: "main", scope: !29, file: !29, line: 50, type: !77, scopeLine: 51, spFlags: DISPFlagDefinition, unit: !28, retainedNodes: !4)
!77 = !DISubroutineType(types: !78)
!78 = !{!79}
!79 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!80 = !DILocalVariable(name: "xx", scope: !76, file: !29, line: 52, type: !79)
!81 = !DILocation(line: 52, column: 6, scope: !76)
!82 = !DILocalVariable(name: "sockfd", scope: !76, file: !29, line: 52, type: !79)
!83 = !DILocation(line: 52, column: 12, scope: !76)
!84 = !DILocalVariable(name: "new_fd", scope: !76, file: !29, line: 52, type: !79)
!85 = !DILocation(line: 52, column: 20, scope: !76)
!86 = !DILocalVariable(name: "numbytes", scope: !76, file: !29, line: 52, type: !79)
!87 = !DILocation(line: 52, column: 28, scope: !76)
!88 = !DILocalVariable(name: "my_addr", scope: !76, file: !29, line: 53, type: !89)
!89 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !90, line: 245, size: 128, elements: !91)
!90 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "")
!91 = !{!92, !93, !99, !106}
!92 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !89, file: !90, line: 247, baseType: !12, size: 16)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !89, file: !90, line: 248, baseType: !94, size: 16, offset: 16)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !90, line: 123, baseType: !95)
!95 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !96, line: 25, baseType: !97)
!96 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/stdint-uintn.h", directory: "")
!97 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !98, line: 40, baseType: !14)
!98 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/types.h", directory: "")
!99 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !89, file: !90, line: 249, baseType: !100, size: 32, offset: 32)
!100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !90, line: 31, size: 32, elements: !101)
!101 = !{!102}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !100, file: !90, line: 33, baseType: !103, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !90, line: 30, baseType: !104)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !96, line: 26, baseType: !105)
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !98, line: 42, baseType: !56)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !89, file: !90, line: 252, baseType: !107, size: 64, offset: 64)
!107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !109)
!108 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!109 = !{!110}
!110 = !DISubrange(count: 8)
!111 = !DILocation(line: 53, column: 21, scope: !76)
!112 = !DILocalVariable(name: "their_addr", scope: !76, file: !29, line: 54, type: !89)
!113 = !DILocation(line: 54, column: 21, scope: !76)
!114 = !DILocalVariable(name: "sin_size", scope: !76, file: !29, line: 55, type: !79)
!115 = !DILocation(line: 55, column: 6, scope: !76)
!116 = !DILocalVariable(name: "i", scope: !76, file: !29, line: 55, type: !79)
!117 = !DILocation(line: 55, column: 16, scope: !76)
!118 = !DILocalVariable(name: "tv", scope: !76, file: !29, line: 56, type: !119)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !120, line: 8, size: 128, elements: !121)
!120 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/types/struct_timeval.h", directory: "")
!121 = !{!122, !125}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !119, file: !120, line: 14, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !98, line: 160, baseType: !124)
!124 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !119, file: !120, line: 15, baseType: !126, size: 64, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !98, line: 162, baseType: !124)
!127 = !DILocation(line: 56, column: 17, scope: !76)
!128 = !DILocalVariable(name: "readfds", scope: !76, file: !29, line: 57, type: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !130, line: 70, baseType: !131)
!130 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/sys/select.h", directory: "")
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !130, line: 59, size: 1024, elements: !132)
!132 = !{!133}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "__fds_bits", scope: !131, file: !130, line: 67, baseType: !134, size: 1024)
!134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 1024, elements: !136)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !130, line: 49, baseType: !124)
!136 = !{!137}
!137 = !DISubrange(count: 16)
!138 = !DILocation(line: 57, column: 9, scope: !76)
!139 = !DILocalVariable(name: "exceptfds", scope: !76, file: !29, line: 57, type: !129)
!140 = !DILocation(line: 57, column: 18, scope: !76)
!141 = !DILocalVariable(name: "pw", scope: !76, file: !29, line: 58, type: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !144, line: 49, size: 384, elements: !145)
!144 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!145 = !{!146, !147, !148, !150, !152, !153, !154}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !143, file: !144, line: 51, baseType: !49, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !143, file: !144, line: 52, baseType: !49, size: 64, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !143, file: !144, line: 54, baseType: !149, size: 32, offset: 128)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !98, line: 146, baseType: !56)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !143, file: !144, line: 55, baseType: !151, size: 32, offset: 160)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !98, line: 147, baseType: !56)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !143, file: !144, line: 56, baseType: !49, size: 64, offset: 192)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !143, file: !144, line: 57, baseType: !49, size: 64, offset: 256)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !143, file: !144, line: 58, baseType: !49, size: 64, offset: 320)
!155 = !DILocation(line: 58, column: 17, scope: !76)
!156 = !DILocation(line: 64, column: 2, scope: !76)
!157 = !DILocation(line: 65, column: 2, scope: !76)
!158 = !DILocation(line: 66, column: 2, scope: !76)
!159 = !DILocation(line: 67, column: 2, scope: !76)
!160 = !DILocation(line: 73, column: 14, scope: !76)
!161 = !DILocation(line: 73, column: 12, scope: !76)
!162 = !DILocation(line: 74, column: 30, scope: !76)
!163 = !DILocation(line: 74, column: 39, scope: !76)
!164 = !DILocation(line: 74, column: 43, scope: !76)
!165 = !DILocation(line: 74, column: 22, scope: !76)
!166 = !DILocation(line: 74, column: 11, scope: !76)
!167 = !DILocation(line: 74, column: 9, scope: !76)
!168 = !DILocation(line: 143, column: 56, scope: !76)
!169 = !DILocation(line: 143, column: 2, scope: !76)
!170 = !DILocation(line: 145, column: 2, scope: !76)
!171 = !DILocation(line: 153, column: 2, scope: !76)
!172 = !DILocation(line: 158, column: 28, scope: !173)
!173 = distinct !DILexicalBlock(scope: !174, file: !29, line: 158, column: 12)
!174 = distinct !DILexicalBlock(scope: !76, file: !29, line: 153, column: 11)
!175 = !DILocation(line: 158, column: 12, scope: !173)
!176 = !DILocation(line: 158, column: 35, scope: !173)
!177 = !DILocation(line: 158, column: 12, scope: !174)
!178 = !DILocation(line: 158, column: 41, scope: !173)
!179 = !DILocation(line: 188, column: 9, scope: !174)
!180 = !DILocation(line: 188, column: 3, scope: !174)
!181 = distinct !{!181, !171, !182}
!182 = !DILocation(line: 191, column: 2, scope: !76)
!183 = !DILocation(line: 193, column: 2, scope: !76)
!184 = distinct !DISubprogram(name: "inetd_server", scope: !29, file: !29, line: 200, type: !77, scopeLine: 201, spFlags: DISPFlagDefinition, unit: !28, retainedNodes: !4)
!185 = !DILocalVariable(name: "their_addr", scope: !184, file: !29, line: 202, type: !89)
!186 = !DILocation(line: 202, column: 22, scope: !184)
!187 = !DILocalVariable(name: "sval", scope: !184, file: !29, line: 203, type: !188)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !189, line: 46, baseType: !53)
!189 = !DIFile(filename: "/usr/lib/llvm-13/lib/clang/13.0.1/include/stddef.h", directory: "")
!190 = !DILocation(line: 203, column: 10, scope: !184)
!191 = !DILocalVariable(name: "pw", scope: !184, file: !29, line: 204, type: !142)
!192 = !DILocation(line: 204, column: 18, scope: !184)
!193 = !DILocation(line: 207, column: 22, scope: !194)
!194 = distinct !DILexicalBlock(scope: !184, file: !29, line: 207, column: 7)
!195 = !DILocation(line: 207, column: 55, scope: !194)
!196 = !DILocation(line: 207, column: 7, scope: !194)
!197 = !DILocation(line: 207, column: 62, scope: !194)
!198 = !DILocation(line: 207, column: 7, scope: !184)
!199 = !DILocation(line: 208, column: 3, scope: !200)
!200 = distinct !DILexicalBlock(scope: !194, file: !29, line: 207, column: 67)
!201 = !DILocation(line: 212, column: 13, scope: !202)
!202 = distinct !DILexicalBlock(scope: !184, file: !29, line: 212, column: 7)
!203 = !DILocation(line: 212, column: 11, scope: !202)
!204 = !DILocation(line: 212, column: 33, scope: !202)
!205 = !DILocation(line: 212, column: 7, scope: !184)
!206 = !DILocation(line: 213, column: 10, scope: !207)
!207 = distinct !DILexicalBlock(scope: !202, file: !29, line: 212, column: 42)
!208 = !DILocation(line: 213, column: 14, scope: !207)
!209 = !DILocation(line: 213, column: 3, scope: !207)
!210 = !DILocation(line: 214, column: 10, scope: !207)
!211 = !DILocation(line: 214, column: 14, scope: !207)
!212 = !DILocation(line: 214, column: 3, scope: !207)
!213 = !DILocation(line: 215, column: 3, scope: !207)
!214 = !DILocation(line: 217, column: 50, scope: !184)
!215 = !DILocation(line: 217, column: 29, scope: !184)
!216 = !DILocation(line: 217, column: 3, scope: !184)
!217 = !DILocation(line: 218, column: 54, scope: !184)
!218 = !DILocation(line: 218, column: 33, scope: !184)
!219 = !DILocation(line: 218, column: 25, scope: !184)
!220 = !DILocation(line: 218, column: 3, scope: !184)
!221 = !DILocation(line: 220, column: 3, scope: !184)
!222 = !DILocation(line: 222, column: 3, scope: !184)
!223 = distinct !DISubprogram(name: "signal_handler", scope: !29, file: !29, line: 225, type: !224, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !28, retainedNodes: !4)
!224 = !DISubroutineType(types: !225)
!225 = !{null, !79}
!226 = !DILocalVariable(name: "signum", arg: 1, scope: !223, file: !29, line: 225, type: !79)
!227 = !DILocation(line: 225, column: 25, scope: !223)
!228 = !DILocation(line: 227, column: 5, scope: !229)
!229 = distinct !DILexicalBlock(scope: !223, file: !29, line: 227, column: 5)
!230 = !DILocation(line: 227, column: 12, scope: !229)
!231 = !DILocation(line: 227, column: 5, scope: !223)
!232 = !DILocation(line: 229, column: 3, scope: !233)
!233 = distinct !DILexicalBlock(scope: !229, file: !29, line: 228, column: 2)
!234 = !DILocation(line: 229, column: 9, scope: !233)
!235 = !DILocation(line: 229, column: 34, scope: !233)
!236 = distinct !{!236, !232, !237, !238}
!237 = !DILocation(line: 229, column: 38, scope: !233)
!238 = !{!"llvm.loop.mustprogress"}
!239 = !DILocation(line: 230, column: 2, scope: !233)
!240 = !DILocation(line: 231, column: 10, scope: !241)
!241 = distinct !DILexicalBlock(scope: !229, file: !29, line: 231, column: 10)
!242 = !DILocation(line: 231, column: 17, scope: !241)
!243 = !DILocation(line: 231, column: 10, scope: !229)
!244 = !DILocation(line: 232, column: 3, scope: !241)
!245 = !DILocation(line: 235, column: 3, scope: !246)
!246 = distinct !DILexicalBlock(scope: !241, file: !29, line: 234, column: 2)
!247 = !DILocation(line: 235, column: 9, scope: !246)
!248 = !DILocation(line: 235, column: 34, scope: !246)
!249 = distinct !{!249, !245, !250, !238}
!250 = !DILocation(line: 235, column: 38, scope: !246)
!251 = !DILocation(line: 236, column: 3, scope: !246)
!252 = !DILocation(line: 238, column: 1, scope: !223)
!253 = distinct !DISubprogram(name: "serveconnection", scope: !3, file: !3, line: 38, type: !254, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!254 = !DISubroutineType(types: !255)
!255 = !{!79, !79}
!256 = !DILocalVariable(name: "sockfd", arg: 1, scope: !253, file: !3, line: 38, type: !79)
!257 = !DILocation(line: 38, column: 25, scope: !253)
!258 = !DILocalVariable(name: "in", scope: !253, file: !3, line: 40, type: !259)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !261, line: 7, baseType: !262)
!261 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/types/FILE.h", directory: "")
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !263, line: 49, size: 1728, elements: !264)
!263 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!264 = !{!265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !280, !282, !283, !284, !286, !287, !289, !293, !296, !298, !301, !304, !305, !306, !307, !308}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !262, file: !263, line: 51, baseType: !79, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !262, file: !263, line: 54, baseType: !49, size: 64, offset: 64)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !262, file: !263, line: 55, baseType: !49, size: 64, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !262, file: !263, line: 56, baseType: !49, size: 64, offset: 192)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !262, file: !263, line: 57, baseType: !49, size: 64, offset: 256)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !262, file: !263, line: 58, baseType: !49, size: 64, offset: 320)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !262, file: !263, line: 59, baseType: !49, size: 64, offset: 384)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !262, file: !263, line: 60, baseType: !49, size: 64, offset: 448)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !262, file: !263, line: 61, baseType: !49, size: 64, offset: 512)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !262, file: !263, line: 64, baseType: !49, size: 64, offset: 576)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !262, file: !263, line: 65, baseType: !49, size: 64, offset: 640)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !262, file: !263, line: 66, baseType: !49, size: 64, offset: 704)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !262, file: !263, line: 68, baseType: !278, size: 64, offset: 768)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!279 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !263, line: 36, flags: DIFlagFwdDecl)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !262, file: !263, line: 70, baseType: !281, size: 64, offset: 832)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !262, file: !263, line: 72, baseType: !79, size: 32, offset: 896)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !262, file: !263, line: 73, baseType: !79, size: 32, offset: 928)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !262, file: !263, line: 74, baseType: !285, size: 64, offset: 960)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !98, line: 152, baseType: !124)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !262, file: !263, line: 77, baseType: !14, size: 16, offset: 1024)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !262, file: !263, line: 78, baseType: !288, size: 8, offset: 1040)
!288 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !262, file: !263, line: 79, baseType: !290, size: 8, offset: 1048)
!290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 8, elements: !291)
!291 = !{!292}
!292 = !DISubrange(count: 1)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !262, file: !263, line: 81, baseType: !294, size: 64, offset: 1088)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !263, line: 43, baseType: null)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !262, file: !263, line: 89, baseType: !297, size: 64, offset: 1152)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !98, line: 153, baseType: !124)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !262, file: !263, line: 91, baseType: !299, size: 64, offset: 1216)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !263, line: 37, flags: DIFlagFwdDecl)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !262, file: !263, line: 92, baseType: !302, size: 64, offset: 1280)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !263, line: 38, flags: DIFlagFwdDecl)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !262, file: !263, line: 93, baseType: !281, size: 64, offset: 1344)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !262, file: !263, line: 94, baseType: !6, size: 64, offset: 1408)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !262, file: !263, line: 95, baseType: !188, size: 64, offset: 1472)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !262, file: !263, line: 96, baseType: !79, size: 32, offset: 1536)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !262, file: !263, line: 98, baseType: !309, size: 160, offset: 1568)
!309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 160, elements: !310)
!310 = !{!311}
!311 = !DISubrange(count: 20)
!312 = !DILocation(line: 40, column: 8, scope: !253)
!313 = !DILocalVariable(name: "tempdata", scope: !253, file: !3, line: 41, type: !314)
!314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 65536, elements: !315)
!315 = !{!316}
!316 = !DISubrange(count: 8192)
!317 = !DILocation(line: 41, column: 7, scope: !253)
!318 = !DILocalVariable(name: "ptr", scope: !253, file: !3, line: 41, type: !49)
!319 = !DILocation(line: 41, column: 24, scope: !253)
!320 = !DILocalVariable(name: "ptr2", scope: !253, file: !3, line: 41, type: !49)
!321 = !DILocation(line: 41, column: 30, scope: !253)
!322 = !DILocalVariable(name: "host_ptr1", scope: !253, file: !3, line: 41, type: !49)
!323 = !DILocation(line: 41, column: 37, scope: !253)
!324 = !DILocalVariable(name: "host_ptr2", scope: !253, file: !3, line: 41, type: !49)
!325 = !DILocation(line: 41, column: 49, scope: !253)
!326 = !DILocalVariable(name: "tempstring", scope: !253, file: !3, line: 42, type: !314)
!327 = !DILocation(line: 42, column: 7, scope: !253)
!328 = !DILocalVariable(name: "mimetype", scope: !253, file: !3, line: 42, type: !329)
!329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 400, elements: !330)
!330 = !{!331}
!331 = !DISubrange(count: 50)
!332 = !DILocation(line: 42, column: 25, scope: !253)
!333 = !DILocalVariable(name: "filename", scope: !253, file: !3, line: 43, type: !37)
!334 = !DILocation(line: 43, column: 7, scope: !253)
!335 = !DILocalVariable(name: "loop", scope: !253, file: !3, line: 44, type: !56)
!336 = !DILocation(line: 44, column: 15, scope: !253)
!337 = !DILocalVariable(name: "flag", scope: !253, file: !3, line: 44, type: !56)
!338 = !DILocation(line: 44, column: 23, scope: !253)
!339 = !DILocalVariable(name: "numbytes", scope: !253, file: !3, line: 45, type: !79)
!340 = !DILocation(line: 45, column: 6, scope: !253)
!341 = !DILocalVariable(name: "sa", scope: !253, file: !3, line: 46, type: !342)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !90, line: 245, size: 128, elements: !343)
!343 = !{!344, !345, !346, !350}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !342, file: !90, line: 247, baseType: !12, size: 16)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !342, file: !90, line: 248, baseType: !94, size: 16, offset: 16)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !342, file: !90, line: 249, baseType: !347, size: 32, offset: 32)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !90, line: 31, size: 32, elements: !348)
!348 = !{!349}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !347, file: !90, line: 33, baseType: !103, size: 32)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !342, file: !90, line: 252, baseType: !107, size: 64, offset: 64)
!351 = !DILocation(line: 46, column: 21, scope: !253)
!352 = !DILocalVariable(name: "addrlen", scope: !253, file: !3, line: 47, type: !79)
!353 = !DILocation(line: 47, column: 6, scope: !253)
!354 = !DILocalVariable(name: "thehost", scope: !253, file: !3, line: 48, type: !355)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "t_vhost", file: !33, line: 30, baseType: !357)
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !33, line: 23, size: 10200, elements: !358)
!358 = !{!359, !360, !361, !362, !363}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !357, file: !33, line: 25, baseType: !37, size: 2040)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "DOCUMENTROOT", scope: !357, file: !33, line: 26, baseType: !37, size: 2040, offset: 2040)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "DEFAULTPAGE", scope: !357, file: !33, line: 27, baseType: !37, size: 2040, offset: 4080)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "CGIBINDIR", scope: !357, file: !33, line: 28, baseType: !37, size: 2040, offset: 6120)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "CGIBINROOT", scope: !357, file: !33, line: 29, baseType: !37, size: 2040, offset: 8160)
!364 = !DILocation(line: 48, column: 11, scope: !253)
!365 = !DILocation(line: 50, column: 21, scope: !253)
!366 = !DILocation(line: 50, column: 2, scope: !253)
!367 = !DILocation(line: 51, column: 21, scope: !253)
!368 = !DILocation(line: 51, column: 2, scope: !253)
!369 = !DILocation(line: 52, column: 21, scope: !253)
!370 = !DILocation(line: 52, column: 2, scope: !253)
!371 = !DILocation(line: 53, column: 21, scope: !253)
!372 = !DILocation(line: 53, column: 2, scope: !253)
!373 = !DILocation(line: 54, column: 21, scope: !253)
!374 = !DILocation(line: 54, column: 2, scope: !253)
!375 = !DILocation(line: 55, column: 21, scope: !253)
!376 = !DILocation(line: 55, column: 2, scope: !253)
!377 = !DILocation(line: 56, column: 21, scope: !253)
!378 = !DILocation(line: 56, column: 2, scope: !253)
!379 = !DILocation(line: 57, column: 21, scope: !253)
!380 = !DILocation(line: 57, column: 2, scope: !253)
!381 = !DILocation(line: 58, column: 21, scope: !253)
!382 = !DILocation(line: 58, column: 2, scope: !253)
!383 = !DILocation(line: 60, column: 24, scope: !253)
!384 = !DILocation(line: 60, column: 5, scope: !253)
!385 = !DILocation(line: 61, column: 24, scope: !253)
!386 = !DILocation(line: 61, column: 5, scope: !253)
!387 = !DILocation(line: 62, column: 24, scope: !253)
!388 = !DILocation(line: 62, column: 5, scope: !253)
!389 = !DILocation(line: 63, column: 24, scope: !253)
!390 = !DILocation(line: 63, column: 5, scope: !253)
!391 = !DILocation(line: 64, column: 24, scope: !253)
!392 = !DILocation(line: 64, column: 5, scope: !253)
!393 = !DILocation(line: 65, column: 24, scope: !253)
!394 = !DILocation(line: 65, column: 5, scope: !253)
!395 = !DILocation(line: 67, column: 10, scope: !253)
!396 = !DILocation(line: 91, column: 5, scope: !397)
!397 = distinct !DILexicalBlock(scope: !253, file: !3, line: 91, column: 5)
!398 = !DILocation(line: 91, column: 9, scope: !397)
!399 = !DILocation(line: 91, column: 5, scope: !253)
!400 = !DILocation(line: 93, column: 10, scope: !401)
!401 = distinct !DILexicalBlock(scope: !397, file: !3, line: 92, column: 2)
!402 = !DILocation(line: 93, column: 3, scope: !401)
!403 = !DILocation(line: 94, column: 10, scope: !401)
!404 = !DILocation(line: 94, column: 3, scope: !401)
!405 = !DILocation(line: 95, column: 3, scope: !401)
!406 = !DILocation(line: 98, column: 21, scope: !253)
!407 = !DILocation(line: 98, column: 14, scope: !253)
!408 = !DILocation(line: 98, column: 12, scope: !253)
!409 = !DILocation(line: 99, column: 5, scope: !410)
!410 = distinct !DILexicalBlock(scope: !253, file: !3, line: 99, column: 5)
!411 = !DILocation(line: 99, column: 5, scope: !253)
!412 = !DILocation(line: 101, column: 22, scope: !413)
!413 = distinct !DILexicalBlock(scope: !410, file: !3, line: 100, column: 2)
!414 = !DILocation(line: 101, column: 31, scope: !413)
!415 = !DILocation(line: 101, column: 15, scope: !413)
!416 = !DILocation(line: 101, column: 13, scope: !413)
!417 = !DILocation(line: 103, column: 11, scope: !418)
!418 = distinct !DILexicalBlock(scope: !413, file: !3, line: 103, column: 3)
!419 = !DILocation(line: 103, column: 7, scope: !418)
!420 = !DILocation(line: 103, column: 15, scope: !421)
!421 = distinct !DILexicalBlock(scope: !418, file: !3, line: 103, column: 3)
!422 = !DILocation(line: 103, column: 20, scope: !421)
!423 = !DILocation(line: 103, column: 19, scope: !421)
!424 = !DILocation(line: 103, column: 3, scope: !418)
!425 = !DILocation(line: 104, column: 17, scope: !426)
!426 = distinct !DILexicalBlock(scope: !421, file: !3, line: 104, column: 7)
!427 = !DILocation(line: 104, column: 24, scope: !426)
!428 = !DILocation(line: 104, column: 30, scope: !426)
!429 = !DILocation(line: 104, column: 36, scope: !426)
!430 = !DILocation(line: 104, column: 8, scope: !426)
!431 = !DILocation(line: 104, column: 7, scope: !421)
!432 = !DILocation(line: 105, column: 16, scope: !426)
!433 = !DILocation(line: 105, column: 23, scope: !426)
!434 = !DILocation(line: 105, column: 13, scope: !426)
!435 = !DILocation(line: 105, column: 5, scope: !426)
!436 = !DILocation(line: 104, column: 45, scope: !426)
!437 = !DILocation(line: 103, column: 35, scope: !421)
!438 = !DILocation(line: 103, column: 3, scope: !421)
!439 = distinct !{!439, !424, !440, !238}
!440 = !DILocation(line: 105, column: 27, scope: !418)
!441 = !DILocation(line: 106, column: 2, scope: !413)
!442 = !DILocation(line: 108, column: 11, scope: !410)
!443 = !DILocation(line: 116, column: 17, scope: !253)
!444 = !DILocation(line: 116, column: 25, scope: !253)
!445 = !DILocation(line: 116, column: 5, scope: !253)
!446 = !DILocalVariable(name: "ret", scope: !253, file: !3, line: 118, type: !79)
!447 = !DILocation(line: 118, column: 9, scope: !253)
!448 = !DILocation(line: 119, column: 24, scope: !253)
!449 = !DILocation(line: 119, column: 5, scope: !253)
!450 = !DILocation(line: 120, column: 50, scope: !253)
!451 = !DILocation(line: 120, column: 55, scope: !253)
!452 = !DILocation(line: 120, column: 2, scope: !253)
!453 = !DILocalVariable(name: "opt", scope: !253, file: !3, line: 125, type: !79)
!454 = !DILocation(line: 125, column: 9, scope: !253)
!455 = !DILocation(line: 126, column: 24, scope: !253)
!456 = !DILocation(line: 126, column: 5, scope: !253)
!457 = !DILocation(line: 128, column: 6, scope: !458)
!458 = distinct !DILexicalBlock(scope: !253, file: !3, line: 128, column: 6)
!459 = !DILocation(line: 128, column: 6, scope: !253)
!460 = !DILocation(line: 140, column: 22, scope: !461)
!461 = distinct !DILexicalBlock(scope: !462, file: !3, line: 140, column: 6)
!462 = distinct !DILexicalBlock(scope: !458, file: !3, line: 128, column: 10)
!463 = !DILocation(line: 140, column: 6, scope: !461)
!464 = !DILocation(line: 140, column: 31, scope: !461)
!465 = !DILocation(line: 140, column: 38, scope: !461)
!466 = !DILocation(line: 140, column: 53, scope: !461)
!467 = !DILocation(line: 140, column: 41, scope: !461)
!468 = !DILocation(line: 140, column: 62, scope: !461)
!469 = !DILocation(line: 140, column: 6, scope: !462)
!470 = !DILocation(line: 142, column: 12, scope: !471)
!471 = distinct !DILexicalBlock(scope: !472, file: !3, line: 142, column: 7)
!472 = distinct !DILexicalBlock(scope: !461, file: !3, line: 141, column: 3)
!473 = !DILocation(line: 142, column: 7, scope: !471)
!474 = !DILocation(line: 142, column: 47, scope: !471)
!475 = !DILocation(line: 142, column: 7, scope: !472)
!476 = !DILocation(line: 144, column: 12, scope: !477)
!477 = distinct !DILexicalBlock(scope: !471, file: !3, line: 143, column: 4)
!478 = !DILocation(line: 144, column: 5, scope: !477)
!479 = !DILocation(line: 145, column: 5, scope: !477)
!480 = !DILocation(line: 147, column: 12, scope: !481)
!481 = distinct !DILexicalBlock(scope: !472, file: !3, line: 147, column: 7)
!482 = !DILocation(line: 147, column: 7, scope: !481)
!483 = !DILocation(line: 147, column: 82, scope: !481)
!484 = !DILocation(line: 147, column: 7, scope: !472)
!485 = !DILocation(line: 149, column: 12, scope: !486)
!486 = distinct !DILexicalBlock(scope: !481, file: !3, line: 148, column: 4)
!487 = !DILocation(line: 149, column: 5, scope: !486)
!488 = !DILocation(line: 150, column: 5, scope: !486)
!489 = !DILocation(line: 154, column: 17, scope: !490)
!490 = distinct !DILexicalBlock(scope: !472, file: !3, line: 154, column: 7)
!491 = !DILocation(line: 154, column: 12, scope: !490)
!492 = !DILocation(line: 154, column: 9, scope: !490)
!493 = !DILocation(line: 154, column: 28, scope: !490)
!494 = !DILocation(line: 154, column: 41, scope: !490)
!495 = !DILocation(line: 154, column: 36, scope: !490)
!496 = !DILocation(line: 154, column: 33, scope: !490)
!497 = !DILocation(line: 154, column: 7, scope: !472)
!498 = !DILocation(line: 155, column: 5, scope: !490)
!499 = !DILocation(line: 157, column: 11, scope: !472)
!500 = !DILocation(line: 157, column: 4, scope: !472)
!501 = !DILocation(line: 158, column: 11, scope: !472)
!502 = !DILocation(line: 158, column: 4, scope: !472)
!503 = !DILocation(line: 159, column: 7, scope: !504)
!504 = distinct !DILexicalBlock(scope: !472, file: !3, line: 159, column: 7)
!505 = !DILocation(line: 159, column: 11, scope: !504)
!506 = !DILocation(line: 159, column: 7, scope: !472)
!507 = !DILocation(line: 159, column: 39, scope: !504)
!508 = !DILocation(line: 159, column: 43, scope: !504)
!509 = !DILocation(line: 159, column: 16, scope: !504)
!510 = !DILocation(line: 161, column: 10, scope: !472)
!511 = !DILocation(line: 161, column: 19, scope: !472)
!512 = !DILocation(line: 161, column: 4, scope: !472)
!513 = !DILocation(line: 163, column: 10, scope: !472)
!514 = !DILocation(line: 163, column: 4, scope: !472)
!515 = !DILocation(line: 164, column: 3, scope: !472)
!516 = !DILocation(line: 166, column: 10, scope: !462)
!517 = !DILocation(line: 166, column: 3, scope: !462)
!518 = !DILocation(line: 167, column: 3, scope: !462)
!519 = !DILocation(line: 173, column: 21, scope: !520)
!520 = distinct !DILexicalBlock(scope: !253, file: !3, line: 173, column: 5)
!521 = !DILocation(line: 173, column: 5, scope: !520)
!522 = !DILocation(line: 173, column: 30, scope: !520)
!523 = !DILocation(line: 173, column: 5, scope: !253)
!524 = !DILocation(line: 182, column: 22, scope: !525)
!525 = distinct !DILexicalBlock(scope: !526, file: !3, line: 182, column: 6)
!526 = distinct !DILexicalBlock(scope: !520, file: !3, line: 174, column: 2)
!527 = !DILocation(line: 182, column: 6, scope: !525)
!528 = !DILocation(line: 182, column: 32, scope: !525)
!529 = !DILocation(line: 182, column: 6, scope: !526)
!530 = !DILocation(line: 185, column: 19, scope: !531)
!531 = distinct !DILexicalBlock(scope: !532, file: !3, line: 185, column: 7)
!532 = distinct !DILexicalBlock(scope: !525, file: !3, line: 183, column: 3)
!533 = !DILocation(line: 185, column: 7, scope: !531)
!534 = !DILocation(line: 185, column: 29, scope: !531)
!535 = !DILocation(line: 185, column: 7, scope: !532)
!536 = !DILocation(line: 185, column: 48, scope: !537)
!537 = distinct !DILexicalBlock(scope: !531, file: !3, line: 185, column: 38)
!538 = !DILocation(line: 185, column: 58, scope: !537)
!539 = !DILocation(line: 185, column: 66, scope: !537)
!540 = !DILocation(line: 185, column: 40, scope: !537)
!541 = !DILocation(line: 185, column: 76, scope: !537)
!542 = !DILocation(line: 190, column: 3, scope: !532)
!543 = !DILocation(line: 192, column: 2, scope: !526)
!544 = !DILocation(line: 173, column: 32, scope: !520)
!545 = !DILabel(scope: !253, name: "sendpage", file: !3, line: 193)
!546 = !DILocation(line: 193, column: 1, scope: !253)
!547 = !DILocation(line: 237, column: 8, scope: !253)
!548 = !DILocation(line: 237, column: 2, scope: !253)
!549 = !DILocation(line: 238, column: 2, scope: !253)
!550 = !DILocation(line: 239, column: 1, scope: !253)
!551 = distinct !DISubprogram(name: "showdir", scope: !3, file: !3, line: 268, type: !552, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!552 = !DISubroutineType(types: !553)
!553 = !{null, !49, !79, !355}
!554 = !DILocalVariable(name: "directory", arg: 1, scope: !551, file: !3, line: 268, type: !49)
!555 = !DILocation(line: 268, column: 20, scope: !551)
!556 = !DILocalVariable(name: "sockfd", arg: 2, scope: !551, file: !3, line: 268, type: !79)
!557 = !DILocation(line: 268, column: 35, scope: !551)
!558 = !DILocalVariable(name: "thehost", arg: 3, scope: !551, file: !3, line: 268, type: !355)
!559 = !DILocation(line: 268, column: 52, scope: !551)
!560 = !DILocalVariable(name: "namelist", scope: !551, file: !3, line: 270, type: !561)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !564, line: 22, size: 2240, elements: !565)
!564 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/dirent.h", directory: "")
!565 = !{!566, !568, !569, !570, !571}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !563, file: !564, line: 25, baseType: !567, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !98, line: 148, baseType: !53)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !563, file: !564, line: 26, baseType: !285, size: 64, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !563, file: !564, line: 31, baseType: !14, size: 16, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !563, file: !564, line: 32, baseType: !108, size: 8, offset: 144)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !563, file: !564, line: 33, baseType: !572, size: 2048, offset: 152)
!572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 2048, elements: !573)
!573 = !{!574}
!574 = !DISubrange(count: 256)
!575 = !DILocation(line: 270, column: 18, scope: !551)
!576 = !DILocalVariable(name: "n", scope: !551, file: !3, line: 271, type: !79)
!577 = !DILocation(line: 271, column: 6, scope: !551)
!578 = !DILocalVariable(name: "loop", scope: !551, file: !3, line: 271, type: !79)
!579 = !DILocation(line: 271, column: 9, scope: !551)
!580 = !DILocalVariable(name: "size", scope: !551, file: !3, line: 272, type: !53)
!581 = !DILocation(line: 272, column: 16, scope: !551)
!582 = !DILocalVariable(name: "in", scope: !551, file: !3, line: 273, type: !259)
!583 = !DILocation(line: 273, column: 8, scope: !551)
!584 = !DILocalVariable(name: "tempstring", scope: !551, file: !3, line: 274, type: !37)
!585 = !DILocation(line: 274, column: 7, scope: !551)
!586 = !DILocalVariable(name: "dirheader", scope: !551, file: !3, line: 275, type: !587)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 16384, elements: !588)
!588 = !{!589}
!589 = !DISubrange(count: 2048)
!590 = !DILocation(line: 275, column: 7, scope: !551)
!591 = !DILocalVariable(name: "dirfooter", scope: !551, file: !3, line: 276, type: !592)
!592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !593, size: 1528, elements: !594)
!593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17)
!594 = !{!595}
!595 = !DISubrange(count: 191)
!596 = !DILocation(line: 276, column: 13, scope: !551)
!597 = !DILocation(line: 278, column: 2, scope: !551)
!598 = !DILocation(line: 280, column: 10, scope: !551)
!599 = !DILocation(line: 280, column: 402, scope: !551)
!600 = !DILocation(line: 280, column: 419, scope: !551)
!601 = !DILocation(line: 280, column: 428, scope: !551)
!602 = !DILocation(line: 280, column: 412, scope: !551)
!603 = !DILocation(line: 280, column: 411, scope: !551)
!604 = !DILocation(line: 280, column: 2, scope: !551)
!605 = !DILocation(line: 282, column: 10, scope: !606)
!606 = distinct !DILexicalBlock(scope: !551, file: !3, line: 282, column: 5)
!607 = !DILocation(line: 282, column: 18, scope: !606)
!608 = !DILocation(line: 282, column: 5, scope: !606)
!609 = !DILocation(line: 282, column: 51, scope: !606)
!610 = !DILocation(line: 282, column: 5, scope: !551)
!611 = !DILocation(line: 283, column: 3, scope: !606)
!612 = !DILocation(line: 285, column: 14, scope: !551)
!613 = !DILocation(line: 285, column: 6, scope: !551)
!614 = !DILocation(line: 285, column: 4, scope: !551)
!615 = !DILocation(line: 287, column: 22, scope: !551)
!616 = !DILocation(line: 287, column: 31, scope: !551)
!617 = !DILocation(line: 287, column: 15, scope: !551)
!618 = !DILocation(line: 287, column: 12, scope: !551)
!619 = !DILocation(line: 289, column: 6, scope: !620)
!620 = distinct !DILexicalBlock(scope: !551, file: !3, line: 289, column: 6)
!621 = !DILocation(line: 289, column: 8, scope: !620)
!622 = !DILocation(line: 289, column: 6, scope: !551)
!623 = !DILocation(line: 290, column: 7, scope: !620)
!624 = !DILocation(line: 292, column: 15, scope: !625)
!625 = distinct !DILexicalBlock(scope: !620, file: !3, line: 292, column: 7)
!626 = !DILocation(line: 292, column: 11, scope: !625)
!627 = !DILocation(line: 292, column: 19, scope: !628)
!628 = distinct !DILexicalBlock(scope: !625, file: !3, line: 292, column: 7)
!629 = !DILocation(line: 292, column: 24, scope: !628)
!630 = !DILocation(line: 292, column: 23, scope: !628)
!631 = !DILocation(line: 292, column: 7, scope: !625)
!632 = !DILocation(line: 294, column: 16, scope: !633)
!633 = distinct !DILexicalBlock(scope: !628, file: !3, line: 293, column: 7)
!634 = !DILocation(line: 294, column: 39, scope: !633)
!635 = !DILocation(line: 294, column: 48, scope: !633)
!636 = !DILocation(line: 294, column: 62, scope: !633)
!637 = !DILocation(line: 294, column: 73, scope: !633)
!638 = !DILocation(line: 294, column: 82, scope: !633)
!639 = !DILocation(line: 294, column: 89, scope: !633)
!640 = !DILocation(line: 294, column: 8, scope: !633)
!641 = !DILocation(line: 295, column: 25, scope: !633)
!642 = !DILocation(line: 295, column: 11, scope: !633)
!643 = !DILocation(line: 295, column: 9, scope: !633)
!644 = !DILocation(line: 296, column: 19, scope: !645)
!645 = distinct !DILexicalBlock(scope: !633, file: !3, line: 296, column: 7)
!646 = !DILocation(line: 296, column: 7, scope: !645)
!647 = !DILocation(line: 296, column: 7, scope: !633)
!648 = !DILocation(line: 296, column: 36, scope: !645)
!649 = !DILocation(line: 296, column: 32, scope: !645)
!650 = !DILocation(line: 297, column: 16, scope: !633)
!651 = !DILocation(line: 297, column: 121, scope: !633)
!652 = !DILocation(line: 297, column: 131, scope: !633)
!653 = !DILocation(line: 297, column: 140, scope: !633)
!654 = !DILocation(line: 297, column: 147, scope: !633)
!655 = !DILocation(line: 297, column: 155, scope: !633)
!656 = !DILocation(line: 297, column: 164, scope: !633)
!657 = !DILocation(line: 297, column: 171, scope: !633)
!658 = !DILocation(line: 297, column: 179, scope: !633)
!659 = !DILocation(line: 297, column: 8, scope: !633)
!660 = !DILocation(line: 298, column: 16, scope: !661)
!661 = distinct !DILexicalBlock(scope: !633, file: !3, line: 298, column: 11)
!662 = !DILocation(line: 298, column: 24, scope: !661)
!663 = !DILocation(line: 298, column: 43, scope: !661)
!664 = !DILocation(line: 298, column: 36, scope: !661)
!665 = !DILocation(line: 298, column: 11, scope: !661)
!666 = !DILocation(line: 298, column: 58, scope: !661)
!667 = !DILocation(line: 298, column: 11, scope: !633)
!668 = !DILocation(line: 299, column: 9, scope: !661)
!669 = !DILocation(line: 300, column: 7, scope: !633)
!670 = !DILocation(line: 292, column: 31, scope: !628)
!671 = !DILocation(line: 292, column: 7, scope: !628)
!672 = distinct !{!672, !631, !673, !238}
!673 = !DILocation(line: 300, column: 7, scope: !625)
!674 = !DILocation(line: 302, column: 7, scope: !551)
!675 = !DILocation(line: 302, column: 15, scope: !551)
!676 = !DILocation(line: 302, column: 2, scope: !551)
!677 = !DILocation(line: 303, column: 1, scope: !551)
!678 = distinct !DISubprogram(name: "getmimetype", scope: !3, file: !3, line: 241, type: !679, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!679 = !DISubroutineType(types: !680)
!680 = !{null, !49, !49}
!681 = !DILocalVariable(name: "filename", arg: 1, scope: !678, file: !3, line: 241, type: !49)
!682 = !DILocation(line: 241, column: 24, scope: !678)
!683 = !DILocalVariable(name: "mimetype", arg: 2, scope: !678, file: !3, line: 241, type: !49)
!684 = !DILocation(line: 241, column: 40, scope: !678)
!685 = !DILocalVariable(name: "tempstring", scope: !678, file: !3, line: 243, type: !329)
!686 = !DILocation(line: 243, column: 7, scope: !678)
!687 = !DILocalVariable(name: "tempstring2", scope: !678, file: !3, line: 244, type: !329)
!688 = !DILocation(line: 244, column: 7, scope: !678)
!689 = !DILocalVariable(name: "loop", scope: !678, file: !3, line: 245, type: !56)
!690 = !DILocation(line: 245, column: 15, scope: !678)
!691 = !DILocation(line: 247, column: 2, scope: !678)
!692 = !DILocation(line: 250, column: 10, scope: !693)
!693 = distinct !DILexicalBlock(scope: !678, file: !3, line: 250, column: 2)
!694 = !DILocation(line: 250, column: 6, scope: !693)
!695 = !DILocation(line: 250, column: 14, scope: !696)
!696 = distinct !DILexicalBlock(scope: !693, file: !3, line: 250, column: 2)
!697 = !DILocation(line: 250, column: 26, scope: !696)
!698 = !DILocation(line: 250, column: 19, scope: !696)
!699 = !DILocation(line: 250, column: 18, scope: !696)
!700 = !DILocation(line: 250, column: 36, scope: !696)
!701 = !DILocation(line: 250, column: 39, scope: !696)
!702 = !DILocation(line: 250, column: 55, scope: !696)
!703 = !DILocation(line: 250, column: 48, scope: !696)
!704 = !DILocation(line: 250, column: 65, scope: !696)
!705 = !DILocation(line: 250, column: 64, scope: !696)
!706 = !DILocation(line: 250, column: 70, scope: !696)
!707 = !DILocation(line: 0, scope: !696)
!708 = !DILocation(line: 250, column: 2, scope: !693)
!709 = !DILocation(line: 251, column: 24, scope: !696)
!710 = !DILocation(line: 251, column: 40, scope: !696)
!711 = !DILocation(line: 251, column: 33, scope: !696)
!712 = !DILocation(line: 251, column: 50, scope: !696)
!713 = !DILocation(line: 251, column: 49, scope: !696)
!714 = !DILocation(line: 251, column: 14, scope: !696)
!715 = !DILocation(line: 251, column: 18, scope: !696)
!716 = !DILocation(line: 251, column: 3, scope: !696)
!717 = !DILocation(line: 251, column: 22, scope: !696)
!718 = !DILocation(line: 250, column: 81, scope: !696)
!719 = !DILocation(line: 250, column: 2, scope: !696)
!720 = distinct !{!720, !708, !721, !238}
!721 = !DILocation(line: 251, column: 54, scope: !693)
!722 = !DILocation(line: 254, column: 10, scope: !723)
!723 = distinct !DILexicalBlock(scope: !678, file: !3, line: 254, column: 2)
!724 = !DILocation(line: 254, column: 6, scope: !723)
!725 = !DILocation(line: 254, column: 14, scope: !726)
!726 = distinct !DILexicalBlock(scope: !723, file: !3, line: 254, column: 2)
!727 = !DILocation(line: 254, column: 26, scope: !726)
!728 = !DILocation(line: 254, column: 19, scope: !726)
!729 = !DILocation(line: 254, column: 18, scope: !726)
!730 = !DILocation(line: 254, column: 2, scope: !723)
!731 = !DILocation(line: 255, column: 41, scope: !726)
!732 = !DILocation(line: 255, column: 34, scope: !726)
!733 = !DILocation(line: 255, column: 53, scope: !726)
!734 = !DILocation(line: 255, column: 52, scope: !726)
!735 = !DILocation(line: 255, column: 57, scope: !726)
!736 = !DILocation(line: 255, column: 23, scope: !726)
!737 = !DILocation(line: 255, column: 15, scope: !726)
!738 = !DILocation(line: 255, column: 3, scope: !726)
!739 = !DILocation(line: 255, column: 21, scope: !726)
!740 = !DILocation(line: 254, column: 43, scope: !726)
!741 = !DILocation(line: 254, column: 2, scope: !726)
!742 = distinct !{!742, !730, !743, !238}
!743 = !DILocation(line: 255, column: 59, scope: !723)
!744 = !DILocation(line: 257, column: 14, scope: !678)
!745 = !DILocation(line: 257, column: 2, scope: !678)
!746 = !DILocation(line: 257, column: 20, scope: !678)
!747 = !DILocation(line: 262, column: 10, scope: !748)
!748 = distinct !DILexicalBlock(scope: !678, file: !3, line: 262, column: 2)
!749 = !DILocation(line: 262, column: 6, scope: !748)
!750 = !DILocation(line: 262, column: 32, scope: !751)
!751 = distinct !DILexicalBlock(scope: !748, file: !3, line: 262, column: 2)
!752 = !DILocation(line: 262, column: 21, scope: !751)
!753 = !DILocation(line: 262, column: 14, scope: !751)
!754 = !DILocation(line: 262, column: 46, scope: !751)
!755 = !DILocation(line: 262, column: 67, scope: !751)
!756 = !DILocation(line: 262, column: 56, scope: !751)
!757 = !DILocation(line: 262, column: 77, scope: !751)
!758 = !DILocation(line: 262, column: 49, scope: !751)
!759 = !DILocation(line: 0, scope: !751)
!760 = !DILocation(line: 262, column: 2, scope: !748)
!761 = !DILocation(line: 262, column: 95, scope: !751)
!762 = !DILocation(line: 262, column: 2, scope: !751)
!763 = distinct !{!763, !760, !764, !238}
!764 = !DILocation(line: 262, column: 98, scope: !748)
!765 = !DILocation(line: 264, column: 9, scope: !678)
!766 = !DILocation(line: 264, column: 30, scope: !678)
!767 = !DILocation(line: 264, column: 19, scope: !678)
!768 = !DILocation(line: 264, column: 2, scope: !678)
!769 = !DILocation(line: 265, column: 13, scope: !770)
!770 = distinct !DILexicalBlock(scope: !678, file: !3, line: 265, column: 5)
!771 = !DILocation(line: 265, column: 6, scope: !770)
!772 = !DILocation(line: 265, column: 5, scope: !678)
!773 = !DILocation(line: 265, column: 35, scope: !770)
!774 = !DILocation(line: 265, column: 28, scope: !770)
!775 = !DILocation(line: 266, column: 1, scope: !678)
!776 = distinct !DISubprogram(name: "getfileline", scope: !64, file: !64, line: 42, type: !777, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !63, retainedNodes: !4)
!777 = !DISubroutineType(types: !778)
!778 = !{null, !49, !779}
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !261, line: 7, baseType: !781)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !263, line: 49, size: 1728, elements: !782)
!782 = !{!783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !781, file: !263, line: 51, baseType: !79, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !781, file: !263, line: 54, baseType: !49, size: 64, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !781, file: !263, line: 55, baseType: !49, size: 64, offset: 128)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !781, file: !263, line: 56, baseType: !49, size: 64, offset: 192)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !781, file: !263, line: 57, baseType: !49, size: 64, offset: 256)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !781, file: !263, line: 58, baseType: !49, size: 64, offset: 320)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !781, file: !263, line: 59, baseType: !49, size: 64, offset: 384)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !781, file: !263, line: 60, baseType: !49, size: 64, offset: 448)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !781, file: !263, line: 61, baseType: !49, size: 64, offset: 512)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !781, file: !263, line: 64, baseType: !49, size: 64, offset: 576)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !781, file: !263, line: 65, baseType: !49, size: 64, offset: 640)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !781, file: !263, line: 66, baseType: !49, size: 64, offset: 704)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !781, file: !263, line: 68, baseType: !278, size: 64, offset: 768)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !781, file: !263, line: 70, baseType: !797, size: 64, offset: 832)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !781, file: !263, line: 72, baseType: !79, size: 32, offset: 896)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !781, file: !263, line: 73, baseType: !79, size: 32, offset: 928)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !781, file: !263, line: 74, baseType: !285, size: 64, offset: 960)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !781, file: !263, line: 77, baseType: !14, size: 16, offset: 1024)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !781, file: !263, line: 78, baseType: !288, size: 8, offset: 1040)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !781, file: !263, line: 79, baseType: !290, size: 8, offset: 1048)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !781, file: !263, line: 81, baseType: !294, size: 64, offset: 1088)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !781, file: !263, line: 89, baseType: !297, size: 64, offset: 1152)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !781, file: !263, line: 91, baseType: !299, size: 64, offset: 1216)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !781, file: !263, line: 92, baseType: !302, size: 64, offset: 1280)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !781, file: !263, line: 93, baseType: !797, size: 64, offset: 1344)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !781, file: !263, line: 94, baseType: !6, size: 64, offset: 1408)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !781, file: !263, line: 95, baseType: !188, size: 64, offset: 1472)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !781, file: !263, line: 96, baseType: !79, size: 32, offset: 1536)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !781, file: !263, line: 98, baseType: !309, size: 160, offset: 1568)
!813 = !DILocalVariable(name: "line", arg: 1, scope: !776, file: !64, line: 42, type: !49)
!814 = !DILocation(line: 42, column: 24, scope: !776)
!815 = !DILocalVariable(name: "in", arg: 2, scope: !776, file: !64, line: 42, type: !779)
!816 = !DILocation(line: 42, column: 36, scope: !776)
!817 = !DILocalVariable(name: "loop", scope: !776, file: !64, line: 44, type: !56)
!818 = !DILocation(line: 44, column: 15, scope: !776)
!819 = !DILocation(line: 45, column: 8, scope: !776)
!820 = !DILocation(line: 45, column: 19, scope: !776)
!821 = !DILocation(line: 45, column: 2, scope: !776)
!822 = !DILocation(line: 46, column: 10, scope: !823)
!823 = distinct !DILexicalBlock(scope: !776, file: !64, line: 46, column: 2)
!824 = !DILocation(line: 46, column: 6, scope: !823)
!825 = !DILocation(line: 46, column: 14, scope: !826)
!826 = distinct !DILexicalBlock(scope: !823, file: !64, line: 46, column: 2)
!827 = !DILocation(line: 46, column: 18, scope: !826)
!828 = !DILocation(line: 46, column: 23, scope: !826)
!829 = !DILocation(line: 46, column: 26, scope: !826)
!830 = !DILocation(line: 46, column: 31, scope: !826)
!831 = !DILocation(line: 46, column: 36, scope: !826)
!832 = !DILocation(line: 0, scope: !826)
!833 = !DILocation(line: 46, column: 2, scope: !823)
!834 = !DILocation(line: 46, column: 55, scope: !835)
!835 = distinct !DILexicalBlock(scope: !826, file: !64, line: 46, column: 55)
!836 = !DILocation(line: 46, column: 60, scope: !835)
!837 = !DILocation(line: 46, column: 65, scope: !835)
!838 = !DILocation(line: 46, column: 72, scope: !835)
!839 = !DILocation(line: 46, column: 75, scope: !835)
!840 = !DILocation(line: 46, column: 80, scope: !835)
!841 = !DILocation(line: 46, column: 85, scope: !835)
!842 = !DILocation(line: 46, column: 55, scope: !826)
!843 = !DILocation(line: 46, column: 93, scope: !835)
!844 = !DILocation(line: 46, column: 98, scope: !835)
!845 = !DILocation(line: 46, column: 104, scope: !835)
!846 = !DILocation(line: 46, column: 87, scope: !835)
!847 = !DILocation(line: 46, column: 48, scope: !826)
!848 = !DILocation(line: 46, column: 2, scope: !826)
!849 = distinct !{!849, !833, !850, !238}
!850 = !DILocation(line: 46, column: 106, scope: !823)
!851 = !DILocation(line: 47, column: 1, scope: !776)
!852 = distinct !DISubprogram(name: "does_file_exist", scope: !64, file: !64, line: 49, type: !853, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !63, retainedNodes: !4)
!853 = !DISubroutineType(types: !854)
!854 = !{!79, !49}
!855 = !DILocalVariable(name: "filename", arg: 1, scope: !852, file: !64, line: 49, type: !49)
!856 = !DILocation(line: 49, column: 27, scope: !852)
!857 = !DILocalVariable(name: "st", scope: !852, file: !64, line: 51, type: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !859, line: 44, size: 1024, elements: !860)
!859 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/struct_stat.h", directory: "")
!860 = !{!861, !863, !864, !866, !868, !869, !870, !871, !872, !873, !875, !876, !878, !885, !886, !887}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !858, file: !859, line: 46, baseType: !862, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !98, line: 145, baseType: !53)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !858, file: !859, line: 47, baseType: !567, size: 64, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !858, file: !859, line: 48, baseType: !865, size: 32, offset: 128)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !98, line: 150, baseType: !56)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !858, file: !859, line: 49, baseType: !867, size: 32, offset: 160)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !98, line: 151, baseType: !56)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !858, file: !859, line: 50, baseType: !149, size: 32, offset: 192)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !858, file: !859, line: 51, baseType: !151, size: 32, offset: 224)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !858, file: !859, line: 52, baseType: !862, size: 64, offset: 256)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !858, file: !859, line: 53, baseType: !862, size: 64, offset: 320)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !858, file: !859, line: 54, baseType: !285, size: 64, offset: 384)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !858, file: !859, line: 55, baseType: !874, size: 32, offset: 448)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !98, line: 175, baseType: !79)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !858, file: !859, line: 56, baseType: !79, size: 32, offset: 480)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !858, file: !859, line: 57, baseType: !877, size: 64, offset: 512)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !98, line: 180, baseType: !124)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !858, file: !859, line: 65, baseType: !879, size: 128, offset: 576)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !880, line: 11, size: 128, elements: !881)
!880 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!881 = !{!882, !883}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !879, file: !880, line: 16, baseType: !123, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !879, file: !880, line: 21, baseType: !884, size: 64, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !98, line: 197, baseType: !124)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !858, file: !859, line: 66, baseType: !879, size: 128, offset: 704)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !858, file: !859, line: 67, baseType: !879, size: 128, offset: 832)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !858, file: !859, line: 79, baseType: !888, size: 64, offset: 960)
!888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 64, elements: !889)
!889 = !{!24}
!890 = !DILocation(line: 51, column: 14, scope: !852)
!891 = !DILocation(line: 52, column: 10, scope: !892)
!892 = distinct !DILexicalBlock(scope: !852, file: !64, line: 52, column: 5)
!893 = !DILocation(line: 52, column: 5, scope: !892)
!894 = !DILocation(line: 52, column: 25, scope: !892)
!895 = !DILocation(line: 52, column: 40, scope: !892)
!896 = !DILocation(line: 52, column: 28, scope: !892)
!897 = !DILocation(line: 52, column: 5, scope: !852)
!898 = !DILocation(line: 52, column: 51, scope: !892)
!899 = !DILocation(line: 53, column: 2, scope: !852)
!900 = !DILocation(line: 54, column: 1, scope: !852)
!901 = distinct !DISubprogram(name: "isDirectory", scope: !64, file: !64, line: 63, type: !853, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !63, retainedNodes: !4)
!902 = !DILocalVariable(name: "filename", arg: 1, scope: !901, file: !64, line: 63, type: !49)
!903 = !DILocation(line: 63, column: 23, scope: !901)
!904 = !DILocalVariable(name: "st", scope: !901, file: !64, line: 65, type: !858)
!905 = !DILocation(line: 65, column: 14, scope: !901)
!906 = !DILocation(line: 67, column: 10, scope: !907)
!907 = distinct !DILexicalBlock(scope: !901, file: !64, line: 67, column: 5)
!908 = !DILocation(line: 67, column: 5, scope: !907)
!909 = !DILocation(line: 67, column: 5, scope: !901)
!910 = !DILocation(line: 67, column: 26, scope: !907)
!911 = !DILocation(line: 68, column: 6, scope: !912)
!912 = distinct !DILexicalBlock(scope: !901, file: !64, line: 68, column: 5)
!913 = !DILocation(line: 68, column: 5, scope: !901)
!914 = !DILocation(line: 68, column: 27, scope: !912)
!915 = !DILocation(line: 70, column: 2, scope: !901)
!916 = !DILocation(line: 71, column: 1, scope: !901)
!917 = distinct !DISubprogram(name: "get_file_size", scope: !64, file: !64, line: 56, type: !918, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !63, retainedNodes: !4)
!918 = !DISubroutineType(types: !919)
!919 = !{!53, !49}
!920 = !DILocalVariable(name: "filename", arg: 1, scope: !917, file: !64, line: 56, type: !49)
!921 = !DILocation(line: 56, column: 35, scope: !917)
!922 = !DILocalVariable(name: "st", scope: !917, file: !64, line: 58, type: !858)
!923 = !DILocation(line: 58, column: 14, scope: !917)
!924 = !DILocation(line: 59, column: 11, scope: !925)
!925 = distinct !DILexicalBlock(scope: !917, file: !64, line: 59, column: 5)
!926 = !DILocation(line: 59, column: 6, scope: !925)
!927 = !DILocation(line: 59, column: 5, scope: !917)
!928 = !DILocation(line: 59, column: 37, scope: !925)
!929 = !DILocation(line: 59, column: 27, scope: !925)
!930 = !DILocation(line: 60, column: 2, scope: !917)
!931 = !DILocation(line: 61, column: 1, scope: !917)
!932 = distinct !DISubprogram(name: "count_vhosts", scope: !64, file: !64, line: 73, type: !933, scopeLine: 74, spFlags: DISPFlagDefinition, unit: !63, retainedNodes: !4)
!933 = !DISubroutineType(types: !934)
!934 = !{!53}
!935 = !DILocalVariable(name: "in", scope: !932, file: !64, line: 75, type: !779)
!936 = !DILocation(line: 75, column: 8, scope: !932)
!937 = !DILocalVariable(name: "count", scope: !932, file: !64, line: 76, type: !53)
!938 = !DILocation(line: 76, column: 16, scope: !932)
!939 = !DILocalVariable(name: "tempstring", scope: !932, file: !64, line: 77, type: !37)
!940 = !DILocation(line: 77, column: 7, scope: !932)
!941 = !DILocalVariable(name: "ptr1", scope: !932, file: !64, line: 77, type: !49)
!942 = !DILocation(line: 77, column: 25, scope: !932)
!943 = !DILocation(line: 79, column: 11, scope: !944)
!944 = distinct !DILexicalBlock(scope: !932, file: !64, line: 79, column: 5)
!945 = !DILocation(line: 79, column: 9, scope: !944)
!946 = !DILocation(line: 79, column: 44, scope: !944)
!947 = !DILocation(line: 79, column: 5, scope: !932)
!948 = !DILocation(line: 80, column: 3, scope: !944)
!949 = !DILocation(line: 82, column: 2, scope: !932)
!950 = !DILocation(line: 82, column: 14, scope: !932)
!951 = !DILocation(line: 82, column: 9, scope: !932)
!952 = !DILocation(line: 82, column: 8, scope: !932)
!953 = !DILocation(line: 84, column: 3, scope: !954)
!954 = distinct !DILexicalBlock(scope: !932, file: !64, line: 83, column: 2)
!955 = !DILocation(line: 85, column: 15, scope: !954)
!956 = !DILocation(line: 85, column: 27, scope: !954)
!957 = !DILocation(line: 85, column: 3, scope: !954)
!958 = !DILocation(line: 86, column: 11, scope: !959)
!959 = distinct !DILexicalBlock(scope: !954, file: !64, line: 86, column: 6)
!960 = !DILocation(line: 86, column: 6, scope: !959)
!961 = !DILocation(line: 86, column: 6, scope: !954)
!962 = !DILocation(line: 86, column: 16, scope: !959)
!963 = !DILocation(line: 88, column: 17, scope: !954)
!964 = !DILocation(line: 88, column: 10, scope: !954)
!965 = !DILocation(line: 88, column: 8, scope: !954)
!966 = !DILocation(line: 89, column: 6, scope: !967)
!967 = distinct !DILexicalBlock(scope: !954, file: !64, line: 89, column: 6)
!968 = !DILocation(line: 89, column: 11, scope: !967)
!969 = !DILocation(line: 89, column: 24, scope: !967)
!970 = !DILocation(line: 89, column: 15, scope: !967)
!971 = !DILocation(line: 89, column: 6, scope: !954)
!972 = !DILocation(line: 90, column: 9, scope: !967)
!973 = !DILocation(line: 90, column: 4, scope: !967)
!974 = distinct !{!974, !949, !975, !238}
!975 = !DILocation(line: 91, column: 2, scope: !932)
!976 = !DILocation(line: 93, column: 9, scope: !932)
!977 = !DILocation(line: 93, column: 2, scope: !932)
!978 = !DILocation(line: 94, column: 9, scope: !932)
!979 = !DILocation(line: 94, column: 2, scope: !932)
!980 = !DILocation(line: 95, column: 1, scope: !932)
!981 = distinct !DISubprogram(name: "gstricmp", scope: !64, file: !64, line: 196, type: !982, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !63, retainedNodes: !4)
!982 = !DISubroutineType(types: !983)
!983 = !{!79, !49, !49}
!984 = !DILocalVariable(name: "string1", arg: 1, scope: !981, file: !64, line: 196, type: !49)
!985 = !DILocation(line: 196, column: 20, scope: !981)
!986 = !DILocalVariable(name: "string2", arg: 2, scope: !981, file: !64, line: 196, type: !49)
!987 = !DILocation(line: 196, column: 35, scope: !981)
!988 = !DILocalVariable(name: "loop", scope: !981, file: !64, line: 198, type: !79)
!989 = !DILocation(line: 198, column: 6, scope: !981)
!990 = !DILocation(line: 200, column: 6, scope: !991)
!991 = distinct !DILexicalBlock(scope: !981, file: !64, line: 200, column: 5)
!992 = !DILocation(line: 200, column: 14, scope: !991)
!993 = !DILocation(line: 200, column: 18, scope: !991)
!994 = !DILocation(line: 200, column: 5, scope: !981)
!995 = !DILocation(line: 200, column: 27, scope: !991)
!996 = !DILocation(line: 202, column: 2, scope: !981)
!997 = !DILocation(line: 202, column: 9, scope: !981)
!998 = !DILocation(line: 202, column: 8, scope: !981)
!999 = !DILocation(line: 202, column: 17, scope: !981)
!1000 = !DILocation(line: 202, column: 21, scope: !981)
!1001 = !DILocation(line: 202, column: 20, scope: !981)
!1002 = !DILocation(line: 0, scope: !981)
!1003 = !DILocation(line: 203, column: 22, scope: !1004)
!1004 = distinct !DILexicalBlock(scope: !981, file: !64, line: 203, column: 5)
!1005 = !DILocation(line: 203, column: 13, scope: !1004)
!1006 = !DILocation(line: 203, column: 5, scope: !1004)
!1007 = !DILocation(line: 203, column: 47, scope: !1004)
!1008 = !DILocation(line: 203, column: 38, scope: !1004)
!1009 = !DILocation(line: 203, column: 30, scope: !1004)
!1010 = !DILocation(line: 203, column: 27, scope: !1004)
!1011 = !DILocation(line: 203, column: 5, scope: !981)
!1012 = !DILocation(line: 203, column: 53, scope: !1004)
!1013 = distinct !{!1013, !996, !1014, !238}
!1014 = !DILocation(line: 203, column: 60, scope: !981)
!1015 = !DILocation(line: 205, column: 22, scope: !1016)
!1016 = distinct !DILexicalBlock(scope: !981, file: !64, line: 205, column: 5)
!1017 = !DILocation(line: 205, column: 13, scope: !1016)
!1018 = !DILocation(line: 205, column: 5, scope: !1016)
!1019 = !DILocation(line: 205, column: 47, scope: !1016)
!1020 = !DILocation(line: 205, column: 38, scope: !1016)
!1021 = !DILocation(line: 205, column: 30, scope: !1016)
!1022 = !DILocation(line: 205, column: 27, scope: !1016)
!1023 = !DILocation(line: 205, column: 5, scope: !981)
!1024 = !DILocation(line: 205, column: 53, scope: !1016)
!1025 = !DILocation(line: 207, column: 2, scope: !981)
!1026 = !DILocation(line: 208, column: 1, scope: !981)
!1027 = distinct !DISubprogram(name: "VirtualHostDefinition", scope: !64, file: !64, line: 97, type: !1028, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !63, retainedNodes: !4)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{null, !779}
!1030 = !DILocalVariable(name: "in", arg: 1, scope: !1027, file: !64, line: 97, type: !779)
!1031 = !DILocation(line: 97, column: 34, scope: !1027)
!1032 = !DILocalVariable(name: "tempstring", scope: !1027, file: !64, line: 99, type: !37)
!1033 = !DILocation(line: 99, column: 7, scope: !1027)
!1034 = !DILocalVariable(name: "ptr1", scope: !1027, file: !64, line: 99, type: !49)
!1035 = !DILocation(line: 99, column: 25, scope: !1027)
!1036 = !DILocalVariable(name: "ptr2", scope: !1027, file: !64, line: 99, type: !49)
!1037 = !DILocation(line: 99, column: 34, scope: !1027)
!1038 = !DILocalVariable(name: "thevhost", scope: !1027, file: !64, line: 100, type: !1039)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "t_vhost", file: !33, line: 30, baseType: !1041)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !33, line: 23, size: 10200, elements: !1042)
!1042 = !{!1043, !1044, !1045, !1046, !1047}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1041, file: !33, line: 25, baseType: !37, size: 2040)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "DOCUMENTROOT", scope: !1041, file: !33, line: 26, baseType: !37, size: 2040, offset: 2040)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "DEFAULTPAGE", scope: !1041, file: !33, line: 27, baseType: !37, size: 2040, offset: 4080)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "CGIBINDIR", scope: !1041, file: !33, line: 28, baseType: !37, size: 2040, offset: 6120)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "CGIBINROOT", scope: !1041, file: !33, line: 29, baseType: !37, size: 2040, offset: 8160)
!1048 = !DILocation(line: 100, column: 11, scope: !1027)
!1049 = !DILocation(line: 102, column: 14, scope: !1027)
!1050 = !DILocation(line: 102, column: 21, scope: !1027)
!1051 = !DILocation(line: 102, column: 11, scope: !1027)
!1052 = !DILocation(line: 104, column: 9, scope: !1027)
!1053 = !DILocation(line: 104, column: 19, scope: !1027)
!1054 = !DILocation(line: 104, column: 2, scope: !1027)
!1055 = !DILocation(line: 105, column: 9, scope: !1027)
!1056 = !DILocation(line: 105, column: 19, scope: !1027)
!1057 = !DILocation(line: 105, column: 2, scope: !1027)
!1058 = !DILocation(line: 106, column: 9, scope: !1027)
!1059 = !DILocation(line: 106, column: 19, scope: !1027)
!1060 = !DILocation(line: 106, column: 2, scope: !1027)
!1061 = !DILocation(line: 107, column: 9, scope: !1027)
!1062 = !DILocation(line: 107, column: 19, scope: !1027)
!1063 = !DILocation(line: 107, column: 2, scope: !1027)
!1064 = !DILocation(line: 108, column: 9, scope: !1027)
!1065 = !DILocation(line: 108, column: 19, scope: !1027)
!1066 = !DILocation(line: 108, column: 2, scope: !1027)
!1067 = !DILocation(line: 110, column: 2, scope: !1027)
!1068 = !DILocation(line: 110, column: 14, scope: !1027)
!1069 = !DILocation(line: 110, column: 9, scope: !1027)
!1070 = !DILocation(line: 110, column: 8, scope: !1027)
!1071 = !DILocation(line: 112, column: 15, scope: !1072)
!1072 = distinct !DILexicalBlock(scope: !1027, file: !64, line: 111, column: 2)
!1073 = !DILocation(line: 112, column: 27, scope: !1072)
!1074 = !DILocation(line: 112, column: 3, scope: !1072)
!1075 = !DILocation(line: 114, column: 11, scope: !1076)
!1076 = distinct !DILexicalBlock(scope: !1072, file: !64, line: 114, column: 6)
!1077 = !DILocation(line: 114, column: 6, scope: !1076)
!1078 = !DILocation(line: 114, column: 6, scope: !1072)
!1079 = !DILocation(line: 114, column: 16, scope: !1076)
!1080 = !DILocation(line: 115, column: 17, scope: !1072)
!1081 = !DILocation(line: 115, column: 10, scope: !1072)
!1082 = !DILocation(line: 115, column: 8, scope: !1072)
!1083 = !DILocation(line: 116, column: 10, scope: !1072)
!1084 = !DILocation(line: 116, column: 8, scope: !1072)
!1085 = !DILocation(line: 118, column: 7, scope: !1086)
!1086 = distinct !DILexicalBlock(scope: !1072, file: !64, line: 118, column: 6)
!1087 = !DILocation(line: 118, column: 6, scope: !1072)
!1088 = !DILocation(line: 118, column: 13, scope: !1086)
!1089 = distinct !{!1089, !1067, !1090, !238}
!1090 = !DILocation(line: 134, column: 2, scope: !1027)
!1091 = !DILocation(line: 119, column: 6, scope: !1092)
!1092 = distinct !DILexicalBlock(scope: !1072, file: !64, line: 119, column: 6)
!1093 = !DILocation(line: 119, column: 13, scope: !1092)
!1094 = !DILocation(line: 119, column: 19, scope: !1092)
!1095 = !DILocation(line: 119, column: 23, scope: !1092)
!1096 = !DILocation(line: 119, column: 6, scope: !1072)
!1097 = !DILocation(line: 119, column: 29, scope: !1092)
!1098 = !DILocation(line: 120, column: 6, scope: !1099)
!1099 = distinct !DILexicalBlock(scope: !1072, file: !64, line: 120, column: 6)
!1100 = !DILocation(line: 120, column: 14, scope: !1099)
!1101 = !DILocation(line: 120, column: 6, scope: !1072)
!1102 = !DILocation(line: 120, column: 22, scope: !1099)
!1103 = !DILocation(line: 122, column: 16, scope: !1104)
!1104 = distinct !DILexicalBlock(scope: !1072, file: !64, line: 122, column: 6)
!1105 = !DILocation(line: 122, column: 7, scope: !1104)
!1106 = !DILocation(line: 122, column: 6, scope: !1072)
!1107 = !DILocation(line: 123, column: 4, scope: !1104)
!1108 = !DILocation(line: 124, column: 21, scope: !1109)
!1109 = distinct !DILexicalBlock(scope: !1104, file: !64, line: 124, column: 11)
!1110 = !DILocation(line: 124, column: 12, scope: !1109)
!1111 = !DILocation(line: 124, column: 11, scope: !1104)
!1112 = !DILocation(line: 125, column: 11, scope: !1109)
!1113 = !DILocation(line: 125, column: 21, scope: !1109)
!1114 = !DILocation(line: 125, column: 27, scope: !1109)
!1115 = !DILocation(line: 125, column: 4, scope: !1109)
!1116 = !DILocation(line: 126, column: 21, scope: !1117)
!1117 = distinct !DILexicalBlock(scope: !1109, file: !64, line: 126, column: 11)
!1118 = !DILocation(line: 126, column: 12, scope: !1117)
!1119 = !DILocation(line: 126, column: 11, scope: !1109)
!1120 = !DILocation(line: 127, column: 18, scope: !1117)
!1121 = !DILocation(line: 127, column: 28, scope: !1117)
!1122 = !DILocation(line: 127, column: 42, scope: !1117)
!1123 = !DILocation(line: 127, column: 11, scope: !1117)
!1124 = !DILocation(line: 128, column: 21, scope: !1125)
!1125 = distinct !DILexicalBlock(scope: !1117, file: !64, line: 128, column: 11)
!1126 = !DILocation(line: 128, column: 12, scope: !1125)
!1127 = !DILocation(line: 128, column: 11, scope: !1117)
!1128 = !DILocation(line: 129, column: 18, scope: !1125)
!1129 = !DILocation(line: 129, column: 28, scope: !1125)
!1130 = !DILocation(line: 129, column: 41, scope: !1125)
!1131 = !DILocation(line: 129, column: 11, scope: !1125)
!1132 = !DILocation(line: 130, column: 21, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1125, file: !64, line: 130, column: 11)
!1134 = !DILocation(line: 130, column: 12, scope: !1133)
!1135 = !DILocation(line: 130, column: 11, scope: !1125)
!1136 = !DILocation(line: 131, column: 18, scope: !1133)
!1137 = !DILocation(line: 131, column: 28, scope: !1133)
!1138 = !DILocation(line: 131, column: 39, scope: !1133)
!1139 = !DILocation(line: 131, column: 11, scope: !1133)
!1140 = !DILocation(line: 132, column: 21, scope: !1141)
!1141 = distinct !DILexicalBlock(scope: !1133, file: !64, line: 132, column: 11)
!1142 = !DILocation(line: 132, column: 12, scope: !1141)
!1143 = !DILocation(line: 132, column: 11, scope: !1133)
!1144 = !DILocation(line: 133, column: 18, scope: !1141)
!1145 = !DILocation(line: 133, column: 28, scope: !1141)
!1146 = !DILocation(line: 133, column: 40, scope: !1141)
!1147 = !DILocation(line: 133, column: 11, scope: !1141)
!1148 = !DILocation(line: 136, column: 11, scope: !1027)
!1149 = !DILocation(line: 137, column: 1, scope: !1027)
!1150 = distinct !DISubprogram(name: "gstrlwr", scope: !64, file: !64, line: 139, type: !1151, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !63, retainedNodes: !4)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{null, !49}
!1153 = !DILocalVariable(name: "string", arg: 1, scope: !1150, file: !64, line: 139, type: !49)
!1154 = !DILocation(line: 139, column: 20, scope: !1150)
!1155 = !DILocalVariable(name: "loop", scope: !1150, file: !64, line: 141, type: !56)
!1156 = !DILocation(line: 141, column: 15, scope: !1150)
!1157 = !DILocation(line: 143, column: 6, scope: !1158)
!1158 = distinct !DILexicalBlock(scope: !1150, file: !64, line: 143, column: 5)
!1159 = !DILocation(line: 143, column: 5, scope: !1150)
!1160 = !DILocation(line: 143, column: 14, scope: !1158)
!1161 = !DILocation(line: 144, column: 10, scope: !1162)
!1162 = distinct !DILexicalBlock(scope: !1150, file: !64, line: 144, column: 2)
!1163 = !DILocation(line: 144, column: 6, scope: !1162)
!1164 = !DILocation(line: 144, column: 14, scope: !1165)
!1165 = distinct !DILexicalBlock(scope: !1162, file: !64, line: 144, column: 2)
!1166 = !DILocation(line: 144, column: 18, scope: !1165)
!1167 = !DILocation(line: 144, column: 23, scope: !1165)
!1168 = !DILocation(line: 144, column: 26, scope: !1165)
!1169 = !DILocation(line: 144, column: 33, scope: !1165)
!1170 = !DILocation(line: 0, scope: !1165)
!1171 = !DILocation(line: 144, column: 2, scope: !1162)
!1172 = !DILocation(line: 145, column: 26, scope: !1165)
!1173 = !DILocation(line: 145, column: 33, scope: !1165)
!1174 = !DILocation(line: 145, column: 18, scope: !1165)
!1175 = !DILocation(line: 145, column: 3, scope: !1165)
!1176 = !DILocation(line: 145, column: 10, scope: !1165)
!1177 = !DILocation(line: 145, column: 16, scope: !1165)
!1178 = !DILocation(line: 144, column: 44, scope: !1165)
!1179 = !DILocation(line: 144, column: 2, scope: !1165)
!1180 = distinct !{!1180, !1171, !1181, !238}
!1181 = !DILocation(line: 145, column: 38, scope: !1162)
!1182 = !DILocation(line: 146, column: 1, scope: !1150)
!1183 = distinct !DISubprogram(name: "readinconfig", scope: !64, file: !64, line: 148, type: !1184, scopeLine: 149, spFlags: DISPFlagDefinition, unit: !63, retainedNodes: !4)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{null}
!1186 = !DILocalVariable(name: "in", scope: !1183, file: !64, line: 150, type: !779)
!1187 = !DILocation(line: 150, column: 8, scope: !1183)
!1188 = !DILocalVariable(name: "ptr1", scope: !1183, file: !64, line: 151, type: !49)
!1189 = !DILocation(line: 151, column: 8, scope: !1183)
!1190 = !DILocalVariable(name: "ptr2", scope: !1183, file: !64, line: 151, type: !49)
!1191 = !DILocation(line: 151, column: 17, scope: !1183)
!1192 = !DILocalVariable(name: "tempstring", scope: !1183, file: !64, line: 152, type: !37)
!1193 = !DILocation(line: 152, column: 7, scope: !1183)
!1194 = !DILocalVariable(name: "loop", scope: !1183, file: !64, line: 153, type: !79)
!1195 = !DILocation(line: 153, column: 6, scope: !1183)
!1196 = !DILocation(line: 156, column: 11, scope: !1197)
!1197 = distinct !DILexicalBlock(scope: !1183, file: !64, line: 156, column: 5)
!1198 = !DILocation(line: 156, column: 9, scope: !1197)
!1199 = !DILocation(line: 156, column: 43, scope: !1197)
!1200 = !DILocation(line: 156, column: 5, scope: !1183)
!1201 = !DILocation(line: 157, column: 3, scope: !1197)
!1202 = !DILocation(line: 159, column: 11, scope: !1183)
!1203 = !DILocation(line: 161, column: 2, scope: !1183)
!1204 = !DILocation(line: 161, column: 14, scope: !1183)
!1205 = !DILocation(line: 161, column: 9, scope: !1183)
!1206 = !DILocation(line: 161, column: 8, scope: !1183)
!1207 = !DILocation(line: 163, column: 15, scope: !1208)
!1208 = distinct !DILexicalBlock(scope: !1183, file: !64, line: 162, column: 2)
!1209 = !DILocation(line: 163, column: 27, scope: !1208)
!1210 = !DILocation(line: 163, column: 3, scope: !1208)
!1211 = !DILocation(line: 165, column: 11, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1208, file: !64, line: 165, column: 6)
!1213 = !DILocation(line: 165, column: 6, scope: !1212)
!1214 = !DILocation(line: 165, column: 6, scope: !1208)
!1215 = !DILocation(line: 165, column: 16, scope: !1212)
!1216 = !DILocation(line: 166, column: 17, scope: !1208)
!1217 = !DILocation(line: 166, column: 10, scope: !1208)
!1218 = !DILocation(line: 166, column: 8, scope: !1208)
!1219 = !DILocation(line: 167, column: 10, scope: !1208)
!1220 = !DILocation(line: 167, column: 8, scope: !1208)
!1221 = !DILocation(line: 169, column: 7, scope: !1222)
!1222 = distinct !DILexicalBlock(scope: !1208, file: !64, line: 169, column: 6)
!1223 = !DILocation(line: 169, column: 6, scope: !1208)
!1224 = !DILocation(line: 169, column: 13, scope: !1222)
!1225 = distinct !{!1225, !1203, !1226, !238}
!1226 = !DILocation(line: 191, column: 2, scope: !1183)
!1227 = !DILocation(line: 170, column: 6, scope: !1228)
!1228 = distinct !DILexicalBlock(scope: !1208, file: !64, line: 170, column: 6)
!1229 = !DILocation(line: 170, column: 13, scope: !1228)
!1230 = !DILocation(line: 170, column: 19, scope: !1228)
!1231 = !DILocation(line: 170, column: 23, scope: !1228)
!1232 = !DILocation(line: 170, column: 6, scope: !1208)
!1233 = !DILocation(line: 170, column: 29, scope: !1228)
!1234 = !DILocation(line: 171, column: 6, scope: !1235)
!1235 = distinct !DILexicalBlock(scope: !1208, file: !64, line: 171, column: 6)
!1236 = !DILocation(line: 171, column: 14, scope: !1235)
!1237 = !DILocation(line: 171, column: 6, scope: !1208)
!1238 = !DILocation(line: 171, column: 22, scope: !1235)
!1239 = !DILocation(line: 173, column: 16, scope: !1240)
!1240 = distinct !DILexicalBlock(scope: !1208, file: !64, line: 173, column: 6)
!1241 = !DILocation(line: 173, column: 7, scope: !1240)
!1242 = !DILocation(line: 173, column: 6, scope: !1208)
!1243 = !DILocation(line: 174, column: 23, scope: !1240)
!1244 = !DILocation(line: 174, column: 4, scope: !1240)
!1245 = !DILocation(line: 175, column: 21, scope: !1246)
!1246 = distinct !DILexicalBlock(scope: !1240, file: !64, line: 175, column: 11)
!1247 = !DILocation(line: 175, column: 12, scope: !1246)
!1248 = !DILocation(line: 175, column: 11, scope: !1240)
!1249 = !DILocation(line: 176, column: 37, scope: !1246)
!1250 = !DILocation(line: 176, column: 4, scope: !1246)
!1251 = !DILocation(line: 177, column: 21, scope: !1252)
!1252 = distinct !DILexicalBlock(scope: !1246, file: !64, line: 177, column: 11)
!1253 = !DILocation(line: 177, column: 12, scope: !1252)
!1254 = !DILocation(line: 177, column: 11, scope: !1246)
!1255 = !DILocation(line: 178, column: 36, scope: !1252)
!1256 = !DILocation(line: 178, column: 4, scope: !1252)
!1257 = !DILocation(line: 179, column: 21, scope: !1258)
!1258 = distinct !DILexicalBlock(scope: !1252, file: !64, line: 179, column: 11)
!1259 = !DILocation(line: 179, column: 12, scope: !1258)
!1260 = !DILocation(line: 179, column: 11, scope: !1252)
!1261 = !DILocation(line: 180, column: 34, scope: !1258)
!1262 = !DILocation(line: 180, column: 4, scope: !1258)
!1263 = !DILocation(line: 181, column: 21, scope: !1264)
!1264 = distinct !DILexicalBlock(scope: !1258, file: !64, line: 181, column: 11)
!1265 = !DILocation(line: 181, column: 12, scope: !1264)
!1266 = !DILocation(line: 181, column: 11, scope: !1258)
!1267 = !DILocation(line: 182, column: 35, scope: !1264)
!1268 = !DILocation(line: 182, column: 4, scope: !1264)
!1269 = !DILocation(line: 183, column: 21, scope: !1270)
!1270 = distinct !DILexicalBlock(scope: !1264, file: !64, line: 183, column: 11)
!1271 = !DILocation(line: 183, column: 12, scope: !1270)
!1272 = !DILocation(line: 183, column: 11, scope: !1264)
!1273 = !DILocation(line: 184, column: 22, scope: !1270)
!1274 = !DILocation(line: 184, column: 17, scope: !1270)
!1275 = !DILocation(line: 184, column: 15, scope: !1270)
!1276 = !DILocation(line: 184, column: 4, scope: !1270)
!1277 = !DILocation(line: 185, column: 21, scope: !1278)
!1278 = distinct !DILexicalBlock(scope: !1270, file: !64, line: 185, column: 11)
!1279 = !DILocation(line: 185, column: 12, scope: !1278)
!1280 = !DILocation(line: 185, column: 11, scope: !1270)
!1281 = !DILocation(line: 186, column: 23, scope: !1278)
!1282 = !DILocation(line: 186, column: 4, scope: !1278)
!1283 = !DILocation(line: 187, column: 21, scope: !1284)
!1284 = distinct !DILexicalBlock(scope: !1278, file: !64, line: 187, column: 11)
!1285 = !DILocation(line: 187, column: 12, scope: !1284)
!1286 = !DILocation(line: 187, column: 11, scope: !1278)
!1287 = !DILocation(line: 188, column: 26, scope: !1284)
!1288 = !DILocation(line: 188, column: 4, scope: !1284)
!1289 = !DILocation(line: 190, column: 64, scope: !1284)
!1290 = !DILocation(line: 190, column: 4, scope: !1284)
!1291 = !DILocation(line: 193, column: 9, scope: !1183)
!1292 = !DILocation(line: 193, column: 2, scope: !1183)
!1293 = !DILocation(line: 194, column: 1, scope: !1183)
!1294 = distinct !DISubprogram(name: "Log", scope: !64, file: !64, line: 210, type: !1295, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !63, retainedNodes: !4)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{null, !49, null}
!1297 = !DILocalVariable(name: "format", arg: 1, scope: !1294, file: !64, line: 210, type: !49)
!1298 = !DILocation(line: 210, column: 16, scope: !1294)
!1299 = !DILocalVariable(name: "logfile", scope: !1294, file: !64, line: 212, type: !779)
!1300 = !DILocation(line: 212, column: 8, scope: !1294)
!1301 = !DILocalVariable(name: "t", scope: !1294, file: !64, line: 213, type: !1302)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1303, line: 10, baseType: !123)
!1303 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/types/time_t.h", directory: "")
!1304 = !DILocation(line: 213, column: 9, scope: !1294)
!1305 = !DILocalVariable(name: "tm", scope: !1294, file: !64, line: 214, type: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm", scope: !1294, file: !64, line: 214, flags: DIFlagFwdDecl)
!1308 = !DILocation(line: 214, column: 13, scope: !1294)
!1309 = !DILocalVariable(name: "temp", scope: !1294, file: !64, line: 215, type: !1310)
!1310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 1600, elements: !1311)
!1311 = !{!1312}
!1312 = !DISubrange(count: 200)
!1313 = !DILocation(line: 215, column: 7, scope: !1294)
!1314 = !DILocalVariable(name: "temp2", scope: !1294, file: !64, line: 215, type: !1310)
!1315 = !DILocation(line: 215, column: 18, scope: !1294)
!1316 = !DILocalVariable(name: "logfilename", scope: !1294, file: !64, line: 215, type: !37)
!1317 = !DILocation(line: 215, column: 30, scope: !1294)
!1318 = !DILocalVariable(name: "datetime", scope: !1294, file: !64, line: 216, type: !1319)
!1319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 176, elements: !1320)
!1320 = !{!1321}
!1321 = !DISubrange(count: 22)
!1322 = !DILocation(line: 216, column: 7, scope: !1294)
!1323 = !DILocalVariable(name: "datetime_final", scope: !1294, file: !64, line: 217, type: !1324)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 1024, elements: !1325)
!1325 = !{!1326}
!1326 = !DISubrange(count: 128)
!1327 = !DILocation(line: 217, column: 7, scope: !1294)
!1328 = !DILocalVariable(name: "ap", scope: !1294, file: !64, line: 218, type: !1329)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1330, line: 52, baseType: !1331)
!1330 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1332, line: 32, baseType: !1333)
!1332 = !DIFile(filename: "/usr/lib/llvm-13/lib/clang/13.0.1/include/stdarg.h", directory: "")
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !64, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", scope: !1335, size: 256, elements: !1336)
!1335 = !DINamespace(name: "std", scope: null)
!1336 = !{!1337, !1338, !1339, !1340, !1341}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "__stack", scope: !1334, file: !64, line: 218, baseType: !6, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "__gr_top", scope: !1334, file: !64, line: 218, baseType: !6, size: 64, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "__vr_top", scope: !1334, file: !64, line: 218, baseType: !6, size: 64, offset: 128)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "__gr_offs", scope: !1334, file: !64, line: 218, baseType: !79, size: 32, offset: 192)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "__vr_offs", scope: !1334, file: !64, line: 218, baseType: !79, size: 32, offset: 224)
!1342 = !DILocation(line: 218, column: 10, scope: !1294)
!1343 = !DILocation(line: 220, column: 24, scope: !1294)
!1344 = !DILocation(line: 220, column: 5, scope: !1294)
!1345 = !DILocation(line: 221, column: 24, scope: !1294)
!1346 = !DILocation(line: 221, column: 5, scope: !1294)
!1347 = !DILocation(line: 222, column: 24, scope: !1294)
!1348 = !DILocation(line: 222, column: 5, scope: !1294)
!1349 = !DILocation(line: 223, column: 24, scope: !1294)
!1350 = !DILocation(line: 223, column: 5, scope: !1294)
!1351 = !DILocation(line: 224, column: 24, scope: !1294)
!1352 = !DILocation(line: 224, column: 5, scope: !1294)
!1353 = !DILocation(line: 225, column: 24, scope: !1294)
!1354 = !DILocation(line: 225, column: 5, scope: !1294)
!1355 = !DILocation(line: 227, column: 2, scope: !1294)
!1356 = !DILocation(line: 229, column: 2, scope: !1294)
!1357 = !DILocation(line: 231, column: 2, scope: !1294)
!1358 = !DILocation(line: 232, column: 7, scope: !1294)
!1359 = !DILocation(line: 232, column: 5, scope: !1294)
!1360 = !DILocation(line: 233, column: 2, scope: !1294)
!1361 = !DILocation(line: 237, column: 10, scope: !1294)
!1362 = !DILocation(line: 237, column: 30, scope: !1294)
!1363 = !DILocation(line: 237, column: 46, scope: !1294)
!1364 = !DILocation(line: 237, column: 2, scope: !1294)
!1365 = !DILocation(line: 238, column: 10, scope: !1294)
!1366 = !DILocation(line: 238, column: 2, scope: !1294)
!1367 = !DILocation(line: 240, column: 22, scope: !1368)
!1368 = distinct !DILexicalBlock(scope: !1294, file: !64, line: 240, column: 5)
!1369 = !DILocation(line: 240, column: 16, scope: !1368)
!1370 = !DILocation(line: 240, column: 14, scope: !1368)
!1371 = !DILocation(line: 240, column: 41, scope: !1368)
!1372 = !DILocation(line: 240, column: 5, scope: !1294)
!1373 = !DILocation(line: 241, column: 3, scope: !1368)
!1374 = !DILocation(line: 243, column: 8, scope: !1294)
!1375 = !DILocation(line: 243, column: 15, scope: !1294)
!1376 = !DILocation(line: 243, column: 2, scope: !1294)
!1377 = !DILocation(line: 245, column: 9, scope: !1294)
!1378 = !DILocation(line: 245, column: 2, scope: !1294)
!1379 = !DILocation(line: 246, column: 1, scope: !1294)
