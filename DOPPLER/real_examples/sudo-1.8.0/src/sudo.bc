; ModuleID = 'sudo.c'
source_filename = "sudo.c"
target datalayout = "e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128"
target triple = "aarch64-unknown-linux-gnu"

%struct.user_details = type { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i32*, i32, i32, i32 }
%struct.plugin_container = type { %struct.plugin_container*, %struct.plugin_container*, i8*, i8*, %union.anon }
%union.anon = type { %struct.generic_plugin* }
%struct.generic_plugin = type { i32, i32 }
%struct.plugin_container_list = type { %struct.plugin_container*, %struct.plugin_container* }
%struct.rlimit = type { i64, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.command_details = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.__sigset_t = type { [16 x i64] }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.policy_plugin = type { i32, i32, i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i8**)*, void (i32, i32)*, i32 (i32)*, i32 (i32, i8**, i8**, i8***, i8***, i8***)*, i32 (i32, i8**, i32, i8*)*, i32 ()*, void (i32)*, i32 (%struct.passwd*)* }
%struct.sudo_conv_message = type { i32, i32, i8* }
%struct.sudo_conv_reply = type { i8* }
%"struct.std::__va_list" = type { i8*, i8*, i8*, i32, i32 }
%struct.io_plugin_1_0 = type { i32, i32, i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i32, i8**, i8**)*, void (i32, i32)*, i32 (i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)* }
%struct.io_plugin = type { i32, i32, i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i8**, i32, i8**, i8**)*, void (i32, i32)*, i32 (i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)* }
%struct.command_status = type { i32, i32 }

@.str = private unnamed_addr constant [6 x i8] c"nargc\00", align 1
@user_details = dso_local global %struct.user_details zeroinitializer, align 8, !dbg !0
@.str.1 = private unnamed_addr constant [3 x i8] c"b1\00", align 1
@policy_plugin = dso_local global %struct.plugin_container zeroinitializer, align 8, !dbg !63
@.str.2 = private unnamed_addr constant [35 x i8] c"unable to initialize policy plugin\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"sudo_mode %d\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"Sudo version %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"1.9.16\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"Configure args: %s\0A\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"@CONFIGURE_ARGS@\00", align 1
@io_plugins = dso_local global %struct.plugin_container_list zeroinitializer, align 8, !dbg !196
@list_user = dso_local global i8* null, align 8, !dbg !202
@.str.8 = private unnamed_addr constant [25 x i8] c"policy plugin returns %d\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"error initializing I/O plugin %s\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"unexpected sudo mode 0x%x\00", align 1
@.str.12 = private unnamed_addr constant [35 x i8] c"unable to set egid to runas gid %u\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"unable to set gid to runas gid %u\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"unable to set supplementary group IDs\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"unable to set process priority\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"unable to change root to %s\00", align 1
@.str.18 = private unnamed_addr constant [39 x i8] c"unable to change to runas uid (%u, %u)\00", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"unable to change directory to %s\00", align 1
@nproclimit = internal global %struct.rlimit zeroinitializer, align 8, !dbg !210
@.str.20 = private unnamed_addr constant [32 x i8] c"calling policy close with errno\00", align 1
@.str.21 = private unnamed_addr constant [29 x i8] c"calling I/O close with errno\00", align 1
@.str.22 = private unnamed_addr constant [38 x i8] c"calling policy close with wait status\00", align 1
@.str.23 = private unnamed_addr constant [35 x i8] c"calling I/O close with wait status\00", align 1
@.str.24 = private unnamed_addr constant [43 x i8] c"unexpected child termination condition: %d\00", align 1
@debug_level = dso_local global i32 0, align 4, !dbg !208
@.str.25 = private unnamed_addr constant [8 x i8] c"%s: %s\0A\00", align 1
@__progname = external dso_local global i8*, align 8
@stderr = external dso_local global %struct._IO_FILE*, align 8
@runas_user = dso_local global i8* null, align 8, !dbg !204
@runas_group = dso_local global i8* null, align 8, !dbg !206
@.str.26 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"unable to open %s\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"dup2\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"user_info\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"cp\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"pw\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"cwd\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"host\00", align 1
@.str.34 = private unnamed_addr constant [29 x i8] c"unknown uid %u: who are you?\00", align 1
@.str.35 = private unnamed_addr constant [26 x i8] c"unable to allocate memory\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"SHELL\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"uid=%u\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"euid=%u\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"gid=%u\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"egid=%u\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"tty\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"lines=%d\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"cols=%d\00", align 1
@.str.46 = private unnamed_addr constant [23 x i8] c"can't get group vector\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"groups=\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"%s%u\00", align 1
@.str.49 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.50 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.51 = private unnamed_addr constant [17 x i8] c"command info: %s\00", align 1
@.str.52 = private unnamed_addr constant [8 x i8] c"chroot=\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"command=\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c"cwd=\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"closefrom=\00", align 1
@.str.56 = private unnamed_addr constant [13 x i8] c"login_class=\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"nice=\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"noexec=\00", align 1
@.str.59 = private unnamed_addr constant [17 x i8] c"preserve_groups=\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c"runas_egid=\00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c"runas_euid=\00", align 1
@.str.62 = private unnamed_addr constant [11 x i8] c"runas_gid=\00", align 1
@.str.63 = private unnamed_addr constant [14 x i8] c"runas_groups=\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c"runas_uid=\00", align 1
@.str.65 = private unnamed_addr constant [14 x i8] c"selinux_role=\00", align 1
@.str.66 = private unnamed_addr constant [14 x i8] c"selinux_type=\00", align 1
@.str.67 = private unnamed_addr constant [10 x i8] c"sudoedit=\00", align 1
@.str.68 = private unnamed_addr constant [9 x i8] c"timeout=\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"umask=\00", align 1
@.str.70 = private unnamed_addr constant [9 x i8] c"use_pty=\00", align 1
@corelimit = internal global %struct.rlimit zeroinitializer, align 8, !dbg !217
@.str.71 = private unnamed_addr constant [53 x i8] c"policy plugin %s does not support listing privileges\00", align 1
@.str.72 = private unnamed_addr constant [46 x i8] c"policy plugin %s does not support the -v flag\00", align 1
@.str.73 = private unnamed_addr constant [50 x i8] c"policy plugin %s does not support the -k/-K flags\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32 %argc, i8** %argv, i8** %envp) #0 !dbg !246 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %envp.addr = alloca i8**, align 8
  %nargc = alloca i32, align 4
  %sudo_mode = alloca i32, align 4
  %exitcode = alloca i32, align 4
  %nargv = alloca i8**, align 8
  %settings = alloca i8**, align 8
  %env_add = alloca i8**, align 8
  %user_info = alloca i8**, align 8
  %command_info = alloca i8**, align 8
  %argv_out = alloca i8**, align 8
  %user_env_out = alloca i8**, align 8
  %plugin = alloca %struct.plugin_container*, align 8
  %next = alloca %struct.plugin_container*, align 8
  %command_details = alloca %struct.command_details, align 8
  %mask = alloca %struct.__sigset_t, align 8
  %ok = alloca i32, align 4
  %b1 = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !250, metadata !DIExpression()), !dbg !251
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !252, metadata !DIExpression()), !dbg !253
  store i8** %envp, i8*** %envp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %envp.addr, metadata !254, metadata !DIExpression()), !dbg !255
  call void @llvm.dbg.declare(metadata i32* %nargc, metadata !256, metadata !DIExpression()), !dbg !257
  call void @llvm.dbg.declare(metadata i32* %sudo_mode, metadata !258, metadata !DIExpression()), !dbg !259
  call void @llvm.dbg.declare(metadata i32* %exitcode, metadata !260, metadata !DIExpression()), !dbg !261
  store i32 0, i32* %exitcode, align 4, !dbg !261
  call void @llvm.dbg.declare(metadata i8*** %nargv, metadata !262, metadata !DIExpression()), !dbg !263
  call void @llvm.dbg.declare(metadata i8*** %settings, metadata !264, metadata !DIExpression()), !dbg !265
  call void @llvm.dbg.declare(metadata i8*** %env_add, metadata !266, metadata !DIExpression()), !dbg !267
  call void @llvm.dbg.declare(metadata i8*** %user_info, metadata !268, metadata !DIExpression()), !dbg !269
  call void @llvm.dbg.declare(metadata i8*** %command_info, metadata !270, metadata !DIExpression()), !dbg !271
  call void @llvm.dbg.declare(metadata i8*** %argv_out, metadata !272, metadata !DIExpression()), !dbg !273
  call void @llvm.dbg.declare(metadata i8*** %user_env_out, metadata !274, metadata !DIExpression()), !dbg !275
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin, metadata !276, metadata !DIExpression()), !dbg !277
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %next, metadata !278, metadata !DIExpression()), !dbg !279
  call void @llvm.dbg.declare(metadata %struct.command_details* %command_details, metadata !280, metadata !DIExpression()), !dbg !302
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %mask, metadata !303, metadata !DIExpression()), !dbg !314
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !315, metadata !DIExpression()), !dbg !316
  %0 = bitcast i32* %nargc to i8*, !dbg !317
  call void @klee_make_symbolic(i8* %0, i64 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)), !dbg !318
  %call = call i32 @sigemptyset(%struct.__sigset_t* %mask) #11, !dbg !319
  %call1 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %mask, %struct.__sigset_t* null) #11, !dbg !320
  call void @disable_coredumps(), !dbg !321
  call void @fix_fds(), !dbg !322
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.user_details* @user_details to i8*), i8 0, i64 80, i1 false), !dbg !323
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !324, metadata !DIExpression()), !dbg !325
  %1 = bitcast i32* %b1 to i8*, !dbg !326
  call void @klee_make_symbolic(i8* %1, i64 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)), !dbg !327
  %2 = load i32, i32* %b1, align 4, !dbg !328
  %cmp = icmp sgt i32 %2, 0, !dbg !330
  br i1 %cmp, label %if.then, label %if.end, !dbg !331

if.then:                                          ; preds = %entry
  %call2 = call i8** @get_user_info(%struct.user_details* @user_details), !dbg !332
  store i8** %call2, i8*** %user_info, align 8, !dbg !334
  br label %if.end, !dbg !335

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %argc.addr, align 4, !dbg !336
  %4 = load i8**, i8*** %argv.addr, align 8, !dbg !337
  %call3 = call i32 @parse_args(i32 %3, i8** %4, i32* %nargc, i8*** %nargv, i8*** %settings, i8*** %env_add), !dbg !338
  store i32 %call3, i32* %sudo_mode, align 4, !dbg !339
  %5 = load i8**, i8*** %settings, align 8, !dbg !340
  %6 = load i8**, i8*** %user_info, align 8, !dbg !341
  %7 = load i8**, i8*** %envp.addr, align 8, !dbg !342
  %call4 = call i32 @policy_open(%struct.plugin_container* @policy_plugin, i8** %5, i8** %6, i8** %7), !dbg !343
  store i32 %call4, i32* %ok, align 4, !dbg !344
  %8 = load i32, i32* %ok, align 4, !dbg !345
  %cmp5 = icmp ne i32 %8, 1, !dbg !347
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !348

if.then6:                                         ; preds = %if.end
  %9 = load i32, i32* %ok, align 4, !dbg !349
  %cmp7 = icmp eq i32 %9, -2, !dbg !352
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !353

if.then8:                                         ; preds = %if.then6
  call void @usage(i32 1), !dbg !354
  br label %if.end9, !dbg !354

if.else:                                          ; preds = %if.then6
  call void (i32, i8*, ...) @errorx(i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !355
  unreachable, !dbg !355

if.end9:                                          ; preds = %if.then8
  br label %if.end10, !dbg !356

if.end10:                                         ; preds = %if.end9, %if.end
  %10 = load i32, i32* %sudo_mode, align 4, !dbg !357
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i32 %10), !dbg !358
  %11 = load i32, i32* %sudo_mode, align 4, !dbg !359
  %and = and i32 %11, 65535, !dbg !360
  switch i32 %and, label %sw.default95 [
    i32 32, label %sw.bb
    i32 4, label %sw.bb27
    i32 12, label %sw.bb27
    i32 16, label %sw.bb30
    i32 8, label %sw.bb30
    i32 256, label %sw.bb33
    i32 264, label %sw.bb33
    i32 128, label %sw.bb33
    i32 136, label %sw.bb33
    i32 2, label %sw.bb38
    i32 1, label %sw.bb38
  ], !dbg !361

sw.bb:                                            ; preds = %if.end10
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)), !dbg !362
  %12 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !364
  %cmp12 = icmp eq i32 %12, 0, !dbg !366
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !367

if.then13:                                        ; preds = %sw.bb
  %call14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !368
  br label %if.end15, !dbg !369

if.end15:                                         ; preds = %if.then13, %sw.bb
  %13 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !370
  %tobool = icmp ne i32 %13, 0, !dbg !371
  %lnot = xor i1 %tobool, true, !dbg !371
  %lnot.ext = zext i1 %lnot to i32, !dbg !371
  %call16 = call i32 @policy_show_version(%struct.plugin_container* @policy_plugin, i32 %lnot.ext), !dbg !372
  %14 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !373
  store %struct.plugin_container* %14, %struct.plugin_container** %plugin, align 8, !dbg !373
  br label %for.cond, !dbg !373

for.cond:                                         ; preds = %for.inc, %if.end15
  %15 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !375
  %cmp17 = icmp ne %struct.plugin_container* %15, null, !dbg !375
  br i1 %cmp17, label %for.body, label %for.end, !dbg !373

for.body:                                         ; preds = %for.cond
  %16 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !377
  %17 = load i8**, i8*** %settings, align 8, !dbg !379
  %18 = load i8**, i8*** %user_info, align 8, !dbg !380
  %19 = load i32, i32* %nargc, align 4, !dbg !381
  %20 = load i8**, i8*** %nargv, align 8, !dbg !382
  %21 = load i8**, i8*** %envp.addr, align 8, !dbg !383
  %call18 = call i32 @iolog_open(%struct.plugin_container* %16, i8** %17, i8** %18, i8** null, i32 %19, i8** %20, i8** %21), !dbg !384
  store i32 %call18, i32* %ok, align 4, !dbg !385
  %22 = load i32, i32* %ok, align 4, !dbg !386
  %cmp19 = icmp eq i32 %22, 1, !dbg !388
  br i1 %cmp19, label %if.then20, label %if.end25, !dbg !389

if.then20:                                        ; preds = %for.body
  %23 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !390
  %24 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !391
  %tobool21 = icmp ne i32 %24, 0, !dbg !392
  %lnot22 = xor i1 %tobool21, true, !dbg !392
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !392
  %call24 = call i32 @iolog_show_version(%struct.plugin_container* %23, i32 %lnot.ext23), !dbg !393
  br label %if.end25, !dbg !393

if.end25:                                         ; preds = %if.then20, %for.body
  br label %for.inc, !dbg !394

for.inc:                                          ; preds = %if.end25
  %25 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !375
  %next26 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %25, i32 0, i32 1, !dbg !375
  %26 = load %struct.plugin_container*, %struct.plugin_container** %next26, align 8, !dbg !375
  store %struct.plugin_container* %26, %struct.plugin_container** %plugin, align 8, !dbg !375
  br label %for.cond, !dbg !375, !llvm.loop !395

for.end:                                          ; preds = %for.cond
  br label %sw.epilog96, !dbg !398

sw.bb27:                                          ; preds = %if.end10, %if.end10
  %call28 = call i32 @policy_validate(%struct.plugin_container* @policy_plugin), !dbg !399
  store i32 %call28, i32* %ok, align 4, !dbg !400
  %27 = load i32, i32* %ok, align 4, !dbg !401
  %cmp29 = icmp ne i32 %27, 1, !dbg !402
  %conv = zext i1 %cmp29 to i32, !dbg !402
  call void @exit(i32 %conv) #13, !dbg !403
  unreachable, !dbg !403

sw.bb30:                                          ; preds = %if.end10, %if.end10
  %28 = load i32, i32* %sudo_mode, align 4, !dbg !404
  %cmp31 = icmp eq i32 %28, 16, !dbg !405
  %conv32 = zext i1 %cmp31 to i32, !dbg !405
  call void @policy_invalidate(%struct.plugin_container* @policy_plugin, i32 %conv32), !dbg !406
  call void @exit(i32 0) #13, !dbg !407
  unreachable, !dbg !407

sw.bb33:                                          ; preds = %if.end10, %if.end10, %if.end10, %if.end10
  %29 = load i32, i32* %nargc, align 4, !dbg !408
  %30 = load i8**, i8*** %nargv, align 8, !dbg !409
  %31 = load i32, i32* %sudo_mode, align 4, !dbg !410
  %call34 = call i32 bitcast (i32 (...)* @ISSET to i32 (i32, i32)*)(i32 %31, i32 16777216), !dbg !411
  %32 = load i8*, i8** @list_user, align 8, !dbg !412
  %call35 = call i32 @policy_list(%struct.plugin_container* @policy_plugin, i32 %29, i8** %30, i32 %call34, i8* %32), !dbg !413
  store i32 %call35, i32* %ok, align 4, !dbg !414
  %33 = load i32, i32* %ok, align 4, !dbg !415
  %cmp36 = icmp ne i32 %33, 1, !dbg !416
  %conv37 = zext i1 %cmp36 to i32, !dbg !416
  call void @exit(i32 %conv37) #13, !dbg !417
  unreachable, !dbg !417

sw.bb38:                                          ; preds = %if.end10, %if.end10
  %34 = load i32, i32* %nargc, align 4, !dbg !418
  %35 = load i8**, i8*** %nargv, align 8, !dbg !419
  %36 = load i8**, i8*** %env_add, align 8, !dbg !420
  %call39 = call i32 @policy_check(%struct.plugin_container* @policy_plugin, i32 %34, i8** %35, i8** %36, i8*** %command_info, i8*** %argv_out, i8*** %user_env_out), !dbg !421
  store i32 %call39, i32* %ok, align 4, !dbg !422
  %37 = load i32, i32* %ok, align 4, !dbg !423
  call void (i32, i8*, ...) @sudo_debug(i32 8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i32 %37), !dbg !424
  %38 = load i32, i32* %ok, align 4, !dbg !425
  %cmp40 = icmp ne i32 %38, 1, !dbg !427
  br i1 %cmp40, label %if.then42, label %if.end47, !dbg !428

if.then42:                                        ; preds = %sw.bb38
  %39 = load i32, i32* %ok, align 4, !dbg !429
  %cmp43 = icmp eq i32 %39, -2, !dbg !432
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !433

if.then45:                                        ; preds = %if.then42
  call void @usage(i32 1), !dbg !434
  br label %if.end46, !dbg !434

if.end46:                                         ; preds = %if.then45, %if.then42
  call void @exit(i32 1) #13, !dbg !435
  unreachable, !dbg !435

if.end47:                                         ; preds = %sw.bb38
  %40 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !436
  store %struct.plugin_container* %40, %struct.plugin_container** %plugin, align 8, !dbg !438
  br label %for.cond48, !dbg !439

for.cond48:                                       ; preds = %for.inc57, %if.end47
  %41 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !440
  %cmp49 = icmp ne %struct.plugin_container* %41, null, !dbg !442
  br i1 %cmp49, label %for.body51, label %for.end58, !dbg !443

for.body51:                                       ; preds = %for.cond48
  %42 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !444
  %next52 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %42, i32 0, i32 1, !dbg !446
  %43 = load %struct.plugin_container*, %struct.plugin_container** %next52, align 8, !dbg !446
  store %struct.plugin_container* %43, %struct.plugin_container** %next, align 8, !dbg !447
  %44 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !448
  %45 = load i8**, i8*** %settings, align 8, !dbg !449
  %46 = load i8**, i8*** %user_info, align 8, !dbg !450
  %47 = load i8**, i8*** %command_info, align 8, !dbg !451
  %48 = load i32, i32* %nargc, align 4, !dbg !452
  %49 = load i8**, i8*** %nargv, align 8, !dbg !453
  %50 = load i8**, i8*** %envp.addr, align 8, !dbg !454
  %call53 = call i32 @iolog_open(%struct.plugin_container* %44, i8** %45, i8** %46, i8** %47, i32 %48, i8** %49, i8** %50), !dbg !455
  store i32 %call53, i32* %ok, align 4, !dbg !456
  %51 = load i32, i32* %ok, align 4, !dbg !457
  switch i32 %51, label %sw.default [
    i32 1, label %sw.bb54
    i32 0, label %sw.bb55
    i32 -2, label %sw.bb56
  ], !dbg !458

sw.bb54:                                          ; preds = %for.body51
  br label %sw.epilog, !dbg !459

sw.bb55:                                          ; preds = %for.body51
  %52 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !461
  %53 = bitcast %struct.plugin_container* %52 to i8*, !dbg !461
  call void @tq_remove(i8* bitcast (%struct.plugin_container_list* @io_plugins to i8*), i8* %53), !dbg !462
  br label %sw.epilog, !dbg !463

sw.bb56:                                          ; preds = %for.body51
  call void @usage(i32 1), !dbg !464
  br label %sw.epilog, !dbg !465

sw.default:                                       ; preds = %for.body51
  %54 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !466
  %name = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %54, i32 0, i32 2, !dbg !467
  %55 = load i8*, i8** %name, align 8, !dbg !467
  call void (i32, i8*, ...) @errorx(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* %55) #12, !dbg !468
  unreachable, !dbg !468

sw.epilog:                                        ; preds = %sw.bb56, %sw.bb55, %sw.bb54
  br label %for.inc57, !dbg !469

for.inc57:                                        ; preds = %sw.epilog
  %56 = load %struct.plugin_container*, %struct.plugin_container** %next, align 8, !dbg !470
  store %struct.plugin_container* %56, %struct.plugin_container** %plugin, align 8, !dbg !471
  br label %for.cond48, !dbg !472, !llvm.loop !473

for.end58:                                        ; preds = %for.cond48
  %57 = load i8**, i8*** %command_info, align 8, !dbg !475
  call void @command_info_to_details(i8** %57, %struct.command_details* %command_details), !dbg !476
  %58 = load i32, i32* %sudo_mode, align 4, !dbg !477
  %call59 = call i32 bitcast (i32 (...)* @ISSET to i32 (i32, i32)*)(i32 %58, i32 65536), !dbg !479
  %tobool60 = icmp ne i32 %call59, 0, !dbg !479
  br i1 %tobool60, label %if.then61, label %if.end63, !dbg !480

if.then61:                                        ; preds = %for.end58
  %flags = getelementptr inbounds %struct.command_details, %struct.command_details* %command_details, i32 0, i32 9, !dbg !481
  %59 = load i32, i32* %flags, align 4, !dbg !481
  %call62 = call i32 bitcast (i32 (...)* @SET to i32 (i32, i32)*)(i32 %59, i32 1024), !dbg !482
  br label %if.end63, !dbg !482

if.end63:                                         ; preds = %if.then61, %for.end58
  %flags64 = getelementptr inbounds %struct.command_details, %struct.command_details* %command_details, i32 0, i32 9, !dbg !483
  %60 = load i32, i32* %flags64, align 4, !dbg !483
  %call65 = call i32 bitcast (i32 (...)* @ISSET to i32 (i32, i32)*)(i32 %60, i32 512), !dbg !485
  %tobool66 = icmp ne i32 %call65, 0, !dbg !485
  br i1 %tobool66, label %if.then67, label %if.else69, !dbg !486

if.then67:                                        ; preds = %if.end63
  %61 = load i8**, i8*** %argv_out, align 8, !dbg !487
  %62 = load i8**, i8*** %user_env_out, align 8, !dbg !489
  %call68 = call i32 @sudo_edit(%struct.command_details* %command_details, i8** %61, i8** %62), !dbg !490
  store i32 %call68, i32* %exitcode, align 4, !dbg !491
  br label %if.end94, !dbg !492

if.else69:                                        ; preds = %if.end63
  %63 = load i32, i32* %sudo_mode, align 4, !dbg !493
  %call70 = call i32 bitcast (i32 (...)* @ISSET to i32 (i32, i32)*)(i32 %63, i32 131072), !dbg !496
  %tobool71 = icmp ne i32 %call70, 0, !dbg !496
  br i1 %tobool71, label %if.then72, label %if.end92, !dbg !497

if.then72:                                        ; preds = %if.else69
  %64 = load i8**, i8*** %argv_out, align 8, !dbg !498
  %arrayidx = getelementptr inbounds i8*, i8** %64, i64 1, !dbg !498
  %65 = load i8*, i8** %arrayidx, align 8, !dbg !498
  %cmp73 = icmp ne i8* %65, null, !dbg !501
  br i1 %cmp73, label %land.lhs.true, label %if.end91, !dbg !502

land.lhs.true:                                    ; preds = %if.then72
  %66 = load i8**, i8*** %argv_out, align 8, !dbg !503
  %arrayidx75 = getelementptr inbounds i8*, i8** %66, i64 1, !dbg !503
  %67 = load i8*, i8** %arrayidx75, align 8, !dbg !503
  %call76 = call i32 @strcmp(i8* %67, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #14, !dbg !504
  %cmp77 = icmp eq i32 %call76, 0, !dbg !505
  br i1 %cmp77, label %land.lhs.true79, label %if.end91, !dbg !506

land.lhs.true79:                                  ; preds = %land.lhs.true
  %68 = load i8**, i8*** %argv_out, align 8, !dbg !507
  %arrayidx80 = getelementptr inbounds i8*, i8** %68, i64 2, !dbg !507
  %69 = load i8*, i8** %arrayidx80, align 8, !dbg !507
  %cmp81 = icmp ne i8* %69, null, !dbg !508
  br i1 %cmp81, label %land.lhs.true83, label %if.end91, !dbg !509

land.lhs.true83:                                  ; preds = %land.lhs.true79
  %70 = load i8**, i8*** %argv_out, align 8, !dbg !510
  %arrayidx84 = getelementptr inbounds i8*, i8** %70, i64 3, !dbg !510
  %71 = load i8*, i8** %arrayidx84, align 8, !dbg !510
  %cmp85 = icmp eq i8* %71, null, !dbg !511
  br i1 %cmp85, label %if.then87, label %if.end91, !dbg !512

if.then87:                                        ; preds = %land.lhs.true83
  %72 = load i8**, i8*** %argv_out, align 8, !dbg !513
  %arrayidx88 = getelementptr inbounds i8*, i8** %72, i64 2, !dbg !513
  %73 = load i8*, i8** %arrayidx88, align 8, !dbg !513
  %call89 = call i8* @escape_cmnd(i8* %73), !dbg !514
  %74 = load i8**, i8*** %argv_out, align 8, !dbg !515
  %arrayidx90 = getelementptr inbounds i8*, i8** %74, i64 2, !dbg !515
  store i8* %call89, i8** %arrayidx90, align 8, !dbg !516
  br label %if.end91, !dbg !515

if.end91:                                         ; preds = %if.then87, %land.lhs.true83, %land.lhs.true79, %land.lhs.true, %if.then72
  br label %if.end92, !dbg !517

if.end92:                                         ; preds = %if.end91, %if.else69
  %75 = load i8**, i8*** %argv_out, align 8, !dbg !518
  %76 = load i8**, i8*** %user_env_out, align 8, !dbg !519
  %call93 = call i32 @run_command(%struct.command_details* %command_details, i8** %75, i8** %76), !dbg !520
  store i32 %call93, i32* %exitcode, align 4, !dbg !521
  br label %if.end94

if.end94:                                         ; preds = %if.end92, %if.then67
  br label %sw.epilog96, !dbg !522

sw.default95:                                     ; preds = %if.end10
  %77 = load i32, i32* %sudo_mode, align 4, !dbg !523
  call void (i32, i8*, ...) @errorx(i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i32 %77) #12, !dbg !524
  unreachable, !dbg !524

sw.epilog96:                                      ; preds = %if.end94, %for.end
  %78 = load i32, i32* %exitcode, align 4, !dbg !525
  call void @exit(i32 %78) #13, !dbg !526
  unreachable, !dbg !526
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @klee_make_symbolic(i8*, i64, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigemptyset(%struct.__sigset_t*) #3

; Function Attrs: nounwind
declare dso_local i32 @sigprocmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @disable_coredumps() #0 !dbg !527 {
entry:
  %rl = alloca %struct.rlimit, align 8
  call void @llvm.dbg.declare(metadata %struct.rlimit* %rl, metadata !530, metadata !DIExpression()), !dbg !531
  %call = call i32 @getrlimit(i32 6, %struct.rlimit* @nproclimit) #11, !dbg !532
  %rlim_max = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rl, i32 0, i32 1, !dbg !533
  store i64 -1, i64* %rlim_max, align 8, !dbg !534
  %rlim_cur = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rl, i32 0, i32 0, !dbg !535
  store i64 -1, i64* %rlim_cur, align 8, !dbg !536
  %call1 = call i32 @setrlimit(i32 6, %struct.rlimit* %rl) #11, !dbg !537
  %tobool = icmp ne i32 %call1, 0, !dbg !537
  br i1 %tobool, label %if.then, label %if.end, !dbg !539

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.rlimit* %rl to i8*, !dbg !540
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.rlimit* @nproclimit to i8*), i64 16, i1 false), !dbg !540
  %rlim_max2 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rl, i32 0, i32 1, !dbg !542
  %1 = load i64, i64* %rlim_max2, align 8, !dbg !542
  %rlim_cur3 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rl, i32 0, i32 0, !dbg !543
  store i64 %1, i64* %rlim_cur3, align 8, !dbg !544
  %call4 = call i32 @setrlimit(i32 6, %struct.rlimit* %rl) #11, !dbg !545
  br label %if.end, !dbg !546

if.end:                                           ; preds = %if.then, %entry
  %call5 = call i32 @getrlimit(i32 4, %struct.rlimit* @corelimit) #11, !dbg !547
  %2 = bitcast %struct.rlimit* %rl to i8*, !dbg !548
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 bitcast (%struct.rlimit* @corelimit to i8*), i64 16, i1 false), !dbg !548
  %rlim_cur6 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rl, i32 0, i32 0, !dbg !549
  store i64 0, i64* %rlim_cur6, align 8, !dbg !550
  %call7 = call i32 @setrlimit(i32 4, %struct.rlimit* %rl) #11, !dbg !551
  ret void, !dbg !552
}

; Function Attrs: noinline nounwind uwtable
define internal void @fix_fds() #0 !dbg !553 {
entry:
  %miss = alloca [3 x i32], align 4
  %devnull = alloca i32, align 4
  call void @llvm.dbg.declare(metadata [3 x i32]* %miss, metadata !554, metadata !DIExpression()), !dbg !558
  call void @llvm.dbg.declare(metadata i32* %devnull, metadata !559, metadata !DIExpression()), !dbg !560
  store i32 -1, i32* %devnull, align 4, !dbg !560
  %call = call i32 (i32, i32, ...) @fcntl(i32 0, i32 3, i32 0), !dbg !561
  %cmp = icmp eq i32 %call, -1, !dbg !562
  %conv = zext i1 %cmp to i32, !dbg !562
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %miss, i64 0, i64 0, !dbg !563
  store i32 %conv, i32* %arrayidx, align 4, !dbg !564
  %call1 = call i32 (i32, i32, ...) @fcntl(i32 1, i32 3, i32 0), !dbg !565
  %cmp2 = icmp eq i32 %call1, -1, !dbg !566
  %conv3 = zext i1 %cmp2 to i32, !dbg !566
  %arrayidx4 = getelementptr inbounds [3 x i32], [3 x i32]* %miss, i64 0, i64 1, !dbg !567
  store i32 %conv3, i32* %arrayidx4, align 4, !dbg !568
  %call5 = call i32 (i32, i32, ...) @fcntl(i32 2, i32 3, i32 0), !dbg !569
  %cmp6 = icmp eq i32 %call5, -1, !dbg !570
  %conv7 = zext i1 %cmp6 to i32, !dbg !570
  %arrayidx8 = getelementptr inbounds [3 x i32], [3 x i32]* %miss, i64 0, i64 2, !dbg !571
  store i32 %conv7, i32* %arrayidx8, align 4, !dbg !572
  %arrayidx9 = getelementptr inbounds [3 x i32], [3 x i32]* %miss, i64 0, i64 0, !dbg !573
  %0 = load i32, i32* %arrayidx9, align 4, !dbg !573
  %tobool = icmp ne i32 %0, 0, !dbg !573
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !575

lor.lhs.false:                                    ; preds = %entry
  %arrayidx10 = getelementptr inbounds [3 x i32], [3 x i32]* %miss, i64 0, i64 1, !dbg !576
  %1 = load i32, i32* %arrayidx10, align 4, !dbg !576
  %tobool11 = icmp ne i32 %1, 0, !dbg !576
  br i1 %tobool11, label %if.then, label %lor.lhs.false12, !dbg !577

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %miss, i64 0, i64 2, !dbg !578
  %2 = load i32, i32* %arrayidx13, align 4, !dbg !578
  %tobool14 = icmp ne i32 %2, 0, !dbg !578
  br i1 %tobool14, label %if.then, label %if.end47, !dbg !579

if.then:                                          ; preds = %lor.lhs.false12, %lor.lhs.false, %entry
  %call15 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0), i32 2, i32 420), !dbg !580
  store i32 %call15, i32* %devnull, align 4, !dbg !583
  %cmp16 = icmp eq i32 %call15, -1, !dbg !584
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !585

if.then18:                                        ; preds = %if.then
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #12, !dbg !586
  unreachable, !dbg !586

if.end:                                           ; preds = %if.then
  %arrayidx19 = getelementptr inbounds [3 x i32], [3 x i32]* %miss, i64 0, i64 0, !dbg !587
  %3 = load i32, i32* %arrayidx19, align 4, !dbg !587
  %tobool20 = icmp ne i32 %3, 0, !dbg !587
  br i1 %tobool20, label %land.lhs.true, label %if.end25, !dbg !589

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32, i32* %devnull, align 4, !dbg !590
  %call21 = call i32 @dup2(i32 %4, i32 0) #11, !dbg !591
  %cmp22 = icmp eq i32 %call21, -1, !dbg !592
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !593

if.then24:                                        ; preds = %land.lhs.true
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)) #12, !dbg !594
  unreachable, !dbg !594

if.end25:                                         ; preds = %land.lhs.true, %if.end
  %arrayidx26 = getelementptr inbounds [3 x i32], [3 x i32]* %miss, i64 0, i64 1, !dbg !595
  %5 = load i32, i32* %arrayidx26, align 4, !dbg !595
  %tobool27 = icmp ne i32 %5, 0, !dbg !595
  br i1 %tobool27, label %land.lhs.true28, label %if.end33, !dbg !597

land.lhs.true28:                                  ; preds = %if.end25
  %6 = load i32, i32* %devnull, align 4, !dbg !598
  %call29 = call i32 @dup2(i32 %6, i32 1) #11, !dbg !599
  %cmp30 = icmp eq i32 %call29, -1, !dbg !600
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !601

if.then32:                                        ; preds = %land.lhs.true28
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)) #12, !dbg !602
  unreachable, !dbg !602

if.end33:                                         ; preds = %land.lhs.true28, %if.end25
  %arrayidx34 = getelementptr inbounds [3 x i32], [3 x i32]* %miss, i64 0, i64 2, !dbg !603
  %7 = load i32, i32* %arrayidx34, align 4, !dbg !603
  %tobool35 = icmp ne i32 %7, 0, !dbg !603
  br i1 %tobool35, label %land.lhs.true36, label %if.end41, !dbg !605

land.lhs.true36:                                  ; preds = %if.end33
  %8 = load i32, i32* %devnull, align 4, !dbg !606
  %call37 = call i32 @dup2(i32 %8, i32 2) #11, !dbg !607
  %cmp38 = icmp eq i32 %call37, -1, !dbg !608
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !609

if.then40:                                        ; preds = %land.lhs.true36
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)) #12, !dbg !610
  unreachable, !dbg !610

if.end41:                                         ; preds = %land.lhs.true36, %if.end33
  %9 = load i32, i32* %devnull, align 4, !dbg !611
  %cmp42 = icmp sgt i32 %9, 2, !dbg !613
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !614

if.then44:                                        ; preds = %if.end41
  %10 = load i32, i32* %devnull, align 4, !dbg !615
  %call45 = call i32 @close(i32 %10), !dbg !616
  br label %if.end46, !dbg !616

if.end46:                                         ; preds = %if.then44, %if.end41
  br label %if.end47, !dbg !617

if.end47:                                         ; preds = %if.end46, %lor.lhs.false12
  ret void, !dbg !618
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal i8** @get_user_info(%struct.user_details* %ud) #0 !dbg !619 {
entry:
  %ud.addr = alloca %struct.user_details*, align 8
  %cwd = alloca [4096 x i8], align 1
  %host = alloca [64 x i8], align 1
  %user_info = alloca i8**, align 8
  %cp = alloca i8*, align 8
  %pw = alloca %struct.passwd*, align 8
  %i = alloca i32, align 4
  store %struct.user_details* %ud, %struct.user_details** %ud.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.user_details** %ud.addr, metadata !623, metadata !DIExpression()), !dbg !624
  call void @llvm.dbg.declare(metadata [4096 x i8]* %cwd, metadata !625, metadata !DIExpression()), !dbg !629
  call void @llvm.dbg.declare(metadata [64 x i8]* %host, metadata !630, metadata !DIExpression()), !dbg !634
  call void @llvm.dbg.declare(metadata i8*** %user_info, metadata !635, metadata !DIExpression()), !dbg !636
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !637, metadata !DIExpression()), !dbg !638
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !639, metadata !DIExpression()), !dbg !640
  call void @llvm.dbg.declare(metadata i32* %i, metadata !641, metadata !DIExpression()), !dbg !642
  store i32 0, i32* %i, align 4, !dbg !642
  %0 = bitcast i8*** %user_info to i8*, !dbg !643
  call void @klee_make_symbolic(i8* %0, i64 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0)), !dbg !644
  %1 = bitcast i8** %cp to i8*, !dbg !645
  call void @klee_make_symbolic(i8* %1, i64 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)), !dbg !646
  %2 = bitcast %struct.passwd** %pw to i8*, !dbg !647
  call void @klee_make_symbolic(i8* %2, i64 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0)), !dbg !648
  %3 = bitcast [4096 x i8]* %cwd to i8*, !dbg !649
  call void @klee_make_symbolic(i8* %3, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0)), !dbg !650
  %4 = bitcast [64 x i8]* %host to i8*, !dbg !651
  call void @klee_make_symbolic(i8* %4, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0)), !dbg !652
  %call = call i32 @getuid() #11, !dbg !653
  %5 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !654
  %uid = getelementptr inbounds %struct.user_details, %struct.user_details* %5, i32 0, i32 0, !dbg !655
  store i32 %call, i32* %uid, align 8, !dbg !656
  %call1 = call i32 @geteuid() #11, !dbg !657
  %6 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !658
  %euid = getelementptr inbounds %struct.user_details, %struct.user_details* %6, i32 0, i32 1, !dbg !659
  store i32 %call1, i32* %euid, align 4, !dbg !660
  %call2 = call i32 @getgid() #11, !dbg !661
  %7 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !662
  %gid = getelementptr inbounds %struct.user_details, %struct.user_details* %7, i32 0, i32 2, !dbg !663
  store i32 %call2, i32* %gid, align 8, !dbg !664
  %call3 = call i32 @getegid() #11, !dbg !665
  %8 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !666
  %egid = getelementptr inbounds %struct.user_details, %struct.user_details* %8, i32 0, i32 3, !dbg !667
  store i32 %call3, i32* %egid, align 4, !dbg !668
  %9 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !669
  %uid4 = getelementptr inbounds %struct.user_details, %struct.user_details* %9, i32 0, i32 0, !dbg !670
  %10 = load i32, i32* %uid4, align 8, !dbg !670
  %call5 = call %struct.passwd* @getpwuid(i32 %10), !dbg !671
  store %struct.passwd* %call5, %struct.passwd** %pw, align 8, !dbg !672
  %11 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !673
  %cmp = icmp eq %struct.passwd* %11, null, !dbg !675
  br i1 %cmp, label %if.then, label %if.end, !dbg !676

if.then:                                          ; preds = %entry
  %12 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !677
  %uid6 = getelementptr inbounds %struct.user_details, %struct.user_details* %12, i32 0, i32 0, !dbg !678
  %13 = load i32, i32* %uid6, align 8, !dbg !678
  call void (i32, i8*, ...) @errorx(i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34, i64 0, i64 0), i32 %13) #12, !dbg !679
  unreachable, !dbg !679

if.end:                                           ; preds = %entry
  %14 = load i8**, i8*** %user_info, align 8, !dbg !680
  %15 = load i32, i32* %i, align 4, !dbg !682
  %idxprom = sext i32 %15 to i64, !dbg !680
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %idxprom, !dbg !680
  %16 = load i8*, i8** %arrayidx, align 8, !dbg !680
  %cmp7 = icmp eq i8* %16, null, !dbg !683
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !684

if.then8:                                         ; preds = %if.end
  call void (i32, i8*, ...) @errorx(i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0)) #12, !dbg !685
  unreachable, !dbg !685

if.end9:                                          ; preds = %if.end
  %17 = load i8**, i8*** %user_info, align 8, !dbg !686
  %18 = load i32, i32* %i, align 4, !dbg !687
  %idxprom10 = sext i32 %18 to i64, !dbg !686
  %arrayidx11 = getelementptr inbounds i8*, i8** %17, i64 %idxprom10, !dbg !686
  %19 = load i8*, i8** %arrayidx11, align 8, !dbg !686
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 6, !dbg !688
  %add.ptr12 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !689
  %20 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !690
  %username = getelementptr inbounds %struct.user_details, %struct.user_details* %20, i32 0, i32 4, !dbg !691
  store i8* %add.ptr12, i8** %username, align 8, !dbg !692
  %call13 = call i8* @getenv(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0)) #11, !dbg !693
  %21 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !695
  %shell = getelementptr inbounds %struct.user_details, %struct.user_details* %21, i32 0, i32 8, !dbg !696
  store i8* %call13, i8** %shell, align 8, !dbg !697
  %cmp14 = icmp eq i8* %call13, null, !dbg !698
  br i1 %cmp14, label %if.then19, label %lor.lhs.false, !dbg !699

lor.lhs.false:                                    ; preds = %if.end9
  %22 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !700
  %shell15 = getelementptr inbounds %struct.user_details, %struct.user_details* %22, i32 0, i32 8, !dbg !701
  %23 = load i8*, i8** %shell15, align 8, !dbg !701
  %arrayidx16 = getelementptr inbounds i8, i8* %23, i64 0, !dbg !700
  %24 = load i8, i8* %arrayidx16, align 1, !dbg !700
  %conv = zext i8 %24 to i32, !dbg !700
  %cmp17 = icmp eq i32 %conv, 0, !dbg !702
  br i1 %cmp17, label %if.then19, label %if.end24, !dbg !703

if.then19:                                        ; preds = %lor.lhs.false, %if.end9
  %25 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !704
  %pw_shell = getelementptr inbounds %struct.passwd, %struct.passwd* %25, i32 0, i32 6, !dbg !706
  %26 = load i8*, i8** %pw_shell, align 8, !dbg !706
  %arrayidx20 = getelementptr inbounds i8, i8* %26, i64 0, !dbg !704
  %27 = load i8, i8* %arrayidx20, align 1, !dbg !704
  %conv21 = zext i8 %27 to i32, !dbg !704
  %tobool = icmp ne i32 %conv21, 0, !dbg !704
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !704

cond.true:                                        ; preds = %if.then19
  %28 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !707
  %pw_shell22 = getelementptr inbounds %struct.passwd, %struct.passwd* %28, i32 0, i32 6, !dbg !708
  %29 = load i8*, i8** %pw_shell22, align 8, !dbg !708
  br label %cond.end, !dbg !704

cond.false:                                       ; preds = %if.then19
  br label %cond.end, !dbg !704

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %29, %cond.true ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0), %cond.false ], !dbg !704
  %30 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !709
  %shell23 = getelementptr inbounds %struct.user_details, %struct.user_details* %30, i32 0, i32 8, !dbg !710
  store i8* %cond, i8** %shell23, align 8, !dbg !711
  br label %if.end24, !dbg !712

if.end24:                                         ; preds = %cond.end, %lor.lhs.false
  %31 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !713
  %shell25 = getelementptr inbounds %struct.user_details, %struct.user_details* %31, i32 0, i32 8, !dbg !714
  %32 = load i8*, i8** %shell25, align 8, !dbg !714
  %call26 = call i8* @estrdup(i8* %32), !dbg !715
  %33 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !716
  %shell27 = getelementptr inbounds %struct.user_details, %struct.user_details* %33, i32 0, i32 8, !dbg !717
  store i8* %call26, i8** %shell27, align 8, !dbg !718
  %34 = load i8**, i8*** %user_info, align 8, !dbg !719
  %35 = load i32, i32* %i, align 4, !dbg !720
  %inc = add nsw i32 %35, 1, !dbg !720
  store i32 %inc, i32* %i, align 4, !dbg !720
  %idxprom28 = sext i32 %inc to i64, !dbg !719
  %arrayidx29 = getelementptr inbounds i8*, i8** %34, i64 %idxprom28, !dbg !719
  %36 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !721
  %uid30 = getelementptr inbounds %struct.user_details, %struct.user_details* %36, i32 0, i32 0, !dbg !722
  %37 = load i32, i32* %uid30, align 8, !dbg !722
  %call31 = call i32 (i8**, i8*, ...) @easprintf(i8** %arrayidx29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i32 %37), !dbg !723
  %38 = load i8**, i8*** %user_info, align 8, !dbg !724
  %39 = load i32, i32* %i, align 4, !dbg !725
  %inc32 = add nsw i32 %39, 1, !dbg !725
  store i32 %inc32, i32* %i, align 4, !dbg !725
  %idxprom33 = sext i32 %inc32 to i64, !dbg !724
  %arrayidx34 = getelementptr inbounds i8*, i8** %38, i64 %idxprom33, !dbg !724
  %40 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !726
  %euid35 = getelementptr inbounds %struct.user_details, %struct.user_details* %40, i32 0, i32 1, !dbg !727
  %41 = load i32, i32* %euid35, align 4, !dbg !727
  %call36 = call i32 (i8**, i8*, ...) @easprintf(i8** %arrayidx34, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 %41), !dbg !728
  %42 = load i8**, i8*** %user_info, align 8, !dbg !729
  %43 = load i32, i32* %i, align 4, !dbg !730
  %inc37 = add nsw i32 %43, 1, !dbg !730
  store i32 %inc37, i32* %i, align 4, !dbg !730
  %idxprom38 = sext i32 %inc37 to i64, !dbg !729
  %arrayidx39 = getelementptr inbounds i8*, i8** %42, i64 %idxprom38, !dbg !729
  %44 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !731
  %gid40 = getelementptr inbounds %struct.user_details, %struct.user_details* %44, i32 0, i32 2, !dbg !732
  %45 = load i32, i32* %gid40, align 8, !dbg !732
  %call41 = call i32 (i8**, i8*, ...) @easprintf(i8** %arrayidx39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0), i32 %45), !dbg !733
  %46 = load i8**, i8*** %user_info, align 8, !dbg !734
  %47 = load i32, i32* %i, align 4, !dbg !735
  %inc42 = add nsw i32 %47, 1, !dbg !735
  store i32 %inc42, i32* %i, align 4, !dbg !735
  %idxprom43 = sext i32 %inc42 to i64, !dbg !734
  %arrayidx44 = getelementptr inbounds i8*, i8** %46, i64 %idxprom43, !dbg !734
  %48 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !736
  %egid45 = getelementptr inbounds %struct.user_details, %struct.user_details* %48, i32 0, i32 3, !dbg !737
  %49 = load i32, i32* %egid45, align 4, !dbg !737
  %call46 = call i32 (i8**, i8*, ...) @easprintf(i8** %arrayidx44, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i64 0, i64 0), i32 %49), !dbg !738
  %50 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !739
  %call47 = call i8* @get_user_groups(%struct.user_details* %50), !dbg !741
  store i8* %call47, i8** %cp, align 8, !dbg !742
  %cmp48 = icmp ne i8* %call47, null, !dbg !743
  br i1 %cmp48, label %if.then50, label %if.end54, !dbg !744

if.then50:                                        ; preds = %if.end24
  %51 = load i8*, i8** %cp, align 8, !dbg !745
  %52 = load i8**, i8*** %user_info, align 8, !dbg !746
  %53 = load i32, i32* %i, align 4, !dbg !747
  %inc51 = add nsw i32 %53, 1, !dbg !747
  store i32 %inc51, i32* %i, align 4, !dbg !747
  %idxprom52 = sext i32 %inc51 to i64, !dbg !746
  %arrayidx53 = getelementptr inbounds i8*, i8** %52, i64 %idxprom52, !dbg !746
  store i8* %51, i8** %arrayidx53, align 8, !dbg !748
  br label %if.end54, !dbg !746

if.end54:                                         ; preds = %if.then50, %if.end24
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %cwd, i64 0, i64 0, !dbg !749
  %call55 = call i8* @getcwd(i8* %arraydecay, i64 4096) #11, !dbg !751
  %cmp56 = icmp ne i8* %call55, null, !dbg !752
  br i1 %cmp56, label %if.then58, label %if.end75, !dbg !753

if.then58:                                        ; preds = %if.end54
  %arraydecay59 = getelementptr inbounds [4096 x i8], [4096 x i8]* %cwd, i64 0, i64 0, !dbg !754
  %call60 = call i8* @fmt_string(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i8* %arraydecay59), !dbg !756
  %54 = load i8**, i8*** %user_info, align 8, !dbg !757
  %55 = load i32, i32* %i, align 4, !dbg !758
  %inc61 = add nsw i32 %55, 1, !dbg !758
  store i32 %inc61, i32* %i, align 4, !dbg !758
  %idxprom62 = sext i32 %inc61 to i64, !dbg !757
  %arrayidx63 = getelementptr inbounds i8*, i8** %54, i64 %idxprom62, !dbg !757
  store i8* %call60, i8** %arrayidx63, align 8, !dbg !759
  %56 = load i8**, i8*** %user_info, align 8, !dbg !760
  %57 = load i32, i32* %i, align 4, !dbg !762
  %idxprom64 = sext i32 %57 to i64, !dbg !760
  %arrayidx65 = getelementptr inbounds i8*, i8** %56, i64 %idxprom64, !dbg !760
  %58 = load i8*, i8** %arrayidx65, align 8, !dbg !760
  %cmp66 = icmp eq i8* %58, null, !dbg !763
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !764

if.then68:                                        ; preds = %if.then58
  call void (i32, i8*, ...) @errorx(i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0)) #12, !dbg !765
  unreachable, !dbg !765

if.end69:                                         ; preds = %if.then58
  %59 = load i8**, i8*** %user_info, align 8, !dbg !766
  %60 = load i32, i32* %i, align 4, !dbg !767
  %idxprom70 = sext i32 %60 to i64, !dbg !766
  %arrayidx71 = getelementptr inbounds i8*, i8** %59, i64 %idxprom70, !dbg !766
  %61 = load i8*, i8** %arrayidx71, align 8, !dbg !766
  %add.ptr72 = getelementptr inbounds i8, i8* %61, i64 5, !dbg !768
  %add.ptr73 = getelementptr inbounds i8, i8* %add.ptr72, i64 -1, !dbg !769
  %62 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !770
  %cwd74 = getelementptr inbounds %struct.user_details, %struct.user_details* %62, i32 0, i32 5, !dbg !771
  store i8* %add.ptr73, i8** %cwd74, align 8, !dbg !772
  br label %if.end75, !dbg !773

if.end75:                                         ; preds = %if.end69, %if.end54
  %call76 = call i8* @ttyname(i32 0) #11, !dbg !774
  store i8* %call76, i8** %cp, align 8, !dbg !776
  %tobool77 = icmp ne i8* %call76, null, !dbg !776
  br i1 %tobool77, label %if.then84, label %lor.lhs.false78, !dbg !777

lor.lhs.false78:                                  ; preds = %if.end75
  %call79 = call i8* @ttyname(i32 1) #11, !dbg !778
  store i8* %call79, i8** %cp, align 8, !dbg !779
  %tobool80 = icmp ne i8* %call79, null, !dbg !779
  br i1 %tobool80, label %if.then84, label %lor.lhs.false81, !dbg !780

lor.lhs.false81:                                  ; preds = %lor.lhs.false78
  %call82 = call i8* @ttyname(i32 2) #11, !dbg !781
  store i8* %call82, i8** %cp, align 8, !dbg !782
  %tobool83 = icmp ne i8* %call82, null, !dbg !782
  br i1 %tobool83, label %if.then84, label %if.end99, !dbg !783

if.then84:                                        ; preds = %lor.lhs.false81, %lor.lhs.false78, %if.end75
  %63 = load i8*, i8** %cp, align 8, !dbg !784
  %call85 = call i8* @fmt_string(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), i8* %63), !dbg !786
  %64 = load i8**, i8*** %user_info, align 8, !dbg !787
  %65 = load i32, i32* %i, align 4, !dbg !788
  %inc86 = add nsw i32 %65, 1, !dbg !788
  store i32 %inc86, i32* %i, align 4, !dbg !788
  %idxprom87 = sext i32 %inc86 to i64, !dbg !787
  %arrayidx88 = getelementptr inbounds i8*, i8** %64, i64 %idxprom87, !dbg !787
  store i8* %call85, i8** %arrayidx88, align 8, !dbg !789
  %66 = load i8**, i8*** %user_info, align 8, !dbg !790
  %67 = load i32, i32* %i, align 4, !dbg !792
  %idxprom89 = sext i32 %67 to i64, !dbg !790
  %arrayidx90 = getelementptr inbounds i8*, i8** %66, i64 %idxprom89, !dbg !790
  %68 = load i8*, i8** %arrayidx90, align 8, !dbg !790
  %cmp91 = icmp eq i8* %68, null, !dbg !793
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !794

if.then93:                                        ; preds = %if.then84
  call void (i32, i8*, ...) @errorx(i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0)) #12, !dbg !795
  unreachable, !dbg !795

if.end94:                                         ; preds = %if.then84
  %69 = load i8**, i8*** %user_info, align 8, !dbg !796
  %70 = load i32, i32* %i, align 4, !dbg !797
  %idxprom95 = sext i32 %70 to i64, !dbg !796
  %arrayidx96 = getelementptr inbounds i8*, i8** %69, i64 %idxprom95, !dbg !796
  %71 = load i8*, i8** %arrayidx96, align 8, !dbg !796
  %add.ptr97 = getelementptr inbounds i8, i8* %71, i64 5, !dbg !798
  %add.ptr98 = getelementptr inbounds i8, i8* %add.ptr97, i64 -1, !dbg !799
  %72 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !800
  %tty = getelementptr inbounds %struct.user_details, %struct.user_details* %72, i32 0, i32 6, !dbg !801
  store i8* %add.ptr98, i8** %tty, align 8, !dbg !802
  br label %if.end99, !dbg !803

if.end99:                                         ; preds = %if.end94, %lor.lhs.false81
  %arraydecay100 = getelementptr inbounds [64 x i8], [64 x i8]* %host, i64 0, i64 0, !dbg !804
  %call101 = call i32 @gethostname(i8* %arraydecay100, i64 64) #11, !dbg !806
  %cmp102 = icmp eq i32 %call101, 0, !dbg !807
  br i1 %cmp102, label %if.then104, label %if.else, !dbg !808

if.then104:                                       ; preds = %if.end99
  %arrayidx105 = getelementptr inbounds [64 x i8], [64 x i8]* %host, i64 0, i64 63, !dbg !809
  store i8 0, i8* %arrayidx105, align 1, !dbg !810
  br label %if.end108, !dbg !809

if.else:                                          ; preds = %if.end99
  %arraydecay106 = getelementptr inbounds [64 x i8], [64 x i8]* %host, i64 0, i64 0, !dbg !811
  %call107 = call i64 @strlcpy(i8* %arraydecay106, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i64 0, i64 0), i64 64), !dbg !812
  br label %if.end108

if.end108:                                        ; preds = %if.else, %if.then104
  %arraydecay109 = getelementptr inbounds [64 x i8], [64 x i8]* %host, i64 0, i64 0, !dbg !813
  %call110 = call i8* @fmt_string(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* %arraydecay109), !dbg !814
  %73 = load i8**, i8*** %user_info, align 8, !dbg !815
  %74 = load i32, i32* %i, align 4, !dbg !816
  %inc111 = add nsw i32 %74, 1, !dbg !816
  store i32 %inc111, i32* %i, align 4, !dbg !816
  %idxprom112 = sext i32 %inc111 to i64, !dbg !815
  %arrayidx113 = getelementptr inbounds i8*, i8** %73, i64 %idxprom112, !dbg !815
  store i8* %call110, i8** %arrayidx113, align 8, !dbg !817
  %75 = load i8**, i8*** %user_info, align 8, !dbg !818
  %76 = load i32, i32* %i, align 4, !dbg !820
  %idxprom114 = sext i32 %76 to i64, !dbg !818
  %arrayidx115 = getelementptr inbounds i8*, i8** %75, i64 %idxprom114, !dbg !818
  %77 = load i8*, i8** %arrayidx115, align 8, !dbg !818
  %cmp116 = icmp eq i8* %77, null, !dbg !821
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !822

if.then118:                                       ; preds = %if.end108
  call void (i32, i8*, ...) @errorx(i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0)) #12, !dbg !823
  unreachable, !dbg !823

if.end119:                                        ; preds = %if.end108
  %78 = load i8**, i8*** %user_info, align 8, !dbg !824
  %79 = load i32, i32* %i, align 4, !dbg !825
  %idxprom120 = sext i32 %79 to i64, !dbg !824
  %arrayidx121 = getelementptr inbounds i8*, i8** %78, i64 %idxprom120, !dbg !824
  %80 = load i8*, i8** %arrayidx121, align 8, !dbg !824
  %add.ptr122 = getelementptr inbounds i8, i8* %80, i64 6, !dbg !826
  %add.ptr123 = getelementptr inbounds i8, i8* %add.ptr122, i64 -1, !dbg !827
  %81 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !828
  %host124 = getelementptr inbounds %struct.user_details, %struct.user_details* %81, i32 0, i32 7, !dbg !829
  store i8* %add.ptr123, i8** %host124, align 8, !dbg !830
  %82 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !831
  %ts_lines = getelementptr inbounds %struct.user_details, %struct.user_details* %82, i32 0, i32 12, !dbg !832
  %83 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !833
  %ts_cols = getelementptr inbounds %struct.user_details, %struct.user_details* %83, i32 0, i32 11, !dbg !834
  call void @get_ttysize(i32* %ts_lines, i32* %ts_cols), !dbg !835
  %84 = load i8**, i8*** %user_info, align 8, !dbg !836
  %85 = load i32, i32* %i, align 4, !dbg !837
  %inc125 = add nsw i32 %85, 1, !dbg !837
  store i32 %inc125, i32* %i, align 4, !dbg !837
  %idxprom126 = sext i32 %inc125 to i64, !dbg !836
  %arrayidx127 = getelementptr inbounds i8*, i8** %84, i64 %idxprom126, !dbg !836
  %86 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !838
  %ts_lines128 = getelementptr inbounds %struct.user_details, %struct.user_details* %86, i32 0, i32 12, !dbg !839
  %87 = load i32, i32* %ts_lines128, align 8, !dbg !839
  %call129 = call i32 (i8**, i8*, ...) @easprintf(i8** %arrayidx127, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0), i32 %87), !dbg !840
  %88 = load i8**, i8*** %user_info, align 8, !dbg !841
  %89 = load i32, i32* %i, align 4, !dbg !842
  %inc130 = add nsw i32 %89, 1, !dbg !842
  store i32 %inc130, i32* %i, align 4, !dbg !842
  %idxprom131 = sext i32 %inc130 to i64, !dbg !841
  %arrayidx132 = getelementptr inbounds i8*, i8** %88, i64 %idxprom131, !dbg !841
  %90 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !843
  %ts_cols133 = getelementptr inbounds %struct.user_details, %struct.user_details* %90, i32 0, i32 11, !dbg !844
  %91 = load i32, i32* %ts_cols133, align 4, !dbg !844
  %call134 = call i32 (i8**, i8*, ...) @easprintf(i8** %arrayidx132, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i64 0, i64 0), i32 %91), !dbg !845
  %92 = load i8**, i8*** %user_info, align 8, !dbg !846
  %93 = load i32, i32* %i, align 4, !dbg !847
  %inc135 = add nsw i32 %93, 1, !dbg !847
  store i32 %inc135, i32* %i, align 4, !dbg !847
  %idxprom136 = sext i32 %inc135 to i64, !dbg !846
  %arrayidx137 = getelementptr inbounds i8*, i8** %92, i64 %idxprom136, !dbg !846
  store i8* null, i8** %arrayidx137, align 8, !dbg !848
  %94 = load i8**, i8*** %user_info, align 8, !dbg !849
  ret i8** %94, !dbg !850
}

declare dso_local i32 @parse_args(i32, i8**, i32*, i8***, i8***, i8***) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @policy_open(%struct.plugin_container* %plugin, i8** %settings, i8** %user_info, i8** %user_env) #0 !dbg !851 {
entry:
  %plugin.addr = alloca %struct.plugin_container*, align 8
  %settings.addr = alloca i8**, align 8
  %user_info.addr = alloca i8**, align 8
  %user_env.addr = alloca i8**, align 8
  store %struct.plugin_container* %plugin, %struct.plugin_container** %plugin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin.addr, metadata !854, metadata !DIExpression()), !dbg !855
  store i8** %settings, i8*** %settings.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %settings.addr, metadata !856, metadata !DIExpression()), !dbg !857
  store i8** %user_info, i8*** %user_info.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %user_info.addr, metadata !858, metadata !DIExpression()), !dbg !859
  store i8** %user_env, i8*** %user_env.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %user_env.addr, metadata !860, metadata !DIExpression()), !dbg !861
  %0 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !862
  %u = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %0, i32 0, i32 4, !dbg !863
  %policy = bitcast %union.anon* %u to %struct.policy_plugin**, !dbg !864
  %1 = load %struct.policy_plugin*, %struct.policy_plugin** %policy, align 8, !dbg !864
  %open = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %1, i32 0, i32 2, !dbg !865
  %2 = load i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i8**)*, i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i8**)** %open, align 8, !dbg !865
  %3 = load i8**, i8*** %settings.addr, align 8, !dbg !866
  %4 = load i8**, i8*** %user_info.addr, align 8, !dbg !867
  %5 = load i8**, i8*** %user_env.addr, align 8, !dbg !868
  %call = call i32 %2(i32 65537, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)* @sudo_conversation, i32 (i32, i8*, ...)* @_sudo_printf, i8** %3, i8** %4, i8** %5), !dbg !862
  ret i32 %call, !dbg !869
}

declare dso_local void @usage(i32) #2

; Function Attrs: noreturn
declare dso_local void @errorx(i32, i8*, ...) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @sudo_debug(i32 %level, i8* %fmt, ...) #0 !dbg !870 {
entry:
  %level.addr = alloca i32, align 4
  %fmt.addr = alloca i8*, align 8
  %ap = alloca %"struct.std::__va_list", align 8
  %fmt2 = alloca i8*, align 8
  %byval-temp = alloca %"struct.std::__va_list", align 8
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !873, metadata !DIExpression()), !dbg !874
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !875, metadata !DIExpression()), !dbg !876
  call void @llvm.dbg.declare(metadata %"struct.std::__va_list"* %ap, metadata !877, metadata !DIExpression()), !dbg !891
  call void @llvm.dbg.declare(metadata i8** %fmt2, metadata !892, metadata !DIExpression()), !dbg !893
  %0 = load i32, i32* %level.addr, align 4, !dbg !894
  %1 = load i32, i32* @debug_level, align 4, !dbg !896
  %cmp = icmp sgt i32 %0, %1, !dbg !897
  br i1 %cmp, label %if.then, label %if.end, !dbg !898

if.then:                                          ; preds = %entry
  br label %return, !dbg !899

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** @__progname, align 8, !dbg !900
  %3 = load i8*, i8** %fmt.addr, align 8, !dbg !901
  %call = call i32 (i8**, i8*, ...) @easprintf(i8** %fmt2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8* %2, i8* %3), !dbg !902
  %ap1 = bitcast %"struct.std::__va_list"* %ap to i8*, !dbg !903
  call void @llvm.va_start(i8* %ap1), !dbg !903
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !904
  %5 = load i8*, i8** %fmt2, align 8, !dbg !905
  %6 = bitcast %"struct.std::__va_list"* %byval-temp to i8*, !dbg !906
  %7 = bitcast %"struct.std::__va_list"* %ap to i8*, !dbg !906
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false), !dbg !906
  %call2 = call i32 @vfprintf(%struct._IO_FILE* %4, i8* %5, %"struct.std::__va_list"* %byval-temp), !dbg !906
  %ap3 = bitcast %"struct.std::__va_list"* %ap to i8*, !dbg !907
  call void @llvm.va_end(i8* %ap3), !dbg !907
  %8 = load i8*, i8** %fmt2, align 8, !dbg !908
  call void @efree(i8* %8), !dbg !909
  br label %return, !dbg !910

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !910
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @policy_show_version(%struct.plugin_container* %plugin, i32 %verbose) #0 !dbg !911 {
entry:
  %plugin.addr = alloca %struct.plugin_container*, align 8
  %verbose.addr = alloca i32, align 4
  store %struct.plugin_container* %plugin, %struct.plugin_container** %plugin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin.addr, metadata !914, metadata !DIExpression()), !dbg !915
  store i32 %verbose, i32* %verbose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verbose.addr, metadata !916, metadata !DIExpression()), !dbg !917
  %0 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !918
  %u = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %0, i32 0, i32 4, !dbg !919
  %policy = bitcast %union.anon* %u to %struct.policy_plugin**, !dbg !920
  %1 = load %struct.policy_plugin*, %struct.policy_plugin** %policy, align 8, !dbg !920
  %show_version = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %1, i32 0, i32 4, !dbg !921
  %2 = load i32 (i32)*, i32 (i32)** %show_version, align 8, !dbg !921
  %3 = load i32, i32* %verbose.addr, align 4, !dbg !922
  %call = call i32 %2(i32 %3), !dbg !918
  ret i32 %call, !dbg !923
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @iolog_open(%struct.plugin_container* %plugin, i8** %settings, i8** %user_info, i8** %command_info, i32 %argc, i8** %argv, i8** %user_env) #0 !dbg !924 {
entry:
  %plugin.addr = alloca %struct.plugin_container*, align 8
  %settings.addr = alloca i8**, align 8
  %user_info.addr = alloca i8**, align 8
  %command_info.addr = alloca i8**, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %user_env.addr = alloca i8**, align 8
  %rval = alloca i32, align 4
  store %struct.plugin_container* %plugin, %struct.plugin_container** %plugin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin.addr, metadata !927, metadata !DIExpression()), !dbg !928
  store i8** %settings, i8*** %settings.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %settings.addr, metadata !929, metadata !DIExpression()), !dbg !930
  store i8** %user_info, i8*** %user_info.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %user_info.addr, metadata !931, metadata !DIExpression()), !dbg !932
  store i8** %command_info, i8*** %command_info.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %command_info.addr, metadata !933, metadata !DIExpression()), !dbg !934
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !935, metadata !DIExpression()), !dbg !936
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !937, metadata !DIExpression()), !dbg !938
  store i8** %user_env, i8*** %user_env.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %user_env.addr, metadata !939, metadata !DIExpression()), !dbg !940
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !941, metadata !DIExpression()), !dbg !942
  %0 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !943
  %u = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %0, i32 0, i32 4, !dbg !944
  %generic = bitcast %union.anon* %u to %struct.generic_plugin**, !dbg !945
  %1 = load %struct.generic_plugin*, %struct.generic_plugin** %generic, align 8, !dbg !945
  %version = getelementptr inbounds %struct.generic_plugin, %struct.generic_plugin* %1, i32 0, i32 1, !dbg !946
  %2 = load i32, i32* %version, align 4, !dbg !946
  switch i32 %2, label %sw.default [
    i32 65536, label %sw.bb
  ], !dbg !947

sw.bb:                                            ; preds = %entry
  %3 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !948
  %u1 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %3, i32 0, i32 4, !dbg !950
  %io_1_0 = bitcast %union.anon* %u1 to %struct.io_plugin_1_0**, !dbg !951
  %4 = load %struct.io_plugin_1_0*, %struct.io_plugin_1_0** %io_1_0, align 8, !dbg !951
  %open = getelementptr inbounds %struct.io_plugin_1_0, %struct.io_plugin_1_0* %4, i32 0, i32 2, !dbg !952
  %5 = load i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i32, i8**, i8**)*, i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i32, i8**, i8**)** %open, align 8, !dbg !952
  %6 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !953
  %u2 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %6, i32 0, i32 4, !dbg !954
  %io_1_03 = bitcast %union.anon* %u2 to %struct.io_plugin_1_0**, !dbg !955
  %7 = load %struct.io_plugin_1_0*, %struct.io_plugin_1_0** %io_1_03, align 8, !dbg !955
  %version4 = getelementptr inbounds %struct.io_plugin_1_0, %struct.io_plugin_1_0* %7, i32 0, i32 1, !dbg !956
  %8 = load i32, i32* %version4, align 4, !dbg !956
  %9 = load i8**, i8*** %settings.addr, align 8, !dbg !957
  %10 = load i8**, i8*** %user_info.addr, align 8, !dbg !958
  %11 = load i32, i32* %argc.addr, align 4, !dbg !959
  %12 = load i8**, i8*** %argv.addr, align 8, !dbg !960
  %13 = load i8**, i8*** %user_env.addr, align 8, !dbg !961
  %call = call i32 %5(i32 %8, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)* @sudo_conversation, i32 (i32, i8*, ...)* @_sudo_printf, i8** %9, i8** %10, i32 %11, i8** %12, i8** %13), !dbg !948
  store i32 %call, i32* %rval, align 4, !dbg !962
  br label %sw.epilog, !dbg !963

sw.default:                                       ; preds = %entry
  %14 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !964
  %u5 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %14, i32 0, i32 4, !dbg !965
  %io = bitcast %union.anon* %u5 to %struct.io_plugin**, !dbg !966
  %15 = load %struct.io_plugin*, %struct.io_plugin** %io, align 8, !dbg !966
  %open6 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %15, i32 0, i32 2, !dbg !967
  %16 = load i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i8**, i32, i8**, i8**)*, i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i8**, i32, i8**, i8**)** %open6, align 8, !dbg !967
  %17 = load i8**, i8*** %settings.addr, align 8, !dbg !968
  %18 = load i8**, i8*** %user_info.addr, align 8, !dbg !969
  %19 = load i8**, i8*** %command_info.addr, align 8, !dbg !970
  %20 = load i32, i32* %argc.addr, align 4, !dbg !971
  %21 = load i8**, i8*** %argv.addr, align 8, !dbg !972
  %22 = load i8**, i8*** %user_env.addr, align 8, !dbg !973
  %call7 = call i32 %16(i32 65537, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)* @sudo_conversation, i32 (i32, i8*, ...)* @_sudo_printf, i8** %17, i8** %18, i8** %19, i32 %20, i8** %21, i8** %22), !dbg !964
  store i32 %call7, i32* %rval, align 4, !dbg !974
  br label %sw.epilog, !dbg !975

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %23 = load i32, i32* %rval, align 4, !dbg !976
  ret i32 %23, !dbg !977
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @iolog_show_version(%struct.plugin_container* %plugin, i32 %verbose) #0 !dbg !978 {
entry:
  %plugin.addr = alloca %struct.plugin_container*, align 8
  %verbose.addr = alloca i32, align 4
  store %struct.plugin_container* %plugin, %struct.plugin_container** %plugin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin.addr, metadata !979, metadata !DIExpression()), !dbg !980
  store i32 %verbose, i32* %verbose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verbose.addr, metadata !981, metadata !DIExpression()), !dbg !982
  %0 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !983
  %u = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %0, i32 0, i32 4, !dbg !984
  %io = bitcast %union.anon* %u to %struct.io_plugin**, !dbg !985
  %1 = load %struct.io_plugin*, %struct.io_plugin** %io, align 8, !dbg !985
  %show_version = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %1, i32 0, i32 4, !dbg !986
  %2 = load i32 (i32)*, i32 (i32)** %show_version, align 8, !dbg !986
  %3 = load i32, i32* %verbose.addr, align 4, !dbg !987
  %call = call i32 %2(i32 %3), !dbg !983
  ret i32 %call, !dbg !988
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @policy_validate(%struct.plugin_container* %plugin) #0 !dbg !989 {
entry:
  %retval = alloca i32, align 4
  %plugin.addr = alloca %struct.plugin_container*, align 8
  store %struct.plugin_container* %plugin, %struct.plugin_container** %plugin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin.addr, metadata !992, metadata !DIExpression()), !dbg !993
  %0 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !994
  %u = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %0, i32 0, i32 4, !dbg !996
  %policy = bitcast %union.anon* %u to %struct.policy_plugin**, !dbg !997
  %1 = load %struct.policy_plugin*, %struct.policy_plugin** %policy, align 8, !dbg !997
  %validate = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %1, i32 0, i32 7, !dbg !998
  %2 = load i32 ()*, i32 ()** %validate, align 8, !dbg !998
  %cmp = icmp eq i32 ()* %2, null, !dbg !999
  br i1 %cmp, label %if.then, label %if.end, !dbg !1000

if.then:                                          ; preds = %entry
  %3 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !1001
  %name = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %3, i32 0, i32 2, !dbg !1003
  %4 = load i8*, i8** %name, align 8, !dbg !1003
  call void (i8*, ...) @warningx(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.72, i64 0, i64 0), i8* %4), !dbg !1004
  store i32 0, i32* %retval, align 4, !dbg !1005
  br label %return, !dbg !1005

if.end:                                           ; preds = %entry
  %5 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !1006
  %u1 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %5, i32 0, i32 4, !dbg !1007
  %policy2 = bitcast %union.anon* %u1 to %struct.policy_plugin**, !dbg !1008
  %6 = load %struct.policy_plugin*, %struct.policy_plugin** %policy2, align 8, !dbg !1008
  %validate3 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %6, i32 0, i32 7, !dbg !1009
  %7 = load i32 ()*, i32 ()** %validate3, align 8, !dbg !1009
  %call = call i32 %7(), !dbg !1006
  store i32 %call, i32* %retval, align 4, !dbg !1010
  br label %return, !dbg !1010

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !1011
  ret i32 %8, !dbg !1011
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #6

; Function Attrs: noinline nounwind uwtable
define internal void @policy_invalidate(%struct.plugin_container* %plugin, i32 %remove) #0 !dbg !1012 {
entry:
  %plugin.addr = alloca %struct.plugin_container*, align 8
  %remove.addr = alloca i32, align 4
  store %struct.plugin_container* %plugin, %struct.plugin_container** %plugin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin.addr, metadata !1015, metadata !DIExpression()), !dbg !1016
  store i32 %remove, i32* %remove.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %remove.addr, metadata !1017, metadata !DIExpression()), !dbg !1018
  %0 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !1019
  %u = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %0, i32 0, i32 4, !dbg !1021
  %policy = bitcast %union.anon* %u to %struct.policy_plugin**, !dbg !1022
  %1 = load %struct.policy_plugin*, %struct.policy_plugin** %policy, align 8, !dbg !1022
  %invalidate = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %1, i32 0, i32 8, !dbg !1023
  %2 = load void (i32)*, void (i32)** %invalidate, align 8, !dbg !1023
  %cmp = icmp eq void (i32)* %2, null, !dbg !1024
  br i1 %cmp, label %if.then, label %if.end, !dbg !1025

if.then:                                          ; preds = %entry
  %3 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !1026
  %name = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %3, i32 0, i32 2, !dbg !1028
  %4 = load i8*, i8** %name, align 8, !dbg !1028
  call void (i32, i8*, ...) @errorx(i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.73, i64 0, i64 0), i8* %4) #12, !dbg !1029
  unreachable, !dbg !1029

if.end:                                           ; preds = %entry
  %5 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !1030
  %u1 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %5, i32 0, i32 4, !dbg !1031
  %policy2 = bitcast %union.anon* %u1 to %struct.policy_plugin**, !dbg !1032
  %6 = load %struct.policy_plugin*, %struct.policy_plugin** %policy2, align 8, !dbg !1032
  %invalidate3 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %6, i32 0, i32 8, !dbg !1033
  %7 = load void (i32)*, void (i32)** %invalidate3, align 8, !dbg !1033
  %8 = load i32, i32* %remove.addr, align 4, !dbg !1034
  call void %7(i32 %8), !dbg !1030
  ret void, !dbg !1035
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @policy_list(%struct.plugin_container* %plugin, i32 %argc, i8** %argv, i32 %verbose, i8* %list_user) #0 !dbg !1036 {
entry:
  %retval = alloca i32, align 4
  %plugin.addr = alloca %struct.plugin_container*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %verbose.addr = alloca i32, align 4
  %list_user.addr = alloca i8*, align 8
  store %struct.plugin_container* %plugin, %struct.plugin_container** %plugin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin.addr, metadata !1039, metadata !DIExpression()), !dbg !1040
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !1041, metadata !DIExpression()), !dbg !1042
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !1043, metadata !DIExpression()), !dbg !1044
  store i32 %verbose, i32* %verbose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verbose.addr, metadata !1045, metadata !DIExpression()), !dbg !1046
  store i8* %list_user, i8** %list_user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %list_user.addr, metadata !1047, metadata !DIExpression()), !dbg !1048
  %0 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !1049
  %u = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %0, i32 0, i32 4, !dbg !1051
  %policy = bitcast %union.anon* %u to %struct.policy_plugin**, !dbg !1052
  %1 = load %struct.policy_plugin*, %struct.policy_plugin** %policy, align 8, !dbg !1052
  %list = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %1, i32 0, i32 6, !dbg !1053
  %2 = load i32 (i32, i8**, i32, i8*)*, i32 (i32, i8**, i32, i8*)** %list, align 8, !dbg !1053
  %cmp = icmp eq i32 (i32, i8**, i32, i8*)* %2, null, !dbg !1054
  br i1 %cmp, label %if.then, label %if.end, !dbg !1055

if.then:                                          ; preds = %entry
  %3 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !1056
  %name = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %3, i32 0, i32 2, !dbg !1058
  %4 = load i8*, i8** %name, align 8, !dbg !1058
  call void (i8*, ...) @warningx(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.71, i64 0, i64 0), i8* %4), !dbg !1059
  store i32 0, i32* %retval, align 4, !dbg !1060
  br label %return, !dbg !1060

if.end:                                           ; preds = %entry
  %5 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !1061
  %u1 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %5, i32 0, i32 4, !dbg !1062
  %policy2 = bitcast %union.anon* %u1 to %struct.policy_plugin**, !dbg !1063
  %6 = load %struct.policy_plugin*, %struct.policy_plugin** %policy2, align 8, !dbg !1063
  %list3 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %6, i32 0, i32 6, !dbg !1064
  %7 = load i32 (i32, i8**, i32, i8*)*, i32 (i32, i8**, i32, i8*)** %list3, align 8, !dbg !1064
  %8 = load i32, i32* %argc.addr, align 4, !dbg !1065
  %9 = load i8**, i8*** %argv.addr, align 8, !dbg !1066
  %10 = load i32, i32* %verbose.addr, align 4, !dbg !1067
  %11 = load i8*, i8** %list_user.addr, align 8, !dbg !1068
  %call = call i32 %7(i32 %8, i8** %9, i32 %10, i8* %11), !dbg !1061
  store i32 %call, i32* %retval, align 4, !dbg !1069
  br label %return, !dbg !1069

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !1070
  ret i32 %12, !dbg !1070
}

declare dso_local i32 @ISSET(...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @policy_check(%struct.plugin_container* %plugin, i32 %argc, i8** %argv, i8** %env_add, i8*** %command_info, i8*** %argv_out, i8*** %user_env_out) #0 !dbg !1071 {
entry:
  %plugin.addr = alloca %struct.plugin_container*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %env_add.addr = alloca i8**, align 8
  %command_info.addr = alloca i8***, align 8
  %argv_out.addr = alloca i8***, align 8
  %user_env_out.addr = alloca i8***, align 8
  store %struct.plugin_container* %plugin, %struct.plugin_container** %plugin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin.addr, metadata !1074, metadata !DIExpression()), !dbg !1075
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !1076, metadata !DIExpression()), !dbg !1077
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !1078, metadata !DIExpression()), !dbg !1079
  store i8** %env_add, i8*** %env_add.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %env_add.addr, metadata !1080, metadata !DIExpression()), !dbg !1081
  store i8*** %command_info, i8**** %command_info.addr, align 8
  call void @llvm.dbg.declare(metadata i8**** %command_info.addr, metadata !1082, metadata !DIExpression()), !dbg !1083
  store i8*** %argv_out, i8**** %argv_out.addr, align 8
  call void @llvm.dbg.declare(metadata i8**** %argv_out.addr, metadata !1084, metadata !DIExpression()), !dbg !1085
  store i8*** %user_env_out, i8**** %user_env_out.addr, align 8
  call void @llvm.dbg.declare(metadata i8**** %user_env_out.addr, metadata !1086, metadata !DIExpression()), !dbg !1087
  %0 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !1088
  %u = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %0, i32 0, i32 4, !dbg !1089
  %policy = bitcast %union.anon* %u to %struct.policy_plugin**, !dbg !1090
  %1 = load %struct.policy_plugin*, %struct.policy_plugin** %policy, align 8, !dbg !1090
  %check_policy = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %1, i32 0, i32 5, !dbg !1091
  %2 = load i32 (i32, i8**, i8**, i8***, i8***, i8***)*, i32 (i32, i8**, i8**, i8***, i8***, i8***)** %check_policy, align 8, !dbg !1091
  %3 = load i32, i32* %argc.addr, align 4, !dbg !1092
  %4 = load i8**, i8*** %argv.addr, align 8, !dbg !1093
  %5 = load i8**, i8*** %env_add.addr, align 8, !dbg !1094
  %6 = load i8***, i8**** %command_info.addr, align 8, !dbg !1095
  %7 = load i8***, i8**** %argv_out.addr, align 8, !dbg !1096
  %8 = load i8***, i8**** %user_env_out.addr, align 8, !dbg !1097
  %call = call i32 %2(i32 %3, i8** %4, i8** %5, i8*** %6, i8*** %7, i8*** %8), !dbg !1088
  ret i32 %call, !dbg !1098
}

declare dso_local void @tq_remove(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @command_info_to_details(i8** %info, %struct.command_details* %details) #0 !dbg !1099 {
entry:
  %info.addr = alloca i8**, align 8
  %details.addr = alloca %struct.command_details*, align 8
  %i = alloca i32, align 4
  %lval = alloca i64, align 8
  %ulval = alloca i64, align 8
  %cp = alloca i8*, align 8
  %ep = alloca i8*, align 8
  %j = alloca i32, align 4
  store i8** %info, i8*** %info.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %info.addr, metadata !1103, metadata !DIExpression()), !dbg !1104
  store %struct.command_details* %details, %struct.command_details** %details.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %details.addr, metadata !1105, metadata !DIExpression()), !dbg !1106
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1107, metadata !DIExpression()), !dbg !1108
  call void @llvm.dbg.declare(metadata i64* %lval, metadata !1109, metadata !DIExpression()), !dbg !1111
  call void @llvm.dbg.declare(metadata i64* %ulval, metadata !1112, metadata !DIExpression()), !dbg !1113
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !1114, metadata !DIExpression()), !dbg !1115
  call void @llvm.dbg.declare(metadata i8** %ep, metadata !1116, metadata !DIExpression()), !dbg !1117
  %0 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1118
  %1 = bitcast %struct.command_details* %0 to i8*, !dbg !1119
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 96, i1 false), !dbg !1119
  %2 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1120
  %closefrom = getelementptr inbounds %struct.command_details, %struct.command_details* %2, i32 0, i32 8, !dbg !1121
  store i32 -1, i32* %closefrom, align 8, !dbg !1122
  store i32 0, i32* %i, align 4, !dbg !1123
  br label %for.cond, !dbg !1125

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i8**, i8*** %info.addr, align 8, !dbg !1126
  %4 = load i32, i32* %i, align 4, !dbg !1128
  %idxprom = sext i32 %4 to i64, !dbg !1126
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !1126
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !1126
  %cmp = icmp ne i8* %5, null, !dbg !1129
  br i1 %cmp, label %for.body, label %for.end571, !dbg !1130

for.body:                                         ; preds = %for.cond
  %6 = load i8**, i8*** %info.addr, align 8, !dbg !1131
  %7 = load i32, i32* %i, align 4, !dbg !1133
  %idxprom1 = sext i32 %7 to i64, !dbg !1131
  %arrayidx2 = getelementptr inbounds i8*, i8** %6, i64 %idxprom1, !dbg !1131
  %8 = load i8*, i8** %arrayidx2, align 8, !dbg !1131
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.51, i64 0, i64 0), i8* %8), !dbg !1134
  %9 = load i8**, i8*** %info.addr, align 8, !dbg !1135
  %10 = load i32, i32* %i, align 4, !dbg !1136
  %idxprom3 = sext i32 %10 to i64, !dbg !1135
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %idxprom3, !dbg !1135
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !1135
  %arrayidx5 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !1135
  %12 = load i8, i8* %arrayidx5, align 1, !dbg !1135
  %conv = zext i8 %12 to i32, !dbg !1135
  switch i32 %conv, label %sw.epilog [
    i32 99, label %sw.bb
    i32 108, label %sw.bb95
    i32 110, label %sw.bb113
    i32 112, label %sw.bb177
    i32 114, label %sw.bb196
    i32 115, label %sw.bb414
    i32 116, label %sw.bb467
    i32 117, label %sw.bb514
  ], !dbg !1137

sw.bb:                                            ; preds = %for.body
  %13 = load i8**, i8*** %info.addr, align 8, !dbg !1138
  %14 = load i32, i32* %i, align 4, !dbg !1138
  %idxprom6 = sext i32 %14 to i64, !dbg !1138
  %arrayidx7 = getelementptr inbounds i8*, i8** %13, i64 %idxprom6, !dbg !1138
  %15 = load i8*, i8** %arrayidx7, align 8, !dbg !1138
  %call = call i32 @strncmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i64 0, i64 0), i8* %15, i64 7) #14, !dbg !1138
  %cmp8 = icmp eq i32 %call, 0, !dbg !1138
  br i1 %cmp8, label %land.lhs.true, label %if.end, !dbg !1138

land.lhs.true:                                    ; preds = %sw.bb
  %16 = load i8**, i8*** %info.addr, align 8, !dbg !1138
  %17 = load i32, i32* %i, align 4, !dbg !1138
  %idxprom10 = sext i32 %17 to i64, !dbg !1138
  %arrayidx11 = getelementptr inbounds i8*, i8** %16, i64 %idxprom10, !dbg !1138
  %18 = load i8*, i8** %arrayidx11, align 8, !dbg !1138
  %arrayidx12 = getelementptr inbounds i8, i8* %18, i64 7, !dbg !1138
  %19 = load i8, i8* %arrayidx12, align 1, !dbg !1138
  %conv13 = zext i8 %19 to i32, !dbg !1138
  %tobool = icmp ne i32 %conv13, 0, !dbg !1138
  br i1 %tobool, label %if.then, label %if.end, !dbg !1141

if.then:                                          ; preds = %land.lhs.true
  %20 = load i8**, i8*** %info.addr, align 8, !dbg !1142
  %21 = load i32, i32* %i, align 4, !dbg !1142
  %idxprom14 = sext i32 %21 to i64, !dbg !1142
  %arrayidx15 = getelementptr inbounds i8*, i8** %20, i64 %idxprom14, !dbg !1142
  %22 = load i8*, i8** %arrayidx15, align 8, !dbg !1142
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 8, !dbg !1142
  %add.ptr16 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !1142
  %23 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1142
  %chroot = getelementptr inbounds %struct.command_details, %struct.command_details* %23, i32 0, i32 14, !dbg !1142
  store i8* %add.ptr16, i8** %chroot, align 8, !dbg !1142
  br label %sw.epilog, !dbg !1142

if.end:                                           ; preds = %land.lhs.true, %sw.bb
  %24 = load i8**, i8*** %info.addr, align 8, !dbg !1144
  %25 = load i32, i32* %i, align 4, !dbg !1144
  %idxprom17 = sext i32 %25 to i64, !dbg !1144
  %arrayidx18 = getelementptr inbounds i8*, i8** %24, i64 %idxprom17, !dbg !1144
  %26 = load i8*, i8** %arrayidx18, align 8, !dbg !1144
  %call19 = call i32 @strncmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i64 0, i64 0), i8* %26, i64 8) #14, !dbg !1144
  %cmp20 = icmp eq i32 %call19, 0, !dbg !1144
  br i1 %cmp20, label %land.lhs.true22, label %if.end33, !dbg !1144

land.lhs.true22:                                  ; preds = %if.end
  %27 = load i8**, i8*** %info.addr, align 8, !dbg !1144
  %28 = load i32, i32* %i, align 4, !dbg !1144
  %idxprom23 = sext i32 %28 to i64, !dbg !1144
  %arrayidx24 = getelementptr inbounds i8*, i8** %27, i64 %idxprom23, !dbg !1144
  %29 = load i8*, i8** %arrayidx24, align 8, !dbg !1144
  %arrayidx25 = getelementptr inbounds i8, i8* %29, i64 8, !dbg !1144
  %30 = load i8, i8* %arrayidx25, align 1, !dbg !1144
  %conv26 = zext i8 %30 to i32, !dbg !1144
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !1144
  br i1 %tobool27, label %if.then28, label %if.end33, !dbg !1146

if.then28:                                        ; preds = %land.lhs.true22
  %31 = load i8**, i8*** %info.addr, align 8, !dbg !1147
  %32 = load i32, i32* %i, align 4, !dbg !1147
  %idxprom29 = sext i32 %32 to i64, !dbg !1147
  %arrayidx30 = getelementptr inbounds i8*, i8** %31, i64 %idxprom29, !dbg !1147
  %33 = load i8*, i8** %arrayidx30, align 8, !dbg !1147
  %add.ptr31 = getelementptr inbounds i8, i8* %33, i64 9, !dbg !1147
  %add.ptr32 = getelementptr inbounds i8, i8* %add.ptr31, i64 -1, !dbg !1147
  %34 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1147
  %command = getelementptr inbounds %struct.command_details, %struct.command_details* %34, i32 0, i32 11, !dbg !1147
  store i8* %add.ptr32, i8** %command, align 8, !dbg !1147
  br label %sw.epilog, !dbg !1147

if.end33:                                         ; preds = %land.lhs.true22, %if.end
  %35 = load i8**, i8*** %info.addr, align 8, !dbg !1149
  %36 = load i32, i32* %i, align 4, !dbg !1149
  %idxprom34 = sext i32 %36 to i64, !dbg !1149
  %arrayidx35 = getelementptr inbounds i8*, i8** %35, i64 %idxprom34, !dbg !1149
  %37 = load i8*, i8** %arrayidx35, align 8, !dbg !1149
  %call36 = call i32 @strncmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i64 0, i64 0), i8* %37, i64 4) #14, !dbg !1149
  %cmp37 = icmp eq i32 %call36, 0, !dbg !1149
  br i1 %cmp37, label %land.lhs.true39, label %if.end50, !dbg !1149

land.lhs.true39:                                  ; preds = %if.end33
  %38 = load i8**, i8*** %info.addr, align 8, !dbg !1149
  %39 = load i32, i32* %i, align 4, !dbg !1149
  %idxprom40 = sext i32 %39 to i64, !dbg !1149
  %arrayidx41 = getelementptr inbounds i8*, i8** %38, i64 %idxprom40, !dbg !1149
  %40 = load i8*, i8** %arrayidx41, align 8, !dbg !1149
  %arrayidx42 = getelementptr inbounds i8, i8* %40, i64 4, !dbg !1149
  %41 = load i8, i8* %arrayidx42, align 1, !dbg !1149
  %conv43 = zext i8 %41 to i32, !dbg !1149
  %tobool44 = icmp ne i32 %conv43, 0, !dbg !1149
  br i1 %tobool44, label %if.then45, label %if.end50, !dbg !1151

if.then45:                                        ; preds = %land.lhs.true39
  %42 = load i8**, i8*** %info.addr, align 8, !dbg !1152
  %43 = load i32, i32* %i, align 4, !dbg !1152
  %idxprom46 = sext i32 %43 to i64, !dbg !1152
  %arrayidx47 = getelementptr inbounds i8*, i8** %42, i64 %idxprom46, !dbg !1152
  %44 = load i8*, i8** %arrayidx47, align 8, !dbg !1152
  %add.ptr48 = getelementptr inbounds i8, i8* %44, i64 5, !dbg !1152
  %add.ptr49 = getelementptr inbounds i8, i8* %add.ptr48, i64 -1, !dbg !1152
  %45 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1152
  %cwd = getelementptr inbounds %struct.command_details, %struct.command_details* %45, i32 0, i32 12, !dbg !1152
  store i8* %add.ptr49, i8** %cwd, align 8, !dbg !1152
  br label %sw.epilog, !dbg !1152

if.end50:                                         ; preds = %land.lhs.true39, %if.end33
  %46 = load i8**, i8*** %info.addr, align 8, !dbg !1154
  %47 = load i32, i32* %i, align 4, !dbg !1156
  %idxprom51 = sext i32 %47 to i64, !dbg !1154
  %arrayidx52 = getelementptr inbounds i8*, i8** %46, i64 %idxprom51, !dbg !1154
  %48 = load i8*, i8** %arrayidx52, align 8, !dbg !1154
  %call53 = call i32 @strncmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0), i8* %48, i64 10) #14, !dbg !1157
  %cmp54 = icmp eq i32 %call53, 0, !dbg !1158
  br i1 %cmp54, label %if.then56, label %if.end94, !dbg !1159

if.then56:                                        ; preds = %if.end50
  %49 = load i8**, i8*** %info.addr, align 8, !dbg !1160
  %50 = load i32, i32* %i, align 4, !dbg !1162
  %idxprom57 = sext i32 %50 to i64, !dbg !1160
  %arrayidx58 = getelementptr inbounds i8*, i8** %49, i64 %idxprom57, !dbg !1160
  %51 = load i8*, i8** %arrayidx58, align 8, !dbg !1160
  %add.ptr59 = getelementptr inbounds i8, i8* %51, i64 11, !dbg !1163
  %add.ptr60 = getelementptr inbounds i8, i8* %add.ptr59, i64 -1, !dbg !1164
  store i8* %add.ptr60, i8** %cp, align 8, !dbg !1165
  %52 = load i8*, i8** %cp, align 8, !dbg !1166
  %53 = load i8, i8* %52, align 1, !dbg !1168
  %conv61 = zext i8 %53 to i32, !dbg !1168
  %cmp62 = icmp eq i32 %conv61, 0, !dbg !1169
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !1170

if.then64:                                        ; preds = %if.then56
  br label %sw.epilog, !dbg !1171

if.end65:                                         ; preds = %if.then56
  %call66 = call i32* @__errno_location() #15, !dbg !1172
  store i32 0, i32* %call66, align 4, !dbg !1173
  %54 = load i8*, i8** %cp, align 8, !dbg !1174
  %call67 = call i64 @strtol(i8* %54, i8** %ep, i32 0) #11, !dbg !1175
  store i64 %call67, i64* %lval, align 8, !dbg !1176
  %55 = load i8*, i8** %cp, align 8, !dbg !1177
  %56 = load i8, i8* %55, align 1, !dbg !1179
  %conv68 = zext i8 %56 to i32, !dbg !1179
  %cmp69 = icmp ne i32 %conv68, 0, !dbg !1180
  br i1 %cmp69, label %land.lhs.true71, label %if.end93, !dbg !1181

land.lhs.true71:                                  ; preds = %if.end65
  %57 = load i8*, i8** %ep, align 8, !dbg !1182
  %58 = load i8, i8* %57, align 1, !dbg !1183
  %conv72 = zext i8 %58 to i32, !dbg !1183
  %cmp73 = icmp eq i32 %conv72, 0, !dbg !1184
  br i1 %cmp73, label %land.lhs.true75, label %if.end93, !dbg !1185

land.lhs.true75:                                  ; preds = %land.lhs.true71
  %call76 = call i32* @__errno_location() #15, !dbg !1186
  %59 = load i32, i32* %call76, align 4, !dbg !1186
  %cmp77 = icmp eq i32 %59, 34, !dbg !1187
  br i1 %cmp77, label %land.lhs.true79, label %land.lhs.true84, !dbg !1188

land.lhs.true79:                                  ; preds = %land.lhs.true75
  %60 = load i64, i64* %lval, align 8, !dbg !1189
  %cmp80 = icmp eq i64 %60, 9223372036854775807, !dbg !1190
  br i1 %cmp80, label %if.end93, label %lor.lhs.false, !dbg !1191

lor.lhs.false:                                    ; preds = %land.lhs.true79
  %61 = load i64, i64* %lval, align 8, !dbg !1192
  %cmp82 = icmp eq i64 %61, -9223372036854775808, !dbg !1193
  br i1 %cmp82, label %if.end93, label %land.lhs.true84, !dbg !1194

land.lhs.true84:                                  ; preds = %lor.lhs.false, %land.lhs.true75
  %62 = load i64, i64* %lval, align 8, !dbg !1195
  %cmp85 = icmp slt i64 %62, 2147483647, !dbg !1196
  br i1 %cmp85, label %land.lhs.true87, label %if.end93, !dbg !1197

land.lhs.true87:                                  ; preds = %land.lhs.true84
  %63 = load i64, i64* %lval, align 8, !dbg !1198
  %cmp88 = icmp sgt i64 %63, -2147483648, !dbg !1199
  br i1 %cmp88, label %if.then90, label %if.end93, !dbg !1200

if.then90:                                        ; preds = %land.lhs.true87
  %64 = load i64, i64* %lval, align 8, !dbg !1201
  %conv91 = trunc i64 %64 to i32, !dbg !1203
  %65 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1204
  %closefrom92 = getelementptr inbounds %struct.command_details, %struct.command_details* %65, i32 0, i32 8, !dbg !1205
  store i32 %conv91, i32* %closefrom92, align 8, !dbg !1206
  br label %if.end93, !dbg !1207

if.end93:                                         ; preds = %if.then90, %land.lhs.true87, %land.lhs.true84, %lor.lhs.false, %land.lhs.true79, %land.lhs.true71, %if.end65
  br label %sw.epilog, !dbg !1208

if.end94:                                         ; preds = %if.end50
  br label %sw.epilog, !dbg !1209

sw.bb95:                                          ; preds = %for.body
  %66 = load i8**, i8*** %info.addr, align 8, !dbg !1210
  %67 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom96 = sext i32 %67 to i64, !dbg !1210
  %arrayidx97 = getelementptr inbounds i8*, i8** %66, i64 %idxprom96, !dbg !1210
  %68 = load i8*, i8** %arrayidx97, align 8, !dbg !1210
  %call98 = call i32 @strncmp(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56, i64 0, i64 0), i8* %68, i64 12) #14, !dbg !1210
  %cmp99 = icmp eq i32 %call98, 0, !dbg !1210
  br i1 %cmp99, label %land.lhs.true101, label %if.end112, !dbg !1210

land.lhs.true101:                                 ; preds = %sw.bb95
  %69 = load i8**, i8*** %info.addr, align 8, !dbg !1210
  %70 = load i32, i32* %i, align 4, !dbg !1210
  %idxprom102 = sext i32 %70 to i64, !dbg !1210
  %arrayidx103 = getelementptr inbounds i8*, i8** %69, i64 %idxprom102, !dbg !1210
  %71 = load i8*, i8** %arrayidx103, align 8, !dbg !1210
  %arrayidx104 = getelementptr inbounds i8, i8* %71, i64 12, !dbg !1210
  %72 = load i8, i8* %arrayidx104, align 1, !dbg !1210
  %conv105 = zext i8 %72 to i32, !dbg !1210
  %tobool106 = icmp ne i32 %conv105, 0, !dbg !1210
  br i1 %tobool106, label %if.then107, label %if.end112, !dbg !1212

if.then107:                                       ; preds = %land.lhs.true101
  %73 = load i8**, i8*** %info.addr, align 8, !dbg !1213
  %74 = load i32, i32* %i, align 4, !dbg !1213
  %idxprom108 = sext i32 %74 to i64, !dbg !1213
  %arrayidx109 = getelementptr inbounds i8*, i8** %73, i64 %idxprom108, !dbg !1213
  %75 = load i8*, i8** %arrayidx109, align 8, !dbg !1213
  %add.ptr110 = getelementptr inbounds i8, i8* %75, i64 13, !dbg !1213
  %add.ptr111 = getelementptr inbounds i8, i8* %add.ptr110, i64 -1, !dbg !1213
  %76 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1213
  %login_class = getelementptr inbounds %struct.command_details, %struct.command_details* %76, i32 0, i32 13, !dbg !1213
  store i8* %add.ptr111, i8** %login_class, align 8, !dbg !1213
  br label %sw.epilog, !dbg !1213

if.end112:                                        ; preds = %land.lhs.true101, %sw.bb95
  br label %sw.epilog, !dbg !1215

sw.bb113:                                         ; preds = %for.body
  %77 = load i8**, i8*** %info.addr, align 8, !dbg !1216
  %78 = load i32, i32* %i, align 4, !dbg !1218
  %idxprom114 = sext i32 %78 to i64, !dbg !1216
  %arrayidx115 = getelementptr inbounds i8*, i8** %77, i64 %idxprom114, !dbg !1216
  %79 = load i8*, i8** %arrayidx115, align 8, !dbg !1216
  %call116 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0), i8* %79, i64 5) #14, !dbg !1219
  %cmp117 = icmp eq i32 %call116, 0, !dbg !1220
  br i1 %cmp117, label %if.then119, label %if.end158, !dbg !1221

if.then119:                                       ; preds = %sw.bb113
  %80 = load i8**, i8*** %info.addr, align 8, !dbg !1222
  %81 = load i32, i32* %i, align 4, !dbg !1224
  %idxprom120 = sext i32 %81 to i64, !dbg !1222
  %arrayidx121 = getelementptr inbounds i8*, i8** %80, i64 %idxprom120, !dbg !1222
  %82 = load i8*, i8** %arrayidx121, align 8, !dbg !1222
  %add.ptr122 = getelementptr inbounds i8, i8* %82, i64 6, !dbg !1225
  %add.ptr123 = getelementptr inbounds i8, i8* %add.ptr122, i64 -1, !dbg !1226
  store i8* %add.ptr123, i8** %cp, align 8, !dbg !1227
  %83 = load i8*, i8** %cp, align 8, !dbg !1228
  %84 = load i8, i8* %83, align 1, !dbg !1230
  %conv124 = zext i8 %84 to i32, !dbg !1230
  %cmp125 = icmp eq i32 %conv124, 0, !dbg !1231
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !1232

if.then127:                                       ; preds = %if.then119
  br label %sw.epilog, !dbg !1233

if.end128:                                        ; preds = %if.then119
  %call129 = call i32* @__errno_location() #15, !dbg !1234
  store i32 0, i32* %call129, align 4, !dbg !1235
  %85 = load i8*, i8** %cp, align 8, !dbg !1236
  %call130 = call i64 @strtol(i8* %85, i8** %ep, i32 0) #11, !dbg !1237
  store i64 %call130, i64* %lval, align 8, !dbg !1238
  %86 = load i8*, i8** %cp, align 8, !dbg !1239
  %87 = load i8, i8* %86, align 1, !dbg !1241
  %conv131 = zext i8 %87 to i32, !dbg !1241
  %cmp132 = icmp ne i32 %conv131, 0, !dbg !1242
  br i1 %cmp132, label %land.lhs.true134, label %if.end157, !dbg !1243

land.lhs.true134:                                 ; preds = %if.end128
  %88 = load i8*, i8** %ep, align 8, !dbg !1244
  %89 = load i8, i8* %88, align 1, !dbg !1245
  %conv135 = zext i8 %89 to i32, !dbg !1245
  %cmp136 = icmp eq i32 %conv135, 0, !dbg !1246
  br i1 %cmp136, label %land.lhs.true138, label %if.end157, !dbg !1247

land.lhs.true138:                                 ; preds = %land.lhs.true134
  %call139 = call i32* @__errno_location() #15, !dbg !1248
  %90 = load i32, i32* %call139, align 4, !dbg !1248
  %cmp140 = icmp eq i32 %90, 34, !dbg !1249
  br i1 %cmp140, label %land.lhs.true142, label %land.lhs.true148, !dbg !1250

land.lhs.true142:                                 ; preds = %land.lhs.true138
  %91 = load i64, i64* %lval, align 8, !dbg !1251
  %cmp143 = icmp eq i64 %91, 9223372036854775807, !dbg !1252
  br i1 %cmp143, label %if.end157, label %lor.lhs.false145, !dbg !1253

lor.lhs.false145:                                 ; preds = %land.lhs.true142
  %92 = load i64, i64* %lval, align 8, !dbg !1254
  %cmp146 = icmp eq i64 %92, -9223372036854775808, !dbg !1255
  br i1 %cmp146, label %if.end157, label %land.lhs.true148, !dbg !1256

land.lhs.true148:                                 ; preds = %lor.lhs.false145, %land.lhs.true138
  %93 = load i64, i64* %lval, align 8, !dbg !1257
  %cmp149 = icmp slt i64 %93, 2147483647, !dbg !1258
  br i1 %cmp149, label %land.lhs.true151, label %if.end157, !dbg !1259

land.lhs.true151:                                 ; preds = %land.lhs.true148
  %94 = load i64, i64* %lval, align 8, !dbg !1260
  %cmp152 = icmp sgt i64 %94, -2147483648, !dbg !1261
  br i1 %cmp152, label %if.then154, label %if.end157, !dbg !1262

if.then154:                                       ; preds = %land.lhs.true151
  %95 = load i64, i64* %lval, align 8, !dbg !1263
  %conv155 = trunc i64 %95 to i32, !dbg !1265
  %96 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1266
  %priority = getelementptr inbounds %struct.command_details, %struct.command_details* %96, i32 0, i32 5, !dbg !1267
  store i32 %conv155, i32* %priority, align 4, !dbg !1268
  %97 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1269
  %flags = getelementptr inbounds %struct.command_details, %struct.command_details* %97, i32 0, i32 9, !dbg !1270
  %98 = load i32, i32* %flags, align 4, !dbg !1270
  %call156 = call i32 bitcast (i32 (...)* @SET to i32 (i32, i32)*)(i32 %98, i32 64), !dbg !1271
  br label %if.end157, !dbg !1272

if.end157:                                        ; preds = %if.then154, %land.lhs.true151, %land.lhs.true148, %lor.lhs.false145, %land.lhs.true142, %land.lhs.true134, %if.end128
  br label %sw.epilog, !dbg !1273

if.end158:                                        ; preds = %sw.bb113
  %99 = load i8**, i8*** %info.addr, align 8, !dbg !1274
  %100 = load i32, i32* %i, align 4, !dbg !1276
  %idxprom159 = sext i32 %100 to i64, !dbg !1274
  %arrayidx160 = getelementptr inbounds i8*, i8** %99, i64 %idxprom159, !dbg !1274
  %101 = load i8*, i8** %arrayidx160, align 8, !dbg !1274
  %call161 = call i32 @strncmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i64 0, i64 0), i8* %101, i64 7) #14, !dbg !1277
  %cmp162 = icmp eq i32 %call161, 0, !dbg !1278
  br i1 %cmp162, label %if.then164, label %if.end176, !dbg !1279

if.then164:                                       ; preds = %if.end158
  %102 = load i8**, i8*** %info.addr, align 8, !dbg !1280
  %103 = load i32, i32* %i, align 4, !dbg !1283
  %idxprom165 = sext i32 %103 to i64, !dbg !1280
  %arrayidx166 = getelementptr inbounds i8*, i8** %102, i64 %idxprom165, !dbg !1280
  %104 = load i8*, i8** %arrayidx166, align 8, !dbg !1280
  %add.ptr167 = getelementptr inbounds i8, i8* %104, i64 8, !dbg !1284
  %add.ptr168 = getelementptr inbounds i8, i8* %add.ptr167, i64 -1, !dbg !1285
  %call169 = call i32 @atobool(i8* %add.ptr168), !dbg !1286
  %cmp170 = icmp eq i32 %call169, 1, !dbg !1287
  br i1 %cmp170, label %if.then172, label %if.end175, !dbg !1288

if.then172:                                       ; preds = %if.then164
  %105 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1289
  %flags173 = getelementptr inbounds %struct.command_details, %struct.command_details* %105, i32 0, i32 9, !dbg !1290
  %106 = load i32, i32* %flags173, align 4, !dbg !1290
  %call174 = call i32 bitcast (i32 (...)* @SET to i32 (i32, i32)*)(i32 %106, i32 32), !dbg !1291
  br label %if.end175, !dbg !1291

if.end175:                                        ; preds = %if.then172, %if.then164
  br label %sw.epilog, !dbg !1292

if.end176:                                        ; preds = %if.end158
  br label %sw.epilog, !dbg !1293

sw.bb177:                                         ; preds = %for.body
  %107 = load i8**, i8*** %info.addr, align 8, !dbg !1294
  %108 = load i32, i32* %i, align 4, !dbg !1296
  %idxprom178 = sext i32 %108 to i64, !dbg !1294
  %arrayidx179 = getelementptr inbounds i8*, i8** %107, i64 %idxprom178, !dbg !1294
  %109 = load i8*, i8** %arrayidx179, align 8, !dbg !1294
  %call180 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i64 0, i64 0), i8* %109, i64 16) #14, !dbg !1297
  %cmp181 = icmp eq i32 %call180, 0, !dbg !1298
  br i1 %cmp181, label %if.then183, label %if.end195, !dbg !1299

if.then183:                                       ; preds = %sw.bb177
  %110 = load i8**, i8*** %info.addr, align 8, !dbg !1300
  %111 = load i32, i32* %i, align 4, !dbg !1303
  %idxprom184 = sext i32 %111 to i64, !dbg !1300
  %arrayidx185 = getelementptr inbounds i8*, i8** %110, i64 %idxprom184, !dbg !1300
  %112 = load i8*, i8** %arrayidx185, align 8, !dbg !1300
  %add.ptr186 = getelementptr inbounds i8, i8* %112, i64 17, !dbg !1304
  %add.ptr187 = getelementptr inbounds i8, i8* %add.ptr186, i64 -1, !dbg !1305
  %call188 = call i32 @atobool(i8* %add.ptr187), !dbg !1306
  %cmp189 = icmp eq i32 %call188, 1, !dbg !1307
  br i1 %cmp189, label %if.then191, label %if.end194, !dbg !1308

if.then191:                                       ; preds = %if.then183
  %113 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1309
  %flags192 = getelementptr inbounds %struct.command_details, %struct.command_details* %113, i32 0, i32 9, !dbg !1310
  %114 = load i32, i32* %flags192, align 4, !dbg !1310
  %call193 = call i32 bitcast (i32 (...)* @SET to i32 (i32, i32)*)(i32 %114, i32 16), !dbg !1311
  br label %if.end194, !dbg !1311

if.end194:                                        ; preds = %if.then191, %if.then183
  br label %sw.epilog, !dbg !1312

if.end195:                                        ; preds = %sw.bb177
  br label %sw.epilog, !dbg !1313

sw.bb196:                                         ; preds = %for.body
  %115 = load i8**, i8*** %info.addr, align 8, !dbg !1314
  %116 = load i32, i32* %i, align 4, !dbg !1316
  %idxprom197 = sext i32 %116 to i64, !dbg !1314
  %arrayidx198 = getelementptr inbounds i8*, i8** %115, i64 %idxprom197, !dbg !1314
  %117 = load i8*, i8** %arrayidx198, align 8, !dbg !1314
  %call199 = call i32 @strncmp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0), i8* %117, i64 11) #14, !dbg !1317
  %cmp200 = icmp eq i32 %call199, 0, !dbg !1318
  br i1 %cmp200, label %if.then202, label %if.end233, !dbg !1319

if.then202:                                       ; preds = %sw.bb196
  %118 = load i8**, i8*** %info.addr, align 8, !dbg !1320
  %119 = load i32, i32* %i, align 4, !dbg !1322
  %idxprom203 = sext i32 %119 to i64, !dbg !1320
  %arrayidx204 = getelementptr inbounds i8*, i8** %118, i64 %idxprom203, !dbg !1320
  %120 = load i8*, i8** %arrayidx204, align 8, !dbg !1320
  %add.ptr205 = getelementptr inbounds i8, i8* %120, i64 12, !dbg !1323
  %add.ptr206 = getelementptr inbounds i8, i8* %add.ptr205, i64 -1, !dbg !1324
  store i8* %add.ptr206, i8** %cp, align 8, !dbg !1325
  %121 = load i8*, i8** %cp, align 8, !dbg !1326
  %122 = load i8, i8* %121, align 1, !dbg !1328
  %conv207 = zext i8 %122 to i32, !dbg !1328
  %cmp208 = icmp eq i32 %conv207, 0, !dbg !1329
  br i1 %cmp208, label %if.then210, label %if.end211, !dbg !1330

if.then210:                                       ; preds = %if.then202
  br label %sw.epilog, !dbg !1331

if.end211:                                        ; preds = %if.then202
  %call212 = call i32* @__errno_location() #15, !dbg !1332
  store i32 0, i32* %call212, align 4, !dbg !1333
  %123 = load i8*, i8** %cp, align 8, !dbg !1334
  %call213 = call i64 @strtoul(i8* %123, i8** %ep, i32 0) #11, !dbg !1335
  store i64 %call213, i64* %ulval, align 8, !dbg !1336
  %124 = load i8*, i8** %cp, align 8, !dbg !1337
  %125 = load i8, i8* %124, align 1, !dbg !1339
  %conv214 = zext i8 %125 to i32, !dbg !1339
  %cmp215 = icmp ne i32 %conv214, 0, !dbg !1340
  br i1 %cmp215, label %land.lhs.true217, label %if.end232, !dbg !1341

land.lhs.true217:                                 ; preds = %if.end211
  %126 = load i8*, i8** %ep, align 8, !dbg !1342
  %127 = load i8, i8* %126, align 1, !dbg !1343
  %conv218 = zext i8 %127 to i32, !dbg !1343
  %cmp219 = icmp eq i32 %conv218, 0, !dbg !1344
  br i1 %cmp219, label %land.lhs.true221, label %if.end232, !dbg !1345

land.lhs.true221:                                 ; preds = %land.lhs.true217
  %call222 = call i32* @__errno_location() #15, !dbg !1346
  %128 = load i32, i32* %call222, align 4, !dbg !1346
  %cmp223 = icmp ne i32 %128, 34, !dbg !1347
  br i1 %cmp223, label %if.then228, label %lor.lhs.false225, !dbg !1348

lor.lhs.false225:                                 ; preds = %land.lhs.true221
  %129 = load i64, i64* %ulval, align 8, !dbg !1349
  %cmp226 = icmp ne i64 %129, -1, !dbg !1350
  br i1 %cmp226, label %if.then228, label %if.end232, !dbg !1351

if.then228:                                       ; preds = %lor.lhs.false225, %land.lhs.true221
  %130 = load i64, i64* %ulval, align 8, !dbg !1352
  %conv229 = trunc i64 %130 to i32, !dbg !1354
  %131 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1355
  %egid = getelementptr inbounds %struct.command_details, %struct.command_details* %131, i32 0, i32 3, !dbg !1356
  store i32 %conv229, i32* %egid, align 4, !dbg !1357
  %132 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1358
  %flags230 = getelementptr inbounds %struct.command_details, %struct.command_details* %132, i32 0, i32 9, !dbg !1359
  %133 = load i32, i32* %flags230, align 4, !dbg !1359
  %call231 = call i32 bitcast (i32 (...)* @SET to i32 (i32, i32)*)(i32 %133, i32 8), !dbg !1360
  br label %if.end232, !dbg !1361

if.end232:                                        ; preds = %if.then228, %lor.lhs.false225, %land.lhs.true217, %if.end211
  br label %sw.epilog, !dbg !1362

if.end233:                                        ; preds = %sw.bb196
  %134 = load i8**, i8*** %info.addr, align 8, !dbg !1363
  %135 = load i32, i32* %i, align 4, !dbg !1365
  %idxprom234 = sext i32 %135 to i64, !dbg !1363
  %arrayidx235 = getelementptr inbounds i8*, i8** %134, i64 %idxprom234, !dbg !1363
  %136 = load i8*, i8** %arrayidx235, align 8, !dbg !1363
  %call236 = call i32 @strncmp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i64 0, i64 0), i8* %136, i64 11) #14, !dbg !1366
  %cmp237 = icmp eq i32 %call236, 0, !dbg !1367
  br i1 %cmp237, label %if.then239, label %if.end270, !dbg !1368

if.then239:                                       ; preds = %if.end233
  %137 = load i8**, i8*** %info.addr, align 8, !dbg !1369
  %138 = load i32, i32* %i, align 4, !dbg !1371
  %idxprom240 = sext i32 %138 to i64, !dbg !1369
  %arrayidx241 = getelementptr inbounds i8*, i8** %137, i64 %idxprom240, !dbg !1369
  %139 = load i8*, i8** %arrayidx241, align 8, !dbg !1369
  %add.ptr242 = getelementptr inbounds i8, i8* %139, i64 12, !dbg !1372
  %add.ptr243 = getelementptr inbounds i8, i8* %add.ptr242, i64 -1, !dbg !1373
  store i8* %add.ptr243, i8** %cp, align 8, !dbg !1374
  %140 = load i8*, i8** %cp, align 8, !dbg !1375
  %141 = load i8, i8* %140, align 1, !dbg !1377
  %conv244 = zext i8 %141 to i32, !dbg !1377
  %cmp245 = icmp eq i32 %conv244, 0, !dbg !1378
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !1379

if.then247:                                       ; preds = %if.then239
  br label %sw.epilog, !dbg !1380

if.end248:                                        ; preds = %if.then239
  %call249 = call i32* @__errno_location() #15, !dbg !1381
  store i32 0, i32* %call249, align 4, !dbg !1382
  %142 = load i8*, i8** %cp, align 8, !dbg !1383
  %call250 = call i64 @strtoul(i8* %142, i8** %ep, i32 0) #11, !dbg !1384
  store i64 %call250, i64* %ulval, align 8, !dbg !1385
  %143 = load i8*, i8** %cp, align 8, !dbg !1386
  %144 = load i8, i8* %143, align 1, !dbg !1388
  %conv251 = zext i8 %144 to i32, !dbg !1388
  %cmp252 = icmp ne i32 %conv251, 0, !dbg !1389
  br i1 %cmp252, label %land.lhs.true254, label %if.end269, !dbg !1390

land.lhs.true254:                                 ; preds = %if.end248
  %145 = load i8*, i8** %ep, align 8, !dbg !1391
  %146 = load i8, i8* %145, align 1, !dbg !1392
  %conv255 = zext i8 %146 to i32, !dbg !1392
  %cmp256 = icmp eq i32 %conv255, 0, !dbg !1393
  br i1 %cmp256, label %land.lhs.true258, label %if.end269, !dbg !1394

land.lhs.true258:                                 ; preds = %land.lhs.true254
  %call259 = call i32* @__errno_location() #15, !dbg !1395
  %147 = load i32, i32* %call259, align 4, !dbg !1395
  %cmp260 = icmp ne i32 %147, 34, !dbg !1396
  br i1 %cmp260, label %if.then265, label %lor.lhs.false262, !dbg !1397

lor.lhs.false262:                                 ; preds = %land.lhs.true258
  %148 = load i64, i64* %ulval, align 8, !dbg !1398
  %cmp263 = icmp ne i64 %148, -1, !dbg !1399
  br i1 %cmp263, label %if.then265, label %if.end269, !dbg !1400

if.then265:                                       ; preds = %lor.lhs.false262, %land.lhs.true258
  %149 = load i64, i64* %ulval, align 8, !dbg !1401
  %conv266 = trunc i64 %149 to i32, !dbg !1403
  %150 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1404
  %euid = getelementptr inbounds %struct.command_details, %struct.command_details* %150, i32 0, i32 1, !dbg !1405
  store i32 %conv266, i32* %euid, align 4, !dbg !1406
  %151 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1407
  %flags267 = getelementptr inbounds %struct.command_details, %struct.command_details* %151, i32 0, i32 9, !dbg !1408
  %152 = load i32, i32* %flags267, align 4, !dbg !1408
  %call268 = call i32 bitcast (i32 (...)* @SET to i32 (i32, i32)*)(i32 %152, i32 2), !dbg !1409
  br label %if.end269, !dbg !1410

if.end269:                                        ; preds = %if.then265, %lor.lhs.false262, %land.lhs.true254, %if.end248
  br label %sw.epilog, !dbg !1411

if.end270:                                        ; preds = %if.end233
  %153 = load i8**, i8*** %info.addr, align 8, !dbg !1412
  %154 = load i32, i32* %i, align 4, !dbg !1414
  %idxprom271 = sext i32 %154 to i64, !dbg !1412
  %arrayidx272 = getelementptr inbounds i8*, i8** %153, i64 %idxprom271, !dbg !1412
  %155 = load i8*, i8** %arrayidx272, align 8, !dbg !1412
  %call273 = call i32 @strncmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i8* %155, i64 10) #14, !dbg !1415
  %cmp274 = icmp eq i32 %call273, 0, !dbg !1416
  br i1 %cmp274, label %if.then276, label %if.end307, !dbg !1417

if.then276:                                       ; preds = %if.end270
  %156 = load i8**, i8*** %info.addr, align 8, !dbg !1418
  %157 = load i32, i32* %i, align 4, !dbg !1420
  %idxprom277 = sext i32 %157 to i64, !dbg !1418
  %arrayidx278 = getelementptr inbounds i8*, i8** %156, i64 %idxprom277, !dbg !1418
  %158 = load i8*, i8** %arrayidx278, align 8, !dbg !1418
  %add.ptr279 = getelementptr inbounds i8, i8* %158, i64 11, !dbg !1421
  %add.ptr280 = getelementptr inbounds i8, i8* %add.ptr279, i64 -1, !dbg !1422
  store i8* %add.ptr280, i8** %cp, align 8, !dbg !1423
  %159 = load i8*, i8** %cp, align 8, !dbg !1424
  %160 = load i8, i8* %159, align 1, !dbg !1426
  %conv281 = zext i8 %160 to i32, !dbg !1426
  %cmp282 = icmp eq i32 %conv281, 0, !dbg !1427
  br i1 %cmp282, label %if.then284, label %if.end285, !dbg !1428

if.then284:                                       ; preds = %if.then276
  br label %sw.epilog, !dbg !1429

if.end285:                                        ; preds = %if.then276
  %call286 = call i32* @__errno_location() #15, !dbg !1430
  store i32 0, i32* %call286, align 4, !dbg !1431
  %161 = load i8*, i8** %cp, align 8, !dbg !1432
  %call287 = call i64 @strtoul(i8* %161, i8** %ep, i32 0) #11, !dbg !1433
  store i64 %call287, i64* %ulval, align 8, !dbg !1434
  %162 = load i8*, i8** %cp, align 8, !dbg !1435
  %163 = load i8, i8* %162, align 1, !dbg !1437
  %conv288 = zext i8 %163 to i32, !dbg !1437
  %cmp289 = icmp ne i32 %conv288, 0, !dbg !1438
  br i1 %cmp289, label %land.lhs.true291, label %if.end306, !dbg !1439

land.lhs.true291:                                 ; preds = %if.end285
  %164 = load i8*, i8** %ep, align 8, !dbg !1440
  %165 = load i8, i8* %164, align 1, !dbg !1441
  %conv292 = zext i8 %165 to i32, !dbg !1441
  %cmp293 = icmp eq i32 %conv292, 0, !dbg !1442
  br i1 %cmp293, label %land.lhs.true295, label %if.end306, !dbg !1443

land.lhs.true295:                                 ; preds = %land.lhs.true291
  %call296 = call i32* @__errno_location() #15, !dbg !1444
  %166 = load i32, i32* %call296, align 4, !dbg !1444
  %cmp297 = icmp ne i32 %166, 34, !dbg !1445
  br i1 %cmp297, label %if.then302, label %lor.lhs.false299, !dbg !1446

lor.lhs.false299:                                 ; preds = %land.lhs.true295
  %167 = load i64, i64* %ulval, align 8, !dbg !1447
  %cmp300 = icmp ne i64 %167, -1, !dbg !1448
  br i1 %cmp300, label %if.then302, label %if.end306, !dbg !1449

if.then302:                                       ; preds = %lor.lhs.false299, %land.lhs.true295
  %168 = load i64, i64* %ulval, align 8, !dbg !1450
  %conv303 = trunc i64 %168 to i32, !dbg !1452
  %169 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1453
  %gid = getelementptr inbounds %struct.command_details, %struct.command_details* %169, i32 0, i32 2, !dbg !1454
  store i32 %conv303, i32* %gid, align 8, !dbg !1455
  %170 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1456
  %flags304 = getelementptr inbounds %struct.command_details, %struct.command_details* %170, i32 0, i32 9, !dbg !1457
  %171 = load i32, i32* %flags304, align 4, !dbg !1457
  %call305 = call i32 bitcast (i32 (...)* @SET to i32 (i32, i32)*)(i32 %171, i32 4), !dbg !1458
  br label %if.end306, !dbg !1459

if.end306:                                        ; preds = %if.then302, %lor.lhs.false299, %land.lhs.true291, %if.end285
  br label %sw.epilog, !dbg !1460

if.end307:                                        ; preds = %if.end270
  %172 = load i8**, i8*** %info.addr, align 8, !dbg !1461
  %173 = load i32, i32* %i, align 4, !dbg !1463
  %idxprom308 = sext i32 %173 to i64, !dbg !1461
  %arrayidx309 = getelementptr inbounds i8*, i8** %172, i64 %idxprom308, !dbg !1461
  %174 = load i8*, i8** %arrayidx309, align 8, !dbg !1461
  %call310 = call i32 @strncmp(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i64 0, i64 0), i8* %174, i64 13) #14, !dbg !1464
  %cmp311 = icmp eq i32 %call310, 0, !dbg !1465
  br i1 %cmp311, label %if.then313, label %if.end376, !dbg !1466

if.then313:                                       ; preds = %if.end307
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1467, metadata !DIExpression()), !dbg !1469
  %175 = load i8**, i8*** %info.addr, align 8, !dbg !1470
  %176 = load i32, i32* %i, align 4, !dbg !1471
  %idxprom314 = sext i32 %176 to i64, !dbg !1470
  %arrayidx315 = getelementptr inbounds i8*, i8** %175, i64 %idxprom314, !dbg !1470
  %177 = load i8*, i8** %arrayidx315, align 8, !dbg !1470
  %add.ptr316 = getelementptr inbounds i8, i8* %177, i64 14, !dbg !1472
  %add.ptr317 = getelementptr inbounds i8, i8* %add.ptr316, i64 -1, !dbg !1473
  store i8* %add.ptr317, i8** %cp, align 8, !dbg !1474
  %178 = load i8*, i8** %cp, align 8, !dbg !1475
  %179 = load i8, i8* %178, align 1, !dbg !1477
  %conv318 = zext i8 %179 to i32, !dbg !1477
  %cmp319 = icmp eq i32 %conv318, 0, !dbg !1478
  br i1 %cmp319, label %if.then321, label %if.end322, !dbg !1479

if.then321:                                       ; preds = %if.then313
  br label %sw.epilog, !dbg !1480

if.end322:                                        ; preds = %if.then313
  br label %for.cond323, !dbg !1481

for.cond323:                                      ; preds = %if.end328, %if.end322
  %180 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1482
  %ngroups = getelementptr inbounds %struct.command_details, %struct.command_details* %180, i32 0, i32 7, !dbg !1486
  %181 = load i32, i32* %ngroups, align 4, !dbg !1487
  %inc = add nsw i32 %181, 1, !dbg !1487
  store i32 %inc, i32* %ngroups, align 4, !dbg !1487
  %182 = load i8*, i8** %cp, align 8, !dbg !1488
  %call324 = call i8* @strchr(i8* %182, i32 44) #14, !dbg !1490
  store i8* %call324, i8** %cp, align 8, !dbg !1491
  %cmp325 = icmp eq i8* %call324, null, !dbg !1492
  br i1 %cmp325, label %if.then327, label %if.end328, !dbg !1493

if.then327:                                       ; preds = %for.cond323
  br label %for.end, !dbg !1494

if.end328:                                        ; preds = %for.cond323
  %183 = load i8*, i8** %cp, align 8, !dbg !1495
  %incdec.ptr = getelementptr inbounds i8, i8* %183, i32 1, !dbg !1495
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !1495
  br label %for.cond323, !dbg !1496, !llvm.loop !1497

for.end:                                          ; preds = %if.then327
  %184 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1500
  %ngroups329 = getelementptr inbounds %struct.command_details, %struct.command_details* %184, i32 0, i32 7, !dbg !1502
  %185 = load i32, i32* %ngroups329, align 4, !dbg !1502
  %cmp330 = icmp ne i32 %185, 0, !dbg !1503
  br i1 %cmp330, label %if.then332, label %if.end375, !dbg !1504

if.then332:                                       ; preds = %for.end
  %186 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1505
  %ngroups333 = getelementptr inbounds %struct.command_details, %struct.command_details* %186, i32 0, i32 7, !dbg !1507
  %187 = load i32, i32* %ngroups333, align 4, !dbg !1507
  %conv334 = sext i32 %187 to i64, !dbg !1505
  %call335 = call i8* @emalloc2(i64 %conv334, i64 4), !dbg !1508
  %188 = bitcast i8* %call335 to i32*, !dbg !1508
  %189 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1509
  %groups = getelementptr inbounds %struct.command_details, %struct.command_details* %189, i32 0, i32 10, !dbg !1510
  store i32* %188, i32** %groups, align 8, !dbg !1511
  %190 = load i8**, i8*** %info.addr, align 8, !dbg !1512
  %191 = load i32, i32* %i, align 4, !dbg !1513
  %idxprom336 = sext i32 %191 to i64, !dbg !1512
  %arrayidx337 = getelementptr inbounds i8*, i8** %190, i64 %idxprom336, !dbg !1512
  %192 = load i8*, i8** %arrayidx337, align 8, !dbg !1512
  %add.ptr338 = getelementptr inbounds i8, i8* %192, i64 14, !dbg !1514
  %add.ptr339 = getelementptr inbounds i8, i8* %add.ptr338, i64 -1, !dbg !1515
  store i8* %add.ptr339, i8** %cp, align 8, !dbg !1516
  store i32 0, i32* %j, align 4, !dbg !1517
  br label %for.cond340, !dbg !1519

for.cond340:                                      ; preds = %if.end366, %if.then332
  %193 = load i32, i32* %j, align 4, !dbg !1520
  %194 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1522
  %ngroups341 = getelementptr inbounds %struct.command_details, %struct.command_details* %194, i32 0, i32 7, !dbg !1523
  %195 = load i32, i32* %ngroups341, align 4, !dbg !1523
  %cmp342 = icmp slt i32 %193, %195, !dbg !1524
  br i1 %cmp342, label %for.body344, label %for.end373, !dbg !1525

for.body344:                                      ; preds = %for.cond340
  %call345 = call i32* @__errno_location() #15, !dbg !1526
  store i32 0, i32* %call345, align 4, !dbg !1528
  %196 = load i8*, i8** %cp, align 8, !dbg !1529
  %call346 = call i64 @strtoul(i8* %196, i8** %ep, i32 0) #11, !dbg !1530
  store i64 %call346, i64* %ulval, align 8, !dbg !1531
  %197 = load i8*, i8** %cp, align 8, !dbg !1532
  %198 = load i8, i8* %197, align 1, !dbg !1534
  %conv347 = zext i8 %198 to i32, !dbg !1534
  %cmp348 = icmp eq i32 %conv347, 0, !dbg !1535
  br i1 %cmp348, label %if.then365, label %lor.lhs.false350, !dbg !1536

lor.lhs.false350:                                 ; preds = %for.body344
  %199 = load i8*, i8** %ep, align 8, !dbg !1537
  %200 = load i8, i8* %199, align 1, !dbg !1538
  %conv351 = zext i8 %200 to i32, !dbg !1538
  %cmp352 = icmp ne i32 %conv351, 44, !dbg !1539
  br i1 %cmp352, label %land.lhs.true354, label %lor.lhs.false358, !dbg !1540

land.lhs.true354:                                 ; preds = %lor.lhs.false350
  %201 = load i8*, i8** %ep, align 8, !dbg !1541
  %202 = load i8, i8* %201, align 1, !dbg !1542
  %conv355 = zext i8 %202 to i32, !dbg !1542
  %cmp356 = icmp ne i32 %conv355, 0, !dbg !1543
  br i1 %cmp356, label %if.then365, label %lor.lhs.false358, !dbg !1544

lor.lhs.false358:                                 ; preds = %land.lhs.true354, %lor.lhs.false350
  %203 = load i64, i64* %ulval, align 8, !dbg !1545
  %cmp359 = icmp eq i64 %203, -1, !dbg !1546
  br i1 %cmp359, label %land.lhs.true361, label %if.end366, !dbg !1547

land.lhs.true361:                                 ; preds = %lor.lhs.false358
  %call362 = call i32* @__errno_location() #15, !dbg !1548
  %204 = load i32, i32* %call362, align 4, !dbg !1548
  %cmp363 = icmp eq i32 %204, 34, !dbg !1549
  br i1 %cmp363, label %if.then365, label %if.end366, !dbg !1550

if.then365:                                       ; preds = %land.lhs.true361, %land.lhs.true354, %for.body344
  br label %for.end373, !dbg !1551

if.end366:                                        ; preds = %land.lhs.true361, %lor.lhs.false358
  %205 = load i64, i64* %ulval, align 8, !dbg !1553
  %conv367 = trunc i64 %205 to i32, !dbg !1554
  %206 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1555
  %groups368 = getelementptr inbounds %struct.command_details, %struct.command_details* %206, i32 0, i32 10, !dbg !1556
  %207 = load i32*, i32** %groups368, align 8, !dbg !1556
  %208 = load i32, i32* %j, align 4, !dbg !1557
  %inc369 = add nsw i32 %208, 1, !dbg !1557
  store i32 %inc369, i32* %j, align 4, !dbg !1557
  %idxprom370 = sext i32 %208 to i64, !dbg !1555
  %arrayidx371 = getelementptr inbounds i32, i32* %207, i64 %idxprom370, !dbg !1555
  store i32 %conv367, i32* %arrayidx371, align 4, !dbg !1558
  %209 = load i8*, i8** %ep, align 8, !dbg !1559
  %add.ptr372 = getelementptr inbounds i8, i8* %209, i64 1, !dbg !1560
  store i8* %add.ptr372, i8** %cp, align 8, !dbg !1561
  br label %for.cond340, !dbg !1562, !llvm.loop !1563

for.end373:                                       ; preds = %if.then365, %for.cond340
  %210 = load i32, i32* %j, align 4, !dbg !1565
  %211 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1566
  %ngroups374 = getelementptr inbounds %struct.command_details, %struct.command_details* %211, i32 0, i32 7, !dbg !1567
  store i32 %210, i32* %ngroups374, align 4, !dbg !1568
  br label %if.end375, !dbg !1569

if.end375:                                        ; preds = %for.end373, %for.end
  br label %sw.epilog, !dbg !1570

if.end376:                                        ; preds = %if.end307
  %212 = load i8**, i8*** %info.addr, align 8, !dbg !1571
  %213 = load i32, i32* %i, align 4, !dbg !1573
  %idxprom377 = sext i32 %213 to i64, !dbg !1571
  %arrayidx378 = getelementptr inbounds i8*, i8** %212, i64 %idxprom377, !dbg !1571
  %214 = load i8*, i8** %arrayidx378, align 8, !dbg !1571
  %call379 = call i32 @strncmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i8* %214, i64 10) #14, !dbg !1574
  %cmp380 = icmp eq i32 %call379, 0, !dbg !1575
  br i1 %cmp380, label %if.then382, label %if.end413, !dbg !1576

if.then382:                                       ; preds = %if.end376
  %215 = load i8**, i8*** %info.addr, align 8, !dbg !1577
  %216 = load i32, i32* %i, align 4, !dbg !1579
  %idxprom383 = sext i32 %216 to i64, !dbg !1577
  %arrayidx384 = getelementptr inbounds i8*, i8** %215, i64 %idxprom383, !dbg !1577
  %217 = load i8*, i8** %arrayidx384, align 8, !dbg !1577
  %add.ptr385 = getelementptr inbounds i8, i8* %217, i64 11, !dbg !1580
  %add.ptr386 = getelementptr inbounds i8, i8* %add.ptr385, i64 -1, !dbg !1581
  store i8* %add.ptr386, i8** %cp, align 8, !dbg !1582
  %218 = load i8*, i8** %cp, align 8, !dbg !1583
  %219 = load i8, i8* %218, align 1, !dbg !1585
  %conv387 = zext i8 %219 to i32, !dbg !1585
  %cmp388 = icmp eq i32 %conv387, 0, !dbg !1586
  br i1 %cmp388, label %if.then390, label %if.end391, !dbg !1587

if.then390:                                       ; preds = %if.then382
  br label %sw.epilog, !dbg !1588

if.end391:                                        ; preds = %if.then382
  %call392 = call i32* @__errno_location() #15, !dbg !1589
  store i32 0, i32* %call392, align 4, !dbg !1590
  %220 = load i8*, i8** %cp, align 8, !dbg !1591
  %call393 = call i64 @strtoul(i8* %220, i8** %ep, i32 0) #11, !dbg !1592
  store i64 %call393, i64* %ulval, align 8, !dbg !1593
  %221 = load i8*, i8** %cp, align 8, !dbg !1594
  %222 = load i8, i8* %221, align 1, !dbg !1596
  %conv394 = zext i8 %222 to i32, !dbg !1596
  %cmp395 = icmp ne i32 %conv394, 0, !dbg !1597
  br i1 %cmp395, label %land.lhs.true397, label %if.end412, !dbg !1598

land.lhs.true397:                                 ; preds = %if.end391
  %223 = load i8*, i8** %ep, align 8, !dbg !1599
  %224 = load i8, i8* %223, align 1, !dbg !1600
  %conv398 = zext i8 %224 to i32, !dbg !1600
  %cmp399 = icmp eq i32 %conv398, 0, !dbg !1601
  br i1 %cmp399, label %land.lhs.true401, label %if.end412, !dbg !1602

land.lhs.true401:                                 ; preds = %land.lhs.true397
  %call402 = call i32* @__errno_location() #15, !dbg !1603
  %225 = load i32, i32* %call402, align 4, !dbg !1603
  %cmp403 = icmp ne i32 %225, 34, !dbg !1604
  br i1 %cmp403, label %if.then408, label %lor.lhs.false405, !dbg !1605

lor.lhs.false405:                                 ; preds = %land.lhs.true401
  %226 = load i64, i64* %ulval, align 8, !dbg !1606
  %cmp406 = icmp ne i64 %226, -1, !dbg !1607
  br i1 %cmp406, label %if.then408, label %if.end412, !dbg !1608

if.then408:                                       ; preds = %lor.lhs.false405, %land.lhs.true401
  %227 = load i64, i64* %ulval, align 8, !dbg !1609
  %conv409 = trunc i64 %227 to i32, !dbg !1611
  %228 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1612
  %uid = getelementptr inbounds %struct.command_details, %struct.command_details* %228, i32 0, i32 0, !dbg !1613
  store i32 %conv409, i32* %uid, align 8, !dbg !1614
  %229 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1615
  %flags410 = getelementptr inbounds %struct.command_details, %struct.command_details* %229, i32 0, i32 9, !dbg !1616
  %230 = load i32, i32* %flags410, align 4, !dbg !1616
  %call411 = call i32 bitcast (i32 (...)* @SET to i32 (i32, i32)*)(i32 %230, i32 1), !dbg !1617
  br label %if.end412, !dbg !1618

if.end412:                                        ; preds = %if.then408, %lor.lhs.false405, %land.lhs.true397, %if.end391
  br label %sw.epilog, !dbg !1619

if.end413:                                        ; preds = %if.end376
  br label %sw.epilog, !dbg !1620

sw.bb414:                                         ; preds = %for.body
  %231 = load i8**, i8*** %info.addr, align 8, !dbg !1621
  %232 = load i32, i32* %i, align 4, !dbg !1621
  %idxprom415 = sext i32 %232 to i64, !dbg !1621
  %arrayidx416 = getelementptr inbounds i8*, i8** %231, i64 %idxprom415, !dbg !1621
  %233 = load i8*, i8** %arrayidx416, align 8, !dbg !1621
  %call417 = call i32 @strncmp(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.65, i64 0, i64 0), i8* %233, i64 13) #14, !dbg !1621
  %cmp418 = icmp eq i32 %call417, 0, !dbg !1621
  br i1 %cmp418, label %land.lhs.true420, label %if.end431, !dbg !1621

land.lhs.true420:                                 ; preds = %sw.bb414
  %234 = load i8**, i8*** %info.addr, align 8, !dbg !1621
  %235 = load i32, i32* %i, align 4, !dbg !1621
  %idxprom421 = sext i32 %235 to i64, !dbg !1621
  %arrayidx422 = getelementptr inbounds i8*, i8** %234, i64 %idxprom421, !dbg !1621
  %236 = load i8*, i8** %arrayidx422, align 8, !dbg !1621
  %arrayidx423 = getelementptr inbounds i8, i8* %236, i64 13, !dbg !1621
  %237 = load i8, i8* %arrayidx423, align 1, !dbg !1621
  %conv424 = zext i8 %237 to i32, !dbg !1621
  %tobool425 = icmp ne i32 %conv424, 0, !dbg !1621
  br i1 %tobool425, label %if.then426, label %if.end431, !dbg !1623

if.then426:                                       ; preds = %land.lhs.true420
  %238 = load i8**, i8*** %info.addr, align 8, !dbg !1624
  %239 = load i32, i32* %i, align 4, !dbg !1624
  %idxprom427 = sext i32 %239 to i64, !dbg !1624
  %arrayidx428 = getelementptr inbounds i8*, i8** %238, i64 %idxprom427, !dbg !1624
  %240 = load i8*, i8** %arrayidx428, align 8, !dbg !1624
  %add.ptr429 = getelementptr inbounds i8, i8* %240, i64 14, !dbg !1624
  %add.ptr430 = getelementptr inbounds i8, i8* %add.ptr429, i64 -1, !dbg !1624
  %241 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1624
  %selinux_role = getelementptr inbounds %struct.command_details, %struct.command_details* %241, i32 0, i32 15, !dbg !1624
  store i8* %add.ptr430, i8** %selinux_role, align 8, !dbg !1624
  br label %sw.epilog, !dbg !1624

if.end431:                                        ; preds = %land.lhs.true420, %sw.bb414
  %242 = load i8**, i8*** %info.addr, align 8, !dbg !1626
  %243 = load i32, i32* %i, align 4, !dbg !1626
  %idxprom432 = sext i32 %243 to i64, !dbg !1626
  %arrayidx433 = getelementptr inbounds i8*, i8** %242, i64 %idxprom432, !dbg !1626
  %244 = load i8*, i8** %arrayidx433, align 8, !dbg !1626
  %call434 = call i32 @strncmp(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.66, i64 0, i64 0), i8* %244, i64 13) #14, !dbg !1626
  %cmp435 = icmp eq i32 %call434, 0, !dbg !1626
  br i1 %cmp435, label %land.lhs.true437, label %if.end448, !dbg !1626

land.lhs.true437:                                 ; preds = %if.end431
  %245 = load i8**, i8*** %info.addr, align 8, !dbg !1626
  %246 = load i32, i32* %i, align 4, !dbg !1626
  %idxprom438 = sext i32 %246 to i64, !dbg !1626
  %arrayidx439 = getelementptr inbounds i8*, i8** %245, i64 %idxprom438, !dbg !1626
  %247 = load i8*, i8** %arrayidx439, align 8, !dbg !1626
  %arrayidx440 = getelementptr inbounds i8, i8* %247, i64 13, !dbg !1626
  %248 = load i8, i8* %arrayidx440, align 1, !dbg !1626
  %conv441 = zext i8 %248 to i32, !dbg !1626
  %tobool442 = icmp ne i32 %conv441, 0, !dbg !1626
  br i1 %tobool442, label %if.then443, label %if.end448, !dbg !1628

if.then443:                                       ; preds = %land.lhs.true437
  %249 = load i8**, i8*** %info.addr, align 8, !dbg !1629
  %250 = load i32, i32* %i, align 4, !dbg !1629
  %idxprom444 = sext i32 %250 to i64, !dbg !1629
  %arrayidx445 = getelementptr inbounds i8*, i8** %249, i64 %idxprom444, !dbg !1629
  %251 = load i8*, i8** %arrayidx445, align 8, !dbg !1629
  %add.ptr446 = getelementptr inbounds i8, i8* %251, i64 14, !dbg !1629
  %add.ptr447 = getelementptr inbounds i8, i8* %add.ptr446, i64 -1, !dbg !1629
  %252 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1629
  %selinux_type = getelementptr inbounds %struct.command_details, %struct.command_details* %252, i32 0, i32 16, !dbg !1629
  store i8* %add.ptr447, i8** %selinux_type, align 8, !dbg !1629
  br label %sw.epilog, !dbg !1629

if.end448:                                        ; preds = %land.lhs.true437, %if.end431
  %253 = load i8**, i8*** %info.addr, align 8, !dbg !1631
  %254 = load i32, i32* %i, align 4, !dbg !1633
  %idxprom449 = sext i32 %254 to i64, !dbg !1631
  %arrayidx450 = getelementptr inbounds i8*, i8** %253, i64 %idxprom449, !dbg !1631
  %255 = load i8*, i8** %arrayidx450, align 8, !dbg !1631
  %call451 = call i32 @strncmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i64 0, i64 0), i8* %255, i64 9) #14, !dbg !1634
  %cmp452 = icmp eq i32 %call451, 0, !dbg !1635
  br i1 %cmp452, label %if.then454, label %if.end466, !dbg !1636

if.then454:                                       ; preds = %if.end448
  %256 = load i8**, i8*** %info.addr, align 8, !dbg !1637
  %257 = load i32, i32* %i, align 4, !dbg !1640
  %idxprom455 = sext i32 %257 to i64, !dbg !1637
  %arrayidx456 = getelementptr inbounds i8*, i8** %256, i64 %idxprom455, !dbg !1637
  %258 = load i8*, i8** %arrayidx456, align 8, !dbg !1637
  %add.ptr457 = getelementptr inbounds i8, i8* %258, i64 10, !dbg !1641
  %add.ptr458 = getelementptr inbounds i8, i8* %add.ptr457, i64 -1, !dbg !1642
  %call459 = call i32 @atobool(i8* %add.ptr458), !dbg !1643
  %cmp460 = icmp eq i32 %call459, 1, !dbg !1644
  br i1 %cmp460, label %if.then462, label %if.end465, !dbg !1645

if.then462:                                       ; preds = %if.then454
  %259 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1646
  %flags463 = getelementptr inbounds %struct.command_details, %struct.command_details* %259, i32 0, i32 9, !dbg !1647
  %260 = load i32, i32* %flags463, align 4, !dbg !1647
  %call464 = call i32 bitcast (i32 (...)* @SET to i32 (i32, i32)*)(i32 %260, i32 512), !dbg !1648
  br label %if.end465, !dbg !1648

if.end465:                                        ; preds = %if.then462, %if.then454
  br label %sw.epilog, !dbg !1649

if.end466:                                        ; preds = %if.end448
  br label %sw.epilog, !dbg !1650

sw.bb467:                                         ; preds = %for.body
  %261 = load i8**, i8*** %info.addr, align 8, !dbg !1651
  %262 = load i32, i32* %i, align 4, !dbg !1653
  %idxprom468 = sext i32 %262 to i64, !dbg !1651
  %arrayidx469 = getelementptr inbounds i8*, i8** %261, i64 %idxprom468, !dbg !1651
  %263 = load i8*, i8** %arrayidx469, align 8, !dbg !1651
  %call470 = call i32 @strncmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.68, i64 0, i64 0), i8* %263, i64 8) #14, !dbg !1654
  %cmp471 = icmp eq i32 %call470, 0, !dbg !1655
  br i1 %cmp471, label %if.then473, label %if.end513, !dbg !1656

if.then473:                                       ; preds = %sw.bb467
  %264 = load i8**, i8*** %info.addr, align 8, !dbg !1657
  %265 = load i32, i32* %i, align 4, !dbg !1659
  %idxprom474 = sext i32 %265 to i64, !dbg !1657
  %arrayidx475 = getelementptr inbounds i8*, i8** %264, i64 %idxprom474, !dbg !1657
  %266 = load i8*, i8** %arrayidx475, align 8, !dbg !1657
  %add.ptr476 = getelementptr inbounds i8, i8* %266, i64 9, !dbg !1660
  %add.ptr477 = getelementptr inbounds i8, i8* %add.ptr476, i64 -1, !dbg !1661
  store i8* %add.ptr477, i8** %cp, align 8, !dbg !1662
  %267 = load i8*, i8** %cp, align 8, !dbg !1663
  %268 = load i8, i8* %267, align 1, !dbg !1665
  %conv478 = zext i8 %268 to i32, !dbg !1665
  %cmp479 = icmp eq i32 %conv478, 0, !dbg !1666
  br i1 %cmp479, label %if.then481, label %if.end482, !dbg !1667

if.then481:                                       ; preds = %if.then473
  br label %sw.epilog, !dbg !1668

if.end482:                                        ; preds = %if.then473
  %call483 = call i32* @__errno_location() #15, !dbg !1669
  store i32 0, i32* %call483, align 4, !dbg !1670
  %269 = load i8*, i8** %cp, align 8, !dbg !1671
  %call484 = call i64 @strtol(i8* %269, i8** %ep, i32 0) #11, !dbg !1672
  store i64 %call484, i64* %lval, align 8, !dbg !1673
  %270 = load i8*, i8** %cp, align 8, !dbg !1674
  %271 = load i8, i8* %270, align 1, !dbg !1676
  %conv485 = zext i8 %271 to i32, !dbg !1676
  %cmp486 = icmp ne i32 %conv485, 0, !dbg !1677
  br i1 %cmp486, label %land.lhs.true488, label %if.end512, !dbg !1678

land.lhs.true488:                                 ; preds = %if.end482
  %272 = load i8*, i8** %ep, align 8, !dbg !1679
  %273 = load i8, i8* %272, align 1, !dbg !1680
  %conv489 = zext i8 %273 to i32, !dbg !1680
  %cmp490 = icmp eq i32 %conv489, 0, !dbg !1681
  br i1 %cmp490, label %land.lhs.true492, label %if.end512, !dbg !1682

land.lhs.true492:                                 ; preds = %land.lhs.true488
  %call493 = call i32* @__errno_location() #15, !dbg !1683
  %274 = load i32, i32* %call493, align 4, !dbg !1683
  %cmp494 = icmp eq i32 %274, 34, !dbg !1684
  br i1 %cmp494, label %land.lhs.true496, label %land.lhs.true502, !dbg !1685

land.lhs.true496:                                 ; preds = %land.lhs.true492
  %275 = load i64, i64* %lval, align 8, !dbg !1686
  %cmp497 = icmp eq i64 %275, 9223372036854775807, !dbg !1687
  br i1 %cmp497, label %if.end512, label %lor.lhs.false499, !dbg !1688

lor.lhs.false499:                                 ; preds = %land.lhs.true496
  %276 = load i64, i64* %lval, align 8, !dbg !1689
  %cmp500 = icmp eq i64 %276, -9223372036854775808, !dbg !1690
  br i1 %cmp500, label %if.end512, label %land.lhs.true502, !dbg !1691

land.lhs.true502:                                 ; preds = %lor.lhs.false499, %land.lhs.true492
  %277 = load i64, i64* %lval, align 8, !dbg !1692
  %cmp503 = icmp sle i64 %277, 2147483647, !dbg !1693
  br i1 %cmp503, label %land.lhs.true505, label %if.end512, !dbg !1694

land.lhs.true505:                                 ; preds = %land.lhs.true502
  %278 = load i64, i64* %lval, align 8, !dbg !1695
  %cmp506 = icmp sge i64 %278, 0, !dbg !1696
  br i1 %cmp506, label %if.then508, label %if.end512, !dbg !1697

if.then508:                                       ; preds = %land.lhs.true505
  %279 = load i64, i64* %lval, align 8, !dbg !1698
  %conv509 = trunc i64 %279 to i32, !dbg !1700
  %280 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1701
  %timeout = getelementptr inbounds %struct.command_details, %struct.command_details* %280, i32 0, i32 6, !dbg !1702
  store i32 %conv509, i32* %timeout, align 8, !dbg !1703
  %281 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1704
  %flags510 = getelementptr inbounds %struct.command_details, %struct.command_details* %281, i32 0, i32 9, !dbg !1705
  %282 = load i32, i32* %flags510, align 4, !dbg !1705
  %call511 = call i32 bitcast (i32 (...)* @SET to i32 (i32, i32)*)(i32 %282, i32 256), !dbg !1706
  br label %if.end512, !dbg !1707

if.end512:                                        ; preds = %if.then508, %land.lhs.true505, %land.lhs.true502, %lor.lhs.false499, %land.lhs.true496, %land.lhs.true488, %if.end482
  br label %sw.epilog, !dbg !1708

if.end513:                                        ; preds = %sw.bb467
  br label %sw.epilog, !dbg !1709

sw.bb514:                                         ; preds = %for.body
  %283 = load i8**, i8*** %info.addr, align 8, !dbg !1710
  %284 = load i32, i32* %i, align 4, !dbg !1712
  %idxprom515 = sext i32 %284 to i64, !dbg !1710
  %arrayidx516 = getelementptr inbounds i8*, i8** %283, i64 %idxprom515, !dbg !1710
  %285 = load i8*, i8** %arrayidx516, align 8, !dbg !1710
  %call517 = call i32 @strncmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), i8* %285, i64 6) #14, !dbg !1713
  %cmp518 = icmp eq i32 %call517, 0, !dbg !1714
  br i1 %cmp518, label %if.then520, label %if.end551, !dbg !1715

if.then520:                                       ; preds = %sw.bb514
  %286 = load i8**, i8*** %info.addr, align 8, !dbg !1716
  %287 = load i32, i32* %i, align 4, !dbg !1718
  %idxprom521 = sext i32 %287 to i64, !dbg !1716
  %arrayidx522 = getelementptr inbounds i8*, i8** %286, i64 %idxprom521, !dbg !1716
  %288 = load i8*, i8** %arrayidx522, align 8, !dbg !1716
  %add.ptr523 = getelementptr inbounds i8, i8* %288, i64 7, !dbg !1719
  %add.ptr524 = getelementptr inbounds i8, i8* %add.ptr523, i64 -1, !dbg !1720
  store i8* %add.ptr524, i8** %cp, align 8, !dbg !1721
  %289 = load i8*, i8** %cp, align 8, !dbg !1722
  %290 = load i8, i8* %289, align 1, !dbg !1724
  %conv525 = zext i8 %290 to i32, !dbg !1724
  %cmp526 = icmp eq i32 %conv525, 0, !dbg !1725
  br i1 %cmp526, label %if.then528, label %if.end529, !dbg !1726

if.then528:                                       ; preds = %if.then520
  br label %sw.epilog, !dbg !1727

if.end529:                                        ; preds = %if.then520
  %call530 = call i32* @__errno_location() #15, !dbg !1728
  store i32 0, i32* %call530, align 4, !dbg !1729
  %291 = load i8*, i8** %cp, align 8, !dbg !1730
  %call531 = call i64 @strtoul(i8* %291, i8** %ep, i32 8) #11, !dbg !1731
  store i64 %call531, i64* %ulval, align 8, !dbg !1732
  %292 = load i8*, i8** %cp, align 8, !dbg !1733
  %293 = load i8, i8* %292, align 1, !dbg !1735
  %conv532 = zext i8 %293 to i32, !dbg !1735
  %cmp533 = icmp ne i32 %conv532, 0, !dbg !1736
  br i1 %cmp533, label %land.lhs.true535, label %if.end550, !dbg !1737

land.lhs.true535:                                 ; preds = %if.end529
  %294 = load i8*, i8** %ep, align 8, !dbg !1738
  %295 = load i8, i8* %294, align 1, !dbg !1739
  %conv536 = zext i8 %295 to i32, !dbg !1739
  %cmp537 = icmp eq i32 %conv536, 0, !dbg !1740
  br i1 %cmp537, label %land.lhs.true539, label %if.end550, !dbg !1741

land.lhs.true539:                                 ; preds = %land.lhs.true535
  %call540 = call i32* @__errno_location() #15, !dbg !1742
  %296 = load i32, i32* %call540, align 4, !dbg !1742
  %cmp541 = icmp ne i32 %296, 34, !dbg !1743
  br i1 %cmp541, label %if.then546, label %lor.lhs.false543, !dbg !1744

lor.lhs.false543:                                 ; preds = %land.lhs.true539
  %297 = load i64, i64* %ulval, align 8, !dbg !1745
  %cmp544 = icmp ne i64 %297, -1, !dbg !1746
  br i1 %cmp544, label %if.then546, label %if.end550, !dbg !1747

if.then546:                                       ; preds = %lor.lhs.false543, %land.lhs.true539
  %298 = load i64, i64* %ulval, align 8, !dbg !1748
  %conv547 = trunc i64 %298 to i32, !dbg !1750
  %299 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1751
  %umask = getelementptr inbounds %struct.command_details, %struct.command_details* %299, i32 0, i32 4, !dbg !1752
  store i32 %conv547, i32* %umask, align 8, !dbg !1753
  %300 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1754
  %flags548 = getelementptr inbounds %struct.command_details, %struct.command_details* %300, i32 0, i32 9, !dbg !1755
  %301 = load i32, i32* %flags548, align 4, !dbg !1755
  %call549 = call i32 bitcast (i32 (...)* @SET to i32 (i32, i32)*)(i32 %301, i32 128), !dbg !1756
  br label %if.end550, !dbg !1757

if.end550:                                        ; preds = %if.then546, %lor.lhs.false543, %land.lhs.true535, %if.end529
  br label %sw.epilog, !dbg !1758

if.end551:                                        ; preds = %sw.bb514
  %302 = load i8**, i8*** %info.addr, align 8, !dbg !1759
  %303 = load i32, i32* %i, align 4, !dbg !1761
  %idxprom552 = sext i32 %303 to i64, !dbg !1759
  %arrayidx553 = getelementptr inbounds i8*, i8** %302, i64 %idxprom552, !dbg !1759
  %304 = load i8*, i8** %arrayidx553, align 8, !dbg !1759
  %call554 = call i32 @strncmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i64 0, i64 0), i8* %304, i64 8) #14, !dbg !1762
  %cmp555 = icmp eq i32 %call554, 0, !dbg !1763
  br i1 %cmp555, label %if.then557, label %if.end569, !dbg !1764

if.then557:                                       ; preds = %if.end551
  %305 = load i8**, i8*** %info.addr, align 8, !dbg !1765
  %306 = load i32, i32* %i, align 4, !dbg !1768
  %idxprom558 = sext i32 %306 to i64, !dbg !1765
  %arrayidx559 = getelementptr inbounds i8*, i8** %305, i64 %idxprom558, !dbg !1765
  %307 = load i8*, i8** %arrayidx559, align 8, !dbg !1765
  %add.ptr560 = getelementptr inbounds i8, i8* %307, i64 9, !dbg !1769
  %add.ptr561 = getelementptr inbounds i8, i8* %add.ptr560, i64 -1, !dbg !1770
  %call562 = call i32 @atobool(i8* %add.ptr561), !dbg !1771
  %cmp563 = icmp eq i32 %call562, 1, !dbg !1772
  br i1 %cmp563, label %if.then565, label %if.end568, !dbg !1773

if.then565:                                       ; preds = %if.then557
  %308 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1774
  %flags566 = getelementptr inbounds %struct.command_details, %struct.command_details* %308, i32 0, i32 9, !dbg !1775
  %309 = load i32, i32* %flags566, align 4, !dbg !1775
  %call567 = call i32 bitcast (i32 (...)* @SET to i32 (i32, i32)*)(i32 %309, i32 4096), !dbg !1776
  br label %if.end568, !dbg !1776

if.end568:                                        ; preds = %if.then565, %if.then557
  br label %sw.epilog, !dbg !1777

if.end569:                                        ; preds = %if.end551
  br label %sw.epilog, !dbg !1778

sw.epilog:                                        ; preds = %for.body, %if.end569, %if.end568, %if.end550, %if.then528, %if.end513, %if.end512, %if.then481, %if.end466, %if.end465, %if.then443, %if.then426, %if.end413, %if.end412, %if.then390, %if.end375, %if.then321, %if.end306, %if.then284, %if.end269, %if.then247, %if.end232, %if.then210, %if.end195, %if.end194, %if.end176, %if.end175, %if.end157, %if.then127, %if.end112, %if.then107, %if.end94, %if.end93, %if.then64, %if.then45, %if.then28, %if.then
  br label %for.inc, !dbg !1779

for.inc:                                          ; preds = %sw.epilog
  %310 = load i32, i32* %i, align 4, !dbg !1780
  %inc570 = add nsw i32 %310, 1, !dbg !1780
  store i32 %inc570, i32* %i, align 4, !dbg !1780
  br label %for.cond, !dbg !1781, !llvm.loop !1782

for.end571:                                       ; preds = %for.cond
  %311 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1784
  %flags572 = getelementptr inbounds %struct.command_details, %struct.command_details* %311, i32 0, i32 9, !dbg !1786
  %312 = load i32, i32* %flags572, align 4, !dbg !1786
  %call573 = call i32 bitcast (i32 (...)* @ISSET to i32 (i32, i32)*)(i32 %312, i32 2), !dbg !1787
  %tobool574 = icmp ne i32 %call573, 0, !dbg !1787
  br i1 %tobool574, label %if.end578, label %if.then575, !dbg !1788

if.then575:                                       ; preds = %for.end571
  %313 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1789
  %uid576 = getelementptr inbounds %struct.command_details, %struct.command_details* %313, i32 0, i32 0, !dbg !1790
  %314 = load i32, i32* %uid576, align 8, !dbg !1790
  %315 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1791
  %euid577 = getelementptr inbounds %struct.command_details, %struct.command_details* %315, i32 0, i32 1, !dbg !1792
  store i32 %314, i32* %euid577, align 4, !dbg !1793
  br label %if.end578, !dbg !1791

if.end578:                                        ; preds = %if.then575, %for.end571
  ret void, !dbg !1794
}

declare dso_local i32 @SET(...) #2

declare dso_local i32 @sudo_edit(%struct.command_details*, i8**, i8**) #2

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: noinline nounwind uwtable
define internal i8* @escape_cmnd(i8* %src) #0 !dbg !1795 {
entry:
  %src.addr = alloca i8*, align 8
  %cmnd = alloca i8*, align 8
  %dst = alloca i8*, align 8
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !1798, metadata !DIExpression()), !dbg !1799
  call void @llvm.dbg.declare(metadata i8** %cmnd, metadata !1800, metadata !DIExpression()), !dbg !1801
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !1802, metadata !DIExpression()), !dbg !1803
  %0 = load i8*, i8** %src.addr, align 8, !dbg !1804
  %call = call i64 @strlen(i8* %0) #14, !dbg !1805
  %mul = mul i64 2, %call, !dbg !1806
  %add = add i64 %mul, 1, !dbg !1807
  %call1 = call i8* @emalloc(i64 %add), !dbg !1808
  store i8* %call1, i8** %dst, align 8, !dbg !1809
  store i8* %call1, i8** %cmnd, align 8, !dbg !1810
  br label %while.cond, !dbg !1811

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i8*, i8** %src.addr, align 8, !dbg !1812
  %2 = load i8, i8* %1, align 1, !dbg !1813
  %conv = zext i8 %2 to i32, !dbg !1813
  %cmp = icmp ne i32 %conv, 0, !dbg !1814
  br i1 %cmp, label %while.body, label %while.end, !dbg !1811

while.body:                                       ; preds = %while.cond
  %call3 = call i16** @__ctype_b_loc() #15, !dbg !1815
  %3 = load i16*, i16** %call3, align 8, !dbg !1815
  %4 = load i8*, i8** %src.addr, align 8, !dbg !1815
  %5 = load i8, i8* %4, align 1, !dbg !1815
  %conv4 = zext i8 %5 to i32, !dbg !1815
  %idxprom = sext i32 %conv4 to i64, !dbg !1815
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !1815
  %6 = load i16, i16* %arrayidx, align 2, !dbg !1815
  %conv5 = zext i16 %6 to i32, !dbg !1815
  %and = and i32 %conv5, 8, !dbg !1815
  %tobool = icmp ne i32 %and, 0, !dbg !1815
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !1818

land.lhs.true:                                    ; preds = %while.body
  %call6 = call i16** @__ctype_b_loc() #15, !dbg !1819
  %7 = load i16*, i16** %call6, align 8, !dbg !1819
  %8 = load i8*, i8** %src.addr, align 8, !dbg !1819
  %9 = load i8, i8* %8, align 1, !dbg !1819
  %conv7 = zext i8 %9 to i32, !dbg !1819
  %idxprom8 = sext i32 %conv7 to i64, !dbg !1819
  %arrayidx9 = getelementptr inbounds i16, i16* %7, i64 %idxprom8, !dbg !1819
  %10 = load i16, i16* %arrayidx9, align 2, !dbg !1819
  %conv10 = zext i16 %10 to i32, !dbg !1819
  %and11 = and i32 %conv10, 8192, !dbg !1819
  %tobool12 = icmp ne i32 %and11, 0, !dbg !1819
  br i1 %tobool12, label %if.end, label %land.lhs.true13, !dbg !1820

land.lhs.true13:                                  ; preds = %land.lhs.true
  %11 = load i8*, i8** %src.addr, align 8, !dbg !1821
  %12 = load i8, i8* %11, align 1, !dbg !1822
  %conv14 = zext i8 %12 to i32, !dbg !1822
  %cmp15 = icmp ne i32 %conv14, 95, !dbg !1823
  br i1 %cmp15, label %land.lhs.true17, label %if.end, !dbg !1824

land.lhs.true17:                                  ; preds = %land.lhs.true13
  %13 = load i8*, i8** %src.addr, align 8, !dbg !1825
  %14 = load i8, i8* %13, align 1, !dbg !1826
  %conv18 = zext i8 %14 to i32, !dbg !1826
  %cmp19 = icmp ne i32 %conv18, 45, !dbg !1827
  br i1 %cmp19, label %if.then, label %if.end, !dbg !1828

if.then:                                          ; preds = %land.lhs.true17
  %15 = load i8*, i8** %dst, align 8, !dbg !1829
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !1829
  store i8* %incdec.ptr, i8** %dst, align 8, !dbg !1829
  store i8 92, i8* %15, align 1, !dbg !1831
  br label %if.end, !dbg !1832

if.end:                                           ; preds = %if.then, %land.lhs.true17, %land.lhs.true13, %land.lhs.true, %while.body
  %16 = load i8*, i8** %src.addr, align 8, !dbg !1833
  %incdec.ptr21 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !1833
  store i8* %incdec.ptr21, i8** %src.addr, align 8, !dbg !1833
  %17 = load i8, i8* %16, align 1, !dbg !1834
  %18 = load i8*, i8** %dst, align 8, !dbg !1835
  %incdec.ptr22 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !1835
  store i8* %incdec.ptr22, i8** %dst, align 8, !dbg !1835
  store i8 %17, i8* %18, align 1, !dbg !1836
  br label %while.cond, !dbg !1811, !llvm.loop !1837

while.end:                                        ; preds = %while.cond
  %19 = load i8*, i8** %dst, align 8, !dbg !1839
  %incdec.ptr23 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !1839
  store i8* %incdec.ptr23, i8** %dst, align 8, !dbg !1839
  store i8 0, i8* %19, align 1, !dbg !1840
  %20 = load i8*, i8** %cmnd, align 8, !dbg !1841
  ret i8* %20, !dbg !1842
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @run_command(%struct.command_details* %details, i8** %argv, i8** %envp) #0 !dbg !1843 {
entry:
  %details.addr = alloca %struct.command_details*, align 8
  %argv.addr = alloca i8**, align 8
  %envp.addr = alloca i8**, align 8
  %plugin = alloca %struct.plugin_container*, align 8
  %cstat = alloca %struct.command_status, align 4
  %exitcode = alloca i32, align 4
  store %struct.command_details* %details, %struct.command_details** %details.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %details.addr, metadata !1846, metadata !DIExpression()), !dbg !1847
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !1848, metadata !DIExpression()), !dbg !1849
  store i8** %envp, i8*** %envp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %envp.addr, metadata !1850, metadata !DIExpression()), !dbg !1851
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin, metadata !1852, metadata !DIExpression()), !dbg !1853
  call void @llvm.dbg.declare(metadata %struct.command_status* %cstat, metadata !1854, metadata !DIExpression()), !dbg !1859
  call void @llvm.dbg.declare(metadata i32* %exitcode, metadata !1860, metadata !DIExpression()), !dbg !1861
  store i32 1, i32* %exitcode, align 4, !dbg !1861
  %type = getelementptr inbounds %struct.command_status, %struct.command_status* %cstat, i32 0, i32 0, !dbg !1862
  store i32 0, i32* %type, align 4, !dbg !1863
  %val = getelementptr inbounds %struct.command_status, %struct.command_status* %cstat, i32 0, i32 1, !dbg !1864
  store i32 0, i32* %val, align 4, !dbg !1865
  %0 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1866
  %1 = load i8**, i8*** %argv.addr, align 8, !dbg !1867
  %2 = load i8**, i8*** %envp.addr, align 8, !dbg !1868
  %call = call i32 @sudo_execve(%struct.command_details* %0, i8** %1, i8** %2, %struct.command_status* %cstat), !dbg !1869
  %type1 = getelementptr inbounds %struct.command_status, %struct.command_status* %cstat, i32 0, i32 0, !dbg !1870
  %3 = load i32, i32* %type1, align 4, !dbg !1870
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb4
  ], !dbg !1871

sw.bb:                                            ; preds = %entry
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20, i64 0, i64 0)), !dbg !1872
  %val2 = getelementptr inbounds %struct.command_status, %struct.command_status* %cstat, i32 0, i32 1, !dbg !1874
  %4 = load i32, i32* %val2, align 4, !dbg !1874
  call void @policy_close(%struct.plugin_container* @policy_plugin, i32 0, i32 %4), !dbg !1875
  %5 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !1876
  store %struct.plugin_container* %5, %struct.plugin_container** %plugin, align 8, !dbg !1876
  br label %for.cond, !dbg !1876

for.cond:                                         ; preds = %for.inc, %sw.bb
  %6 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !1878
  %cmp = icmp ne %struct.plugin_container* %6, null, !dbg !1878
  br i1 %cmp, label %for.body, label %for.end, !dbg !1876

for.body:                                         ; preds = %for.cond
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i64 0, i64 0)), !dbg !1880
  %7 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !1882
  %val3 = getelementptr inbounds %struct.command_status, %struct.command_status* %cstat, i32 0, i32 1, !dbg !1883
  %8 = load i32, i32* %val3, align 4, !dbg !1883
  call void @iolog_close(%struct.plugin_container* %7, i32 0, i32 %8), !dbg !1884
  br label %for.inc, !dbg !1885

for.inc:                                          ; preds = %for.body
  %9 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !1878
  %next = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %9, i32 0, i32 1, !dbg !1878
  %10 = load %struct.plugin_container*, %struct.plugin_container** %next, align 8, !dbg !1878
  store %struct.plugin_container* %10, %struct.plugin_container** %plugin, align 8, !dbg !1878
  br label %for.cond, !dbg !1878, !llvm.loop !1886

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %exitcode, align 4, !dbg !1888
  br label %sw.epilog, !dbg !1889

sw.bb4:                                           ; preds = %entry
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0)), !dbg !1890
  %val5 = getelementptr inbounds %struct.command_status, %struct.command_status* %cstat, i32 0, i32 1, !dbg !1891
  %11 = load i32, i32* %val5, align 4, !dbg !1891
  call void @policy_close(%struct.plugin_container* @policy_plugin, i32 %11, i32 0), !dbg !1892
  %12 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !1893
  store %struct.plugin_container* %12, %struct.plugin_container** %plugin, align 8, !dbg !1893
  br label %for.cond6, !dbg !1893

for.cond6:                                        ; preds = %for.inc10, %sw.bb4
  %13 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !1895
  %cmp7 = icmp ne %struct.plugin_container* %13, null, !dbg !1895
  br i1 %cmp7, label %for.body8, label %for.end12, !dbg !1893

for.body8:                                        ; preds = %for.cond6
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23, i64 0, i64 0)), !dbg !1897
  %14 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !1899
  %val9 = getelementptr inbounds %struct.command_status, %struct.command_status* %cstat, i32 0, i32 1, !dbg !1900
  %15 = load i32, i32* %val9, align 4, !dbg !1900
  call void @iolog_close(%struct.plugin_container* %14, i32 %15, i32 0), !dbg !1901
  br label %for.inc10, !dbg !1902

for.inc10:                                        ; preds = %for.body8
  %16 = load %struct.plugin_container*, %struct.plugin_container** %plugin, align 8, !dbg !1895
  %next11 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %16, i32 0, i32 1, !dbg !1895
  %17 = load %struct.plugin_container*, %struct.plugin_container** %next11, align 8, !dbg !1895
  store %struct.plugin_container* %17, %struct.plugin_container** %plugin, align 8, !dbg !1895
  br label %for.cond6, !dbg !1895, !llvm.loop !1903

for.end12:                                        ; preds = %for.cond6
  %val13 = getelementptr inbounds %struct.command_status, %struct.command_status* %cstat, i32 0, i32 1, !dbg !1905
  %18 = load i32, i32* %val13, align 4, !dbg !1905
  %and = and i32 %18, 127, !dbg !1905
  %cmp14 = icmp eq i32 %and, 0, !dbg !1905
  br i1 %cmp14, label %if.then, label %if.else, !dbg !1907

if.then:                                          ; preds = %for.end12
  %val15 = getelementptr inbounds %struct.command_status, %struct.command_status* %cstat, i32 0, i32 1, !dbg !1908
  %19 = load i32, i32* %val15, align 4, !dbg !1908
  %and16 = and i32 %19, 65280, !dbg !1908
  %shr = ashr i32 %and16, 8, !dbg !1908
  store i32 %shr, i32* %exitcode, align 4, !dbg !1909
  br label %if.end26, !dbg !1910

if.else:                                          ; preds = %for.end12
  %val17 = getelementptr inbounds %struct.command_status, %struct.command_status* %cstat, i32 0, i32 1, !dbg !1911
  %20 = load i32, i32* %val17, align 4, !dbg !1911
  %and18 = and i32 %20, 127, !dbg !1911
  %add = add nsw i32 %and18, 1, !dbg !1911
  %conv = trunc i32 %add to i8, !dbg !1911
  %conv19 = sext i8 %conv to i32, !dbg !1911
  %shr20 = ashr i32 %conv19, 1, !dbg !1911
  %cmp21 = icmp sgt i32 %shr20, 0, !dbg !1911
  br i1 %cmp21, label %if.then23, label %if.end, !dbg !1913

if.then23:                                        ; preds = %if.else
  %val24 = getelementptr inbounds %struct.command_status, %struct.command_status* %cstat, i32 0, i32 1, !dbg !1914
  %21 = load i32, i32* %val24, align 4, !dbg !1914
  %and25 = and i32 %21, 127, !dbg !1914
  %or = or i32 %and25, 128, !dbg !1915
  store i32 %or, i32* %exitcode, align 4, !dbg !1916
  br label %if.end, !dbg !1917

if.end:                                           ; preds = %if.then23, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then
  br label %sw.epilog, !dbg !1918

sw.default:                                       ; preds = %entry
  %type27 = getelementptr inbounds %struct.command_status, %struct.command_status* %cstat, i32 0, i32 0, !dbg !1919
  %22 = load i32, i32* %type27, align 4, !dbg !1919
  call void (i8*, ...) @warningx(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.24, i64 0, i64 0), i32 %22), !dbg !1920
  br label %sw.epilog, !dbg !1921

sw.epilog:                                        ; preds = %sw.default, %if.end26, %for.end
  %23 = load i32, i32* %exitcode, align 4, !dbg !1922
  ret i32 %23, !dbg !1923
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @exec_setup(%struct.command_details* %details, i8* %ptyname, i32 %ptyfd) #0 !dbg !1924 {
entry:
  %details.addr = alloca %struct.command_details*, align 8
  %ptyname.addr = alloca i8*, align 8
  %ptyfd.addr = alloca i32, align 4
  %rval = alloca i32, align 4
  %pw = alloca %struct.passwd*, align 8
  %rl = alloca %struct.rlimit, align 8
  store %struct.command_details* %details, %struct.command_details** %details.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %details.addr, metadata !1927, metadata !DIExpression()), !dbg !1928
  store i8* %ptyname, i8** %ptyname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptyname.addr, metadata !1929, metadata !DIExpression()), !dbg !1930
  store i32 %ptyfd, i32* %ptyfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ptyfd.addr, metadata !1931, metadata !DIExpression()), !dbg !1932
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !1933, metadata !DIExpression()), !dbg !1934
  store i32 0, i32* %rval, align 4, !dbg !1934
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !1935, metadata !DIExpression()), !dbg !1936
  %0 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1937
  %euid = getelementptr inbounds %struct.command_details, %struct.command_details* %0, i32 0, i32 1, !dbg !1938
  %1 = load i32, i32* %euid, align 4, !dbg !1938
  %call = call %struct.passwd* @getpwuid(i32 %1), !dbg !1939
  store %struct.passwd* %call, %struct.passwd** %pw, align 8, !dbg !1940
  %2 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !1941
  %call1 = call i32 @policy_init_session(%struct.plugin_container* @policy_plugin, %struct.passwd* %2), !dbg !1943
  %cmp = icmp ne i32 %call1, 1, !dbg !1944
  br i1 %cmp, label %if.then, label %if.end, !dbg !1945

if.then:                                          ; preds = %entry
  br label %done, !dbg !1946

if.end:                                           ; preds = %entry
  %3 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !1947
  %cmp2 = icmp ne %struct.passwd* %3, null, !dbg !1949
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !1950

if.then3:                                         ; preds = %if.end
  br label %if.end4, !dbg !1951

if.end4:                                          ; preds = %if.then3, %if.end
  %4 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1953
  %flags = getelementptr inbounds %struct.command_details, %struct.command_details* %4, i32 0, i32 9, !dbg !1955
  %5 = load i32, i32* %flags, align 4, !dbg !1955
  %call5 = call i32 bitcast (i32 (...)* @ISSET to i32 (i32, i32)*)(i32 %5, i32 8), !dbg !1956
  %tobool = icmp ne i32 %call5, 0, !dbg !1956
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !1957

land.lhs.true:                                    ; preds = %if.end4
  %6 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1958
  %egid = getelementptr inbounds %struct.command_details, %struct.command_details* %6, i32 0, i32 3, !dbg !1959
  %7 = load i32, i32* %egid, align 4, !dbg !1959
  %call6 = call i32 @setegid(i32 %7) #11, !dbg !1960
  %tobool7 = icmp ne i32 %call6, 0, !dbg !1960
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !1961

if.then8:                                         ; preds = %land.lhs.true
  %8 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1962
  %egid9 = getelementptr inbounds %struct.command_details, %struct.command_details* %8, i32 0, i32 3, !dbg !1964
  %9 = load i32, i32* %egid9, align 4, !dbg !1964
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0), i32 %9), !dbg !1965
  br label %done, !dbg !1966

if.end10:                                         ; preds = %land.lhs.true, %if.end4
  %10 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1967
  %flags11 = getelementptr inbounds %struct.command_details, %struct.command_details* %10, i32 0, i32 9, !dbg !1969
  %11 = load i32, i32* %flags11, align 4, !dbg !1969
  %call12 = call i32 bitcast (i32 (...)* @ISSET to i32 (i32, i32)*)(i32 %11, i32 4), !dbg !1970
  %tobool13 = icmp ne i32 %call12, 0, !dbg !1970
  br i1 %tobool13, label %land.lhs.true14, label %if.end19, !dbg !1971

land.lhs.true14:                                  ; preds = %if.end10
  %12 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1972
  %gid = getelementptr inbounds %struct.command_details, %struct.command_details* %12, i32 0, i32 2, !dbg !1973
  %13 = load i32, i32* %gid, align 8, !dbg !1973
  %call15 = call i32 @setgid(i32 %13) #11, !dbg !1974
  %tobool16 = icmp ne i32 %call15, 0, !dbg !1974
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !1975

if.then17:                                        ; preds = %land.lhs.true14
  %14 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1976
  %gid18 = getelementptr inbounds %struct.command_details, %struct.command_details* %14, i32 0, i32 2, !dbg !1978
  %15 = load i32, i32* %gid18, align 8, !dbg !1978
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i32 %15), !dbg !1979
  br label %done, !dbg !1980

if.end19:                                         ; preds = %land.lhs.true14, %if.end10
  %16 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1981
  %flags20 = getelementptr inbounds %struct.command_details, %struct.command_details* %16, i32 0, i32 9, !dbg !1983
  %17 = load i32, i32* %flags20, align 4, !dbg !1983
  %call21 = call i32 bitcast (i32 (...)* @ISSET to i32 (i32, i32)*)(i32 %17, i32 16), !dbg !1984
  %tobool22 = icmp ne i32 %call21, 0, !dbg !1984
  br i1 %tobool22, label %if.end33, label %if.then23, !dbg !1985

if.then23:                                        ; preds = %if.end19
  %18 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1986
  %ngroups = getelementptr inbounds %struct.command_details, %struct.command_details* %18, i32 0, i32 7, !dbg !1989
  %19 = load i32, i32* %ngroups, align 4, !dbg !1989
  %cmp24 = icmp sge i32 %19, 0, !dbg !1990
  br i1 %cmp24, label %if.then25, label %if.end32, !dbg !1991

if.then25:                                        ; preds = %if.then23
  %20 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1992
  %ngroups26 = getelementptr inbounds %struct.command_details, %struct.command_details* %20, i32 0, i32 7, !dbg !1995
  %21 = load i32, i32* %ngroups26, align 4, !dbg !1995
  %conv = sext i32 %21 to i64, !dbg !1992
  %22 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !1996
  %groups = getelementptr inbounds %struct.command_details, %struct.command_details* %22, i32 0, i32 10, !dbg !1997
  %23 = load i32*, i32** %groups, align 8, !dbg !1997
  %call27 = call i32 @setgroups(i64 %conv, i32* %23) #11, !dbg !1998
  %cmp28 = icmp slt i32 %call27, 0, !dbg !1999
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !2000

if.then30:                                        ; preds = %if.then25
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0)), !dbg !2001
  br label %done, !dbg !2003

if.end31:                                         ; preds = %if.then25
  br label %if.end32, !dbg !2004

if.end32:                                         ; preds = %if.end31, %if.then23
  br label %if.end33, !dbg !2005

if.end33:                                         ; preds = %if.end32, %if.end19
  %24 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2006
  %flags34 = getelementptr inbounds %struct.command_details, %struct.command_details* %24, i32 0, i32 9, !dbg !2008
  %25 = load i32, i32* %flags34, align 4, !dbg !2008
  %call35 = call i32 bitcast (i32 (...)* @ISSET to i32 (i32, i32)*)(i32 %25, i32 64), !dbg !2009
  %tobool36 = icmp ne i32 %call35, 0, !dbg !2009
  br i1 %tobool36, label %if.then37, label %if.end43, !dbg !2010

if.then37:                                        ; preds = %if.end33
  %26 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2011
  %priority = getelementptr inbounds %struct.command_details, %struct.command_details* %26, i32 0, i32 5, !dbg !2014
  %27 = load i32, i32* %priority, align 4, !dbg !2014
  %call38 = call i32 @setpriority(i32 0, i32 0, i32 %27) #11, !dbg !2015
  %cmp39 = icmp ne i32 %call38, 0, !dbg !2016
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !2017

if.then41:                                        ; preds = %if.then37
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i64 0, i64 0)), !dbg !2018
  br label %done, !dbg !2020

if.end42:                                         ; preds = %if.then37
  br label %if.end43, !dbg !2021

if.end43:                                         ; preds = %if.end42, %if.end33
  %28 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2022
  %flags44 = getelementptr inbounds %struct.command_details, %struct.command_details* %28, i32 0, i32 9, !dbg !2024
  %29 = load i32, i32* %flags44, align 4, !dbg !2024
  %call45 = call i32 bitcast (i32 (...)* @ISSET to i32 (i32, i32)*)(i32 %29, i32 128), !dbg !2025
  %tobool46 = icmp ne i32 %call45, 0, !dbg !2025
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !2026

if.then47:                                        ; preds = %if.end43
  %30 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2027
  %umask = getelementptr inbounds %struct.command_details, %struct.command_details* %30, i32 0, i32 4, !dbg !2028
  %31 = load i32, i32* %umask, align 8, !dbg !2028
  %call48 = call i32 @umask(i32 %31) #11, !dbg !2029
  br label %if.end49, !dbg !2030

if.end49:                                         ; preds = %if.then47, %if.end43
  %32 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2031
  %chroot = getelementptr inbounds %struct.command_details, %struct.command_details* %32, i32 0, i32 14, !dbg !2033
  %33 = load i8*, i8** %chroot, align 8, !dbg !2033
  %tobool50 = icmp ne i8* %33, null, !dbg !2031
  br i1 %tobool50, label %if.then51, label %if.end62, !dbg !2034

if.then51:                                        ; preds = %if.end49
  %34 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2035
  %chroot52 = getelementptr inbounds %struct.command_details, %struct.command_details* %34, i32 0, i32 14, !dbg !2038
  %35 = load i8*, i8** %chroot52, align 8, !dbg !2038
  %call53 = call i32 @chroot(i8* %35) #11, !dbg !2039
  %cmp54 = icmp ne i32 %call53, 0, !dbg !2040
  br i1 %cmp54, label %if.then59, label %lor.lhs.false, !dbg !2041

lor.lhs.false:                                    ; preds = %if.then51
  %call56 = call i32 @chdir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #11, !dbg !2042
  %cmp57 = icmp ne i32 %call56, 0, !dbg !2043
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !2044

if.then59:                                        ; preds = %lor.lhs.false, %if.then51
  %36 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2045
  %chroot60 = getelementptr inbounds %struct.command_details, %struct.command_details* %36, i32 0, i32 14, !dbg !2047
  %37 = load i8*, i8** %chroot60, align 8, !dbg !2047
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0), i8* %37), !dbg !2048
  br label %done, !dbg !2049

if.end61:                                         ; preds = %lor.lhs.false
  br label %if.end62, !dbg !2050

if.end62:                                         ; preds = %if.end61, %if.end49
  %38 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2051
  %uid = getelementptr inbounds %struct.command_details, %struct.command_details* %38, i32 0, i32 0, !dbg !2053
  %39 = load i32, i32* %uid, align 8, !dbg !2053
  %40 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2054
  %euid63 = getelementptr inbounds %struct.command_details, %struct.command_details* %40, i32 0, i32 1, !dbg !2055
  %41 = load i32, i32* %euid63, align 4, !dbg !2055
  %42 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2056
  %euid64 = getelementptr inbounds %struct.command_details, %struct.command_details* %42, i32 0, i32 1, !dbg !2057
  %43 = load i32, i32* %euid64, align 4, !dbg !2057
  %call65 = call i32 @setresuid(i32 %39, i32 %41, i32 %43) #11, !dbg !2058
  %cmp66 = icmp ne i32 %call65, 0, !dbg !2059
  br i1 %cmp66, label %if.then68, label %if.end71, !dbg !2060

if.then68:                                        ; preds = %if.end62
  %44 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2061
  %uid69 = getelementptr inbounds %struct.command_details, %struct.command_details* %44, i32 0, i32 0, !dbg !2063
  %45 = load i32, i32* %uid69, align 8, !dbg !2063
  %46 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2064
  %euid70 = getelementptr inbounds %struct.command_details, %struct.command_details* %46, i32 0, i32 1, !dbg !2065
  %47 = load i32, i32* %euid70, align 4, !dbg !2065
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18, i64 0, i64 0), i32 %45, i32 %47), !dbg !2066
  br label %done, !dbg !2067

if.end71:                                         ; preds = %if.end62
  %48 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2068
  %cwd = getelementptr inbounds %struct.command_details, %struct.command_details* %48, i32 0, i32 12, !dbg !2070
  %49 = load i8*, i8** %cwd, align 8, !dbg !2070
  %tobool72 = icmp ne i8* %49, null, !dbg !2068
  br i1 %tobool72, label %if.then73, label %if.end90, !dbg !2071

if.then73:                                        ; preds = %if.end71
  %50 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2072
  %chroot74 = getelementptr inbounds %struct.command_details, %struct.command_details* %50, i32 0, i32 14, !dbg !2075
  %51 = load i8*, i8** %chroot74, align 8, !dbg !2075
  %tobool75 = icmp ne i8* %51, null, !dbg !2072
  br i1 %tobool75, label %if.then81, label %lor.lhs.false76, !dbg !2076

lor.lhs.false76:                                  ; preds = %if.then73
  %52 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2077
  %cwd77 = getelementptr inbounds %struct.command_details, %struct.command_details* %52, i32 0, i32 12, !dbg !2078
  %53 = load i8*, i8** %cwd77, align 8, !dbg !2078
  %54 = load i8*, i8** getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 5), align 8, !dbg !2079
  %call78 = call i32 @strcmp(i8* %53, i8* %54) #14, !dbg !2080
  %cmp79 = icmp ne i32 %call78, 0, !dbg !2081
  br i1 %cmp79, label %if.then81, label %if.end89, !dbg !2082

if.then81:                                        ; preds = %lor.lhs.false76, %if.then73
  %55 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2083
  %cwd82 = getelementptr inbounds %struct.command_details, %struct.command_details* %55, i32 0, i32 12, !dbg !2086
  %56 = load i8*, i8** %cwd82, align 8, !dbg !2086
  %call83 = call i32 @chdir(i8* %56) #11, !dbg !2087
  %cmp84 = icmp ne i32 %call83, 0, !dbg !2088
  br i1 %cmp84, label %if.then86, label %if.end88, !dbg !2089

if.then86:                                        ; preds = %if.then81
  %57 = load %struct.command_details*, %struct.command_details** %details.addr, align 8, !dbg !2090
  %cwd87 = getelementptr inbounds %struct.command_details, %struct.command_details* %57, i32 0, i32 12, !dbg !2092
  %58 = load i8*, i8** %cwd87, align 8, !dbg !2092
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0), i8* %58), !dbg !2093
  br label %done, !dbg !2094

if.end88:                                         ; preds = %if.then81
  br label %if.end89, !dbg !2095

if.end89:                                         ; preds = %if.end88, %lor.lhs.false76
  br label %if.end90, !dbg !2096

if.end90:                                         ; preds = %if.end89, %if.end71
  call void @llvm.dbg.declare(metadata %struct.rlimit* %rl, metadata !2097, metadata !DIExpression()), !dbg !2099
  %call91 = call i32 @getrlimit(i32 6, %struct.rlimit* %rl) #11, !dbg !2100
  %cmp92 = icmp eq i32 %call91, 0, !dbg !2102
  br i1 %cmp92, label %if.then94, label %if.end103, !dbg !2103

if.then94:                                        ; preds = %if.end90
  %rlim_cur = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rl, i32 0, i32 0, !dbg !2104
  %59 = load i64, i64* %rlim_cur, align 8, !dbg !2104
  %cmp95 = icmp eq i64 %59, -1, !dbg !2107
  br i1 %cmp95, label %land.lhs.true97, label %if.end102, !dbg !2108

land.lhs.true97:                                  ; preds = %if.then94
  %rlim_max = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rl, i32 0, i32 1, !dbg !2109
  %60 = load i64, i64* %rlim_max, align 8, !dbg !2109
  %cmp98 = icmp eq i64 %60, -1, !dbg !2110
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !2111

if.then100:                                       ; preds = %land.lhs.true97
  %call101 = call i32 @setrlimit(i32 6, %struct.rlimit* @nproclimit) #11, !dbg !2112
  br label %if.end102, !dbg !2113

if.end102:                                        ; preds = %if.then100, %land.lhs.true97, %if.then94
  br label %if.end103, !dbg !2114

if.end103:                                        ; preds = %if.end102, %if.end90
  store i32 1, i32* %rval, align 4, !dbg !2115
  br label %done, !dbg !2116

done:                                             ; preds = %if.end103, %if.then86, %if.then68, %if.then59, %if.then41, %if.then30, %if.then17, %if.then8, %if.then
  call void @llvm.dbg.label(metadata !2117), !dbg !2118
  %61 = load i32, i32* %rval, align 4, !dbg !2119
  ret i32 %61, !dbg !2120
}

declare dso_local %struct.passwd* @getpwuid(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @policy_init_session(%struct.plugin_container* %plugin, %struct.passwd* %pwd) #0 !dbg !2121 {
entry:
  %retval = alloca i32, align 4
  %plugin.addr = alloca %struct.plugin_container*, align 8
  %pwd.addr = alloca %struct.passwd*, align 8
  store %struct.plugin_container* %plugin, %struct.plugin_container** %plugin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin.addr, metadata !2124, metadata !DIExpression()), !dbg !2125
  store %struct.passwd* %pwd, %struct.passwd** %pwd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.passwd** %pwd.addr, metadata !2126, metadata !DIExpression()), !dbg !2127
  %0 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !2128
  %u = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %0, i32 0, i32 4, !dbg !2130
  %policy = bitcast %union.anon* %u to %struct.policy_plugin**, !dbg !2131
  %1 = load %struct.policy_plugin*, %struct.policy_plugin** %policy, align 8, !dbg !2131
  %init_session = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %1, i32 0, i32 9, !dbg !2132
  %2 = load i32 (%struct.passwd*)*, i32 (%struct.passwd*)** %init_session, align 8, !dbg !2132
  %tobool = icmp ne i32 (%struct.passwd*)* %2, null, !dbg !2128
  br i1 %tobool, label %if.then, label %if.end, !dbg !2133

if.then:                                          ; preds = %entry
  %3 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !2134
  %u1 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %3, i32 0, i32 4, !dbg !2135
  %policy2 = bitcast %union.anon* %u1 to %struct.policy_plugin**, !dbg !2136
  %4 = load %struct.policy_plugin*, %struct.policy_plugin** %policy2, align 8, !dbg !2136
  %init_session3 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %4, i32 0, i32 9, !dbg !2137
  %5 = load i32 (%struct.passwd*)*, i32 (%struct.passwd*)** %init_session3, align 8, !dbg !2137
  %6 = load %struct.passwd*, %struct.passwd** %pwd.addr, align 8, !dbg !2138
  %call = call i32 %5(%struct.passwd* %6), !dbg !2134
  store i32 %call, i32* %retval, align 4, !dbg !2139
  br label %return, !dbg !2139

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !2140
  br label %return, !dbg !2140

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !2141
  ret i32 %7, !dbg !2141
}

; Function Attrs: nounwind
declare dso_local i32 @setegid(i32) #3

declare dso_local void @warning(i8*, ...) #2

; Function Attrs: nounwind
declare dso_local i32 @setgid(i32) #3

; Function Attrs: nounwind
declare dso_local i32 @setgroups(i64, i32*) #3

; Function Attrs: nounwind
declare dso_local i32 @setpriority(i32, i32, i32) #3

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #3

; Function Attrs: nounwind
declare dso_local i32 @chroot(i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @chdir(i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @setresuid(i32, i32, i32) #3

; Function Attrs: nounwind
declare dso_local i32 @getrlimit(i32, %struct.rlimit*) #3

; Function Attrs: nounwind
declare dso_local i32 @setrlimit(i32, %struct.rlimit*) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

declare dso_local i32 @sudo_execve(%struct.command_details*, i8**, i8**, %struct.command_status*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @policy_close(%struct.plugin_container* %plugin, i32 %exit_status, i32 %error) #0 !dbg !2142 {
entry:
  %plugin.addr = alloca %struct.plugin_container*, align 8
  %exit_status.addr = alloca i32, align 4
  %error.addr = alloca i32, align 4
  store %struct.plugin_container* %plugin, %struct.plugin_container** %plugin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin.addr, metadata !2145, metadata !DIExpression()), !dbg !2146
  store i32 %exit_status, i32* %exit_status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exit_status.addr, metadata !2147, metadata !DIExpression()), !dbg !2148
  store i32 %error, i32* %error.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %error.addr, metadata !2149, metadata !DIExpression()), !dbg !2150
  %0 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !2151
  %u = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %0, i32 0, i32 4, !dbg !2152
  %policy = bitcast %union.anon* %u to %struct.policy_plugin**, !dbg !2153
  %1 = load %struct.policy_plugin*, %struct.policy_plugin** %policy, align 8, !dbg !2153
  %close = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %1, i32 0, i32 3, !dbg !2154
  %2 = load void (i32, i32)*, void (i32, i32)** %close, align 8, !dbg !2154
  %3 = load i32, i32* %exit_status.addr, align 4, !dbg !2155
  %4 = load i32, i32* %error.addr, align 4, !dbg !2156
  call void %2(i32 %3, i32 %4), !dbg !2151
  ret void, !dbg !2157
}

; Function Attrs: noinline nounwind uwtable
define internal void @iolog_close(%struct.plugin_container* %plugin, i32 %exit_status, i32 %error) #0 !dbg !2158 {
entry:
  %plugin.addr = alloca %struct.plugin_container*, align 8
  %exit_status.addr = alloca i32, align 4
  %error.addr = alloca i32, align 4
  store %struct.plugin_container* %plugin, %struct.plugin_container** %plugin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %plugin.addr, metadata !2159, metadata !DIExpression()), !dbg !2160
  store i32 %exit_status, i32* %exit_status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exit_status.addr, metadata !2161, metadata !DIExpression()), !dbg !2162
  store i32 %error, i32* %error.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %error.addr, metadata !2163, metadata !DIExpression()), !dbg !2164
  %0 = load %struct.plugin_container*, %struct.plugin_container** %plugin.addr, align 8, !dbg !2165
  %u = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %0, i32 0, i32 4, !dbg !2166
  %io = bitcast %union.anon* %u to %struct.io_plugin**, !dbg !2167
  %1 = load %struct.io_plugin*, %struct.io_plugin** %io, align 8, !dbg !2167
  %close = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %1, i32 0, i32 3, !dbg !2168
  %2 = load void (i32, i32)*, void (i32, i32)** %close, align 8, !dbg !2168
  %3 = load i32, i32* %exit_status.addr, align 4, !dbg !2169
  %4 = load i32, i32* %error.addr, align 4, !dbg !2170
  call void %2(i32 %3, i32 %4), !dbg !2165
  ret void, !dbg !2171
}

declare dso_local void @warningx(i8*, ...) #2

declare dso_local i32 @easprintf(i8**, i8*, ...) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %"struct.std::__va_list"*) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #9

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

declare dso_local void @efree(i8*) #2

declare dso_local i32 @fcntl(i32, i32, ...) #2

declare dso_local i32 @open(i8*, i32, ...) #2

; Function Attrs: noreturn
declare dso_local void @error(i32, i8*, ...) #5

; Function Attrs: nounwind
declare dso_local i32 @dup2(i32, i32) #3

declare dso_local i32 @close(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #3

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #3

; Function Attrs: nounwind
declare dso_local i32 @getgid() #3

; Function Attrs: nounwind
declare dso_local i32 @getegid() #3

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #3

declare dso_local i8* @estrdup(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @get_user_groups(%struct.user_details* %ud) #0 !dbg !2172 {
entry:
  %retval = alloca i8*, align 8
  %ud.addr = alloca %struct.user_details*, align 8
  %gid_list = alloca i8*, align 8
  %glsize = alloca i64, align 8
  %cp = alloca i8*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.user_details* %ud, %struct.user_details** %ud.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.user_details** %ud.addr, metadata !2175, metadata !DIExpression()), !dbg !2176
  call void @llvm.dbg.declare(metadata i8** %gid_list, metadata !2177, metadata !DIExpression()), !dbg !2178
  store i8* null, i8** %gid_list, align 8, !dbg !2178
  call void @llvm.dbg.declare(metadata i64* %glsize, metadata !2179, metadata !DIExpression()), !dbg !2182
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !2183, metadata !DIExpression()), !dbg !2184
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2185, metadata !DIExpression()), !dbg !2186
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2187, metadata !DIExpression()), !dbg !2188
  %call = call i32 @getgroups(i32 0, i32* null) #11, !dbg !2189
  %0 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !2191
  %ngroups = getelementptr inbounds %struct.user_details, %struct.user_details* %0, i32 0, i32 10, !dbg !2192
  store i32 %call, i32* %ngroups, align 8, !dbg !2193
  %cmp = icmp sle i32 %call, 0, !dbg !2194
  br i1 %cmp, label %if.then, label %if.end, !dbg !2195

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !2196
  br label %return, !dbg !2196

if.end:                                           ; preds = %entry
  %1 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !2197
  %ngroups1 = getelementptr inbounds %struct.user_details, %struct.user_details* %1, i32 0, i32 10, !dbg !2198
  %2 = load i32, i32* %ngroups1, align 8, !dbg !2198
  %conv = sext i32 %2 to i64, !dbg !2197
  %call2 = call i8* @emalloc2(i64 %conv, i64 4), !dbg !2199
  %3 = bitcast i8* %call2 to i32*, !dbg !2199
  %4 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !2200
  %groups = getelementptr inbounds %struct.user_details, %struct.user_details* %4, i32 0, i32 9, !dbg !2201
  store i32* %3, i32** %groups, align 8, !dbg !2202
  %5 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !2203
  %ngroups3 = getelementptr inbounds %struct.user_details, %struct.user_details* %5, i32 0, i32 10, !dbg !2205
  %6 = load i32, i32* %ngroups3, align 8, !dbg !2205
  %7 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !2206
  %groups4 = getelementptr inbounds %struct.user_details, %struct.user_details* %7, i32 0, i32 9, !dbg !2207
  %8 = load i32*, i32** %groups4, align 8, !dbg !2207
  %call5 = call i32 @getgroups(i32 %6, i32* %8) #11, !dbg !2208
  %cmp6 = icmp slt i32 %call5, 0, !dbg !2209
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !2210

if.then8:                                         ; preds = %if.end
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0)) #12, !dbg !2211
  unreachable, !dbg !2211

if.end9:                                          ; preds = %if.end
  %9 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !2212
  %ngroups10 = getelementptr inbounds %struct.user_details, %struct.user_details* %9, i32 0, i32 10, !dbg !2213
  %10 = load i32, i32* %ngroups10, align 8, !dbg !2213
  %mul = mul nsw i32 %10, 1, !dbg !2214
  %conv11 = sext i32 %mul to i64, !dbg !2215
  %add = add i64 7, %conv11, !dbg !2216
  store i64 %add, i64* %glsize, align 8, !dbg !2217
  %11 = load i64, i64* %glsize, align 8, !dbg !2218
  %call12 = call i8* @emalloc(i64 %11), !dbg !2219
  store i8* %call12, i8** %gid_list, align 8, !dbg !2220
  %12 = load i8*, i8** %gid_list, align 8, !dbg !2221
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0), i64 7, i1 false), !dbg !2222
  %13 = load i8*, i8** %gid_list, align 8, !dbg !2223
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 8, !dbg !2224
  %add.ptr13 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !2225
  store i8* %add.ptr13, i8** %cp, align 8, !dbg !2226
  store i32 0, i32* %i, align 4, !dbg !2227
  br label %for.cond, !dbg !2229

for.cond:                                         ; preds = %for.inc, %if.end9
  %14 = load i32, i32* %i, align 4, !dbg !2230
  %15 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !2232
  %ngroups14 = getelementptr inbounds %struct.user_details, %struct.user_details* %15, i32 0, i32 10, !dbg !2233
  %16 = load i32, i32* %ngroups14, align 8, !dbg !2233
  %cmp15 = icmp slt i32 %14, %16, !dbg !2234
  br i1 %cmp15, label %for.body, label %for.end, !dbg !2235

for.body:                                         ; preds = %for.cond
  %17 = load i8*, i8** %cp, align 8, !dbg !2236
  %18 = load i64, i64* %glsize, align 8, !dbg !2238
  %19 = load i8*, i8** %cp, align 8, !dbg !2239
  %20 = load i8*, i8** %gid_list, align 8, !dbg !2240
  %sub.ptr.lhs.cast = ptrtoint i8* %19 to i64, !dbg !2241
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !2241
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2241
  %sub = sub i64 %18, %sub.ptr.sub, !dbg !2242
  %21 = load i32, i32* %i, align 4, !dbg !2243
  %tobool = icmp ne i32 %21, 0, !dbg !2243
  %22 = zext i1 %tobool to i64, !dbg !2243
  %cond = select i1 %tobool, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0), !dbg !2243
  %23 = load %struct.user_details*, %struct.user_details** %ud.addr, align 8, !dbg !2244
  %groups17 = getelementptr inbounds %struct.user_details, %struct.user_details* %23, i32 0, i32 9, !dbg !2245
  %24 = load i32*, i32** %groups17, align 8, !dbg !2245
  %25 = load i32, i32* %i, align 4, !dbg !2246
  %idxprom = sext i32 %25 to i64, !dbg !2244
  %arrayidx = getelementptr inbounds i32, i32* %24, i64 %idxprom, !dbg !2244
  %26 = load i32, i32* %arrayidx, align 4, !dbg !2244
  %call18 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %17, i64 %sub, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i8* %cond, i32 %26) #11, !dbg !2247
  store i32 %call18, i32* %len, align 4, !dbg !2248
  %27 = load i32, i32* %len, align 4, !dbg !2249
  %28 = load i8*, i8** %cp, align 8, !dbg !2250
  %idx.ext = sext i32 %27 to i64, !dbg !2250
  %add.ptr19 = getelementptr inbounds i8, i8* %28, i64 %idx.ext, !dbg !2250
  store i8* %add.ptr19, i8** %cp, align 8, !dbg !2250
  br label %for.inc, !dbg !2251

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !2252
  %inc = add nsw i32 %29, 1, !dbg !2252
  store i32 %inc, i32* %i, align 4, !dbg !2252
  br label %for.cond, !dbg !2253, !llvm.loop !2254

for.end:                                          ; preds = %for.cond
  %30 = load i8*, i8** %gid_list, align 8, !dbg !2256
  store i8* %30, i8** %retval, align 8, !dbg !2257
  br label %return, !dbg !2257

return:                                           ; preds = %for.end, %if.then
  %31 = load i8*, i8** %retval, align 8, !dbg !2258
  ret i8* %31, !dbg !2258
}

; Function Attrs: nounwind
declare dso_local i8* @getcwd(i8*, i64) #3

declare dso_local i8* @fmt_string(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @ttyname(i32) #3

; Function Attrs: nounwind
declare dso_local i32 @gethostname(i8*, i64) #3

declare dso_local i64 @strlcpy(i8*, i8*, i64) #2

declare dso_local void @get_ttysize(i32*, i32*) #2

; Function Attrs: nounwind
declare dso_local i32 @getgroups(i32, i32*) #3

declare dso_local i8* @emalloc2(i64, i64) #2

declare dso_local i8* @emalloc(i64) #2

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readnone willreturn
declare dso_local i32* @__errno_location() #10

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8*, i8**, i32) #3

declare dso_local i32 @atobool(i8*) #2

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #3

; Function Attrs: nounwind readonly willreturn
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: nounwind readonly willreturn
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: nounwind readnone willreturn
declare dso_local i16** @__ctype_b_loc() #10

declare dso_local i32 @sudo_conversation(i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*) #2

declare dso_local i32 @_sudo_printf(i32, i8*, ...) #2

attributes #0 = { noinline nounwind uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon,+outline-atomics" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon,+outline-atomics" }
attributes #3 = { nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon,+outline-atomics" }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { noreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon,+outline-atomics" }
attributes #6 = { noreturn nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon,+outline-atomics" }
attributes #7 = { nounwind readonly willreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon,+outline-atomics" }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { argmemonly nofree nounwind willreturn }
attributes #10 = { nounwind readnone willreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon,+outline-atomics" }
attributes #11 = { nounwind }
attributes #12 = { noreturn }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly willreturn }
attributes #15 = { nounwind readnone willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!236, !237, !238, !239, !240, !241, !242, !243, !244}
!llvm.ident = !{!245}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "user_details", scope: !2, file: !3, line: 102, type: !219, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 13.0.1-2ubuntu2.2", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !48, globals: !62, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "sudo.c", directory: "/root/DOPExploit/MyDOP/benchmarks/sudo-1.8.0/src")
!4 = !{!5, !12, !33}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__priority_which", file: !6, line: 187, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/resource.h", directory: "")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "PRIO_PROCESS", value: 0)
!10 = !DIEnumerator(name: "PRIO_PGRP", value: 1)
!11 = !DIEnumerator(name: "PRIO_USER", value: 2)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__rlimit_resource", file: !6, line: 31, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32}
!14 = !DIEnumerator(name: "RLIMIT_CPU", value: 0)
!15 = !DIEnumerator(name: "RLIMIT_FSIZE", value: 1)
!16 = !DIEnumerator(name: "RLIMIT_DATA", value: 2)
!17 = !DIEnumerator(name: "RLIMIT_STACK", value: 3)
!18 = !DIEnumerator(name: "RLIMIT_CORE", value: 4)
!19 = !DIEnumerator(name: "__RLIMIT_RSS", value: 5)
!20 = !DIEnumerator(name: "RLIMIT_NOFILE", value: 7)
!21 = !DIEnumerator(name: "__RLIMIT_OFILE", value: 7)
!22 = !DIEnumerator(name: "RLIMIT_AS", value: 9)
!23 = !DIEnumerator(name: "__RLIMIT_NPROC", value: 6)
!24 = !DIEnumerator(name: "__RLIMIT_MEMLOCK", value: 8)
!25 = !DIEnumerator(name: "__RLIMIT_LOCKS", value: 10)
!26 = !DIEnumerator(name: "__RLIMIT_SIGPENDING", value: 11)
!27 = !DIEnumerator(name: "__RLIMIT_MSGQUEUE", value: 12)
!28 = !DIEnumerator(name: "__RLIMIT_NICE", value: 13)
!29 = !DIEnumerator(name: "__RLIMIT_RTPRIO", value: 14)
!30 = !DIEnumerator(name: "__RLIMIT_RTTIME", value: 15)
!31 = !DIEnumerator(name: "__RLIMIT_NLIMITS", value: 16)
!32 = !DIEnumerator(name: "__RLIM_NLIMITS", value: 16)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 46, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47}
!36 = !DIEnumerator(name: "_ISupper", value: 256)
!37 = !DIEnumerator(name: "_ISlower", value: 512)
!38 = !DIEnumerator(name: "_ISalpha", value: 1024)
!39 = !DIEnumerator(name: "_ISdigit", value: 2048)
!40 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!41 = !DIEnumerator(name: "_ISspace", value: 8192)
!42 = !DIEnumerator(name: "_ISprint", value: 16384)
!43 = !DIEnumerator(name: "_ISgraph", value: 32768)
!44 = !DIEnumerator(name: "_ISblank", value: 1)
!45 = !DIEnumerator(name: "_IScntrl", value: 2)
!46 = !DIEnumerator(name: "_ISpunct", value: 4)
!47 = !DIEnumerator(name: "_ISalnum", value: 8)
!48 = !{!49, !50, !53, !7, !54, !55, !58, !60, !61}
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "__rlim_t", file: !51, line: 157, baseType: !52)
!51 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/types.h", directory: "")
!52 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!53 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!54 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !56, line: 64, baseType: !57)
!56 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/sys/types.h", directory: "")
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !51, line: 147, baseType: !7)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !56, line: 79, baseType: !59)
!59 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !51, line: 146, baseType: !7)
!60 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!61 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!62 = !{!63, !196, !0, !202, !204, !206, !208, !210, !217}
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "policy_plugin", scope: !2, file: !3, line: 100, type: !65, isLocal: false, isDefinition: true)
!65 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plugin_container", file: !66, line: 60, size: 320, elements: !67)
!66 = !DIFile(filename: "./sudo_plugin_int.h", directory: "/root/DOPExploit/MyDOP/benchmarks/sudo-1.8.0/src")
!67 = !{!68, !70, !71, !75, !76}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !65, file: !66, line: 61, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !65, file: !66, line: 62, baseType: !69, size: 64, offset: 64)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !65, file: !66, line: 63, baseType: !72, size: 64, offset: 128)
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!73 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !74)
!74 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !65, file: !66, line: 64, baseType: !49, size: 64, offset: 192)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !65, file: !66, line: 70, baseType: !77, size: 64, offset: 256)
!77 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !65, file: !66, line: 65, size: 64, elements: !78)
!78 = !{!79, !85, !159, !179}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !77, file: !66, line: 66, baseType: !80, size: 64)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!81 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "generic_plugin", file: !66, line: 23, size: 64, elements: !82)
!82 = !{!83, !84}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !81, file: !66, line: 24, baseType: !7, size: 32)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !81, file: !66, line: 25, baseType: !7, size: 32, offset: 32)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !77, file: !66, line: 67, baseType: !86, size: 64)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!87 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "policy_plugin", file: !88, line: 59, size: 576, elements: !89)
!88 = !DIFile(filename: "../include/sudo_plugin.h", directory: "/root/DOPExploit/MyDOP/benchmarks/sudo-1.8.0/src")
!89 = !{!90, !91, !92, !118, !122, !126, !132, !136, !140, !144}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !87, file: !88, line: 61, baseType: !7, size: 32)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !87, file: !88, line: 62, baseType: !7, size: 32, offset: 32)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !87, file: !88, line: 63, baseType: !93, size: 64, offset: 64)
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!94 = !DISubroutineType(types: !95)
!95 = !{!54, !7, !96, !112, !116, !116, !116}
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "sudo_conv_t", file: !88, line: 53, baseType: !97)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!98 = !DISubroutineType(types: !99)
!99 = !{!54, !54, !100, !107}
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sudo_conv_message", file: !88, line: 37, size: 128, elements: !103)
!103 = !{!104, !105, !106}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "msg_type", scope: !102, file: !88, line: 44, baseType: !54, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !102, file: !88, line: 45, baseType: !54, size: 32, offset: 32)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !102, file: !88, line: 46, baseType: !72, size: 64, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sudo_conv_reply", file: !88, line: 49, size: 64, elements: !109)
!109 = !{!110}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !108, file: !88, line: 50, baseType: !111, size: 64)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "sudo_printf_t", file: !88, line: 55, baseType: !113)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!114 = !DISubroutineType(types: !115)
!115 = !{!54, !54, !72, null}
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !87, file: !88, line: 66, baseType: !119, size: 64, offset: 128)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!120 = !DISubroutineType(types: !121)
!121 = !{null, !54, !54}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "show_version", scope: !87, file: !88, line: 67, baseType: !123, size: 64, offset: 192)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DISubroutineType(types: !125)
!125 = !{!54, !54}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "check_policy", scope: !87, file: !88, line: 68, baseType: !127, size: 64, offset: 256)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = !DISubroutineType(types: !129)
!129 = !{!54, !54, !116, !130, !131, !131, !131}
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !87, file: !88, line: 71, baseType: !133, size: 64, offset: 320)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!134 = !DISubroutineType(types: !135)
!135 = !{!54, !54, !116, !54, !72}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !87, file: !88, line: 73, baseType: !137, size: 64, offset: 384)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!138 = !DISubroutineType(types: !139)
!139 = !{!54}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "invalidate", scope: !87, file: !88, line: 74, baseType: !141, size: 64, offset: 448)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64)
!142 = !DISubroutineType(types: !143)
!143 = !{null, !54}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "init_session", scope: !87, file: !88, line: 75, baseType: !145, size: 64, offset: 512)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = !DISubroutineType(types: !147)
!147 = !{!54, !148}
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !150, line: 49, size: 384, elements: !151)
!150 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!151 = !{!152, !153, !154, !155, !156, !157, !158}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !149, file: !150, line: 51, baseType: !111, size: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !149, file: !150, line: 52, baseType: !111, size: 64, offset: 64)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !149, file: !150, line: 54, baseType: !59, size: 32, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !149, file: !150, line: 55, baseType: !57, size: 32, offset: 160)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !149, file: !150, line: 56, baseType: !111, size: 64, offset: 192)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !149, file: !150, line: 57, baseType: !111, size: 64, offset: 256)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !149, file: !150, line: 58, baseType: !111, size: 64, offset: 320)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !77, file: !66, line: 68, baseType: !160, size: 64)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_plugin", file: !88, line: 79, size: 576, elements: !162)
!162 = !{!163, !164, !165, !169, !170, !171, !175, !176, !177, !178}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !161, file: !88, line: 81, baseType: !7, size: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !161, file: !88, line: 82, baseType: !7, size: 32, offset: 32)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !161, file: !88, line: 83, baseType: !166, size: 64, offset: 64)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!167 = !DISubroutineType(types: !168)
!168 = !{!54, !7, !96, !112, !116, !116, !116, !54, !116, !116}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !161, file: !88, line: 87, baseType: !119, size: 64, offset: 128)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "show_version", scope: !161, file: !88, line: 88, baseType: !123, size: 64, offset: 192)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyin", scope: !161, file: !88, line: 89, baseType: !172, size: 64, offset: 256)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!173 = !DISubroutineType(types: !174)
!174 = !{!54, !72, !7}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyout", scope: !161, file: !88, line: 90, baseType: !172, size: 64, offset: 320)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdin", scope: !161, file: !88, line: 91, baseType: !172, size: 64, offset: 384)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdout", scope: !161, file: !88, line: 92, baseType: !172, size: 64, offset: 448)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "log_stderr", scope: !161, file: !88, line: 93, baseType: !172, size: 64, offset: 512)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "io_1_0", scope: !77, file: !66, line: 69, baseType: !180, size: 64)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_plugin_1_0", file: !66, line: 32, size: 576, elements: !182)
!182 = !{!183, !184, !185, !189, !190, !191, !192, !193, !194, !195}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !181, file: !66, line: 33, baseType: !7, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !181, file: !66, line: 34, baseType: !7, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !181, file: !66, line: 35, baseType: !186, size: 64, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!187 = !DISubroutineType(types: !188)
!188 = !{!54, !7, !96, !112, !116, !116, !54, !116, !116}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !181, file: !66, line: 39, baseType: !119, size: 64, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "show_version", scope: !181, file: !66, line: 40, baseType: !123, size: 64, offset: 192)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyin", scope: !181, file: !66, line: 41, baseType: !172, size: 64, offset: 256)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyout", scope: !181, file: !66, line: 42, baseType: !172, size: 64, offset: 320)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdin", scope: !181, file: !66, line: 43, baseType: !172, size: 64, offset: 384)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdout", scope: !181, file: !66, line: 44, baseType: !172, size: 64, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "log_stderr", scope: !181, file: !66, line: 45, baseType: !172, size: 64, offset: 512)
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(name: "io_plugins", scope: !2, file: !3, line: 101, type: !198, isLocal: false, isDefinition: true)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plugin_container_list", file: !66, line: 72, size: 128, elements: !199)
!199 = !{!200, !201}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !198, file: !66, line: 72, baseType: !69, size: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !198, file: !66, line: 72, baseType: !69, size: 64, offset: 64)
!202 = !DIGlobalVariableExpression(var: !203, expr: !DIExpression())
!203 = distinct !DIGlobalVariable(name: "list_user", scope: !2, file: !3, line: 103, type: !72, isLocal: false, isDefinition: true)
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "runas_user", scope: !2, file: !3, line: 103, type: !72, isLocal: false, isDefinition: true)
!206 = !DIGlobalVariableExpression(var: !207, expr: !DIExpression())
!207 = distinct !DIGlobalVariable(name: "runas_group", scope: !2, file: !3, line: 103, type: !72, isLocal: false, isDefinition: true)
!208 = !DIGlobalVariableExpression(var: !209, expr: !DIExpression())
!209 = distinct !DIGlobalVariable(name: "debug_level", scope: !2, file: !3, line: 104, type: !54, isLocal: false, isDefinition: true)
!210 = !DIGlobalVariableExpression(var: !211, expr: !DIExpression())
!211 = distinct !DIGlobalVariable(name: "nproclimit", scope: !2, file: !3, line: 153, type: !212, isLocal: true, isDefinition: true)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !6, line: 139, size: 128, elements: !213)
!213 = !{!214, !216}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !212, file: !6, line: 142, baseType: !215, size: 64)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "rlim_t", file: !6, line: 131, baseType: !50)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !212, file: !6, line: 144, baseType: !215, size: 64, offset: 64)
!217 = !DIGlobalVariableExpression(var: !218, expr: !DIExpression())
!218 = distinct !DIGlobalVariable(name: "corelimit", scope: !2, file: !3, line: 150, type: !212, isLocal: true, isDefinition: true)
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_details", file: !220, line: 94, size: 640, elements: !221)
!220 = !DIFile(filename: "./sudo.h", directory: "/root/DOPExploit/MyDOP/benchmarks/sudo-1.8.0/src")
!221 = !{!222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !233, !234, !235}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !219, file: !220, line: 95, baseType: !58, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !219, file: !220, line: 96, baseType: !58, size: 32, offset: 32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !219, file: !220, line: 97, baseType: !58, size: 32, offset: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !219, file: !220, line: 98, baseType: !58, size: 32, offset: 96)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "username", scope: !219, file: !220, line: 99, baseType: !72, size: 64, offset: 128)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !219, file: !220, line: 100, baseType: !72, size: 64, offset: 192)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !219, file: !220, line: 101, baseType: !72, size: 64, offset: 256)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !219, file: !220, line: 102, baseType: !72, size: 64, offset: 320)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "shell", scope: !219, file: !220, line: 103, baseType: !72, size: 64, offset: 384)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !219, file: !220, line: 104, baseType: !232, size: 64, offset: 448)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !219, file: !220, line: 105, baseType: !54, size: 32, offset: 512)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "ts_cols", scope: !219, file: !220, line: 106, baseType: !54, size: 32, offset: 544)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "ts_lines", scope: !219, file: !220, line: 107, baseType: !54, size: 32, offset: 576)
!236 = !{i32 7, !"Dwarf Version", i32 4}
!237 = !{i32 2, !"Debug Info Version", i32 3}
!238 = !{i32 1, !"wchar_size", i32 4}
!239 = !{i32 1, !"branch-target-enforcement", i32 0}
!240 = !{i32 1, !"sign-return-address", i32 0}
!241 = !{i32 1, !"sign-return-address-all", i32 0}
!242 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!243 = !{i32 7, !"uwtable", i32 1}
!244 = !{i32 7, !"frame-pointer", i32 1}
!245 = !{!"Ubuntu clang version 13.0.1-2ubuntu2.2"}
!246 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 157, type: !247, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !249)
!247 = !DISubroutineType(types: !248)
!248 = !{!54, !54, !130, !130}
!249 = !{}
!250 = !DILocalVariable(name: "argc", arg: 1, scope: !246, file: !3, line: 157, type: !54)
!251 = !DILocation(line: 157, column: 10, scope: !246)
!252 = !DILocalVariable(name: "argv", arg: 2, scope: !246, file: !3, line: 157, type: !130)
!253 = !DILocation(line: 157, column: 22, scope: !246)
!254 = !DILocalVariable(name: "envp", arg: 3, scope: !246, file: !3, line: 157, type: !130)
!255 = !DILocation(line: 157, column: 36, scope: !246)
!256 = !DILocalVariable(name: "nargc", scope: !246, file: !3, line: 159, type: !54)
!257 = !DILocation(line: 159, column: 9, scope: !246)
!258 = !DILocalVariable(name: "sudo_mode", scope: !246, file: !3, line: 159, type: !54)
!259 = !DILocation(line: 159, column: 16, scope: !246)
!260 = !DILocalVariable(name: "exitcode", scope: !246, file: !3, line: 159, type: !54)
!261 = !DILocation(line: 159, column: 27, scope: !246)
!262 = !DILocalVariable(name: "nargv", scope: !246, file: !3, line: 160, type: !130)
!263 = !DILocation(line: 160, column: 12, scope: !246)
!264 = !DILocalVariable(name: "settings", scope: !246, file: !3, line: 160, type: !130)
!265 = !DILocation(line: 160, column: 21, scope: !246)
!266 = !DILocalVariable(name: "env_add", scope: !246, file: !3, line: 160, type: !130)
!267 = !DILocation(line: 160, column: 33, scope: !246)
!268 = !DILocalVariable(name: "user_info", scope: !246, file: !3, line: 161, type: !130)
!269 = !DILocation(line: 161, column: 12, scope: !246)
!270 = !DILocalVariable(name: "command_info", scope: !246, file: !3, line: 161, type: !130)
!271 = !DILocation(line: 161, column: 25, scope: !246)
!272 = !DILocalVariable(name: "argv_out", scope: !246, file: !3, line: 161, type: !130)
!273 = !DILocation(line: 161, column: 41, scope: !246)
!274 = !DILocalVariable(name: "user_env_out", scope: !246, file: !3, line: 161, type: !130)
!275 = !DILocation(line: 161, column: 53, scope: !246)
!276 = !DILocalVariable(name: "plugin", scope: !246, file: !3, line: 162, type: !69)
!277 = !DILocation(line: 162, column: 30, scope: !246)
!278 = !DILocalVariable(name: "next", scope: !246, file: !3, line: 162, type: !69)
!279 = !DILocation(line: 162, column: 39, scope: !246)
!280 = !DILocalVariable(name: "command_details", scope: !246, file: !3, line: 163, type: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "command_details", file: !220, line: 124, size: 768, elements: !282)
!282 = !{!283, !284, !285, !286, !287, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !281, file: !220, line: 125, baseType: !58, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !281, file: !220, line: 126, baseType: !58, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !281, file: !220, line: 127, baseType: !55, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !281, file: !220, line: 128, baseType: !55, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "umask", scope: !281, file: !220, line: 129, baseType: !288, size: 32, offset: 128)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !56, line: 69, baseType: !289)
!289 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !51, line: 150, baseType: !7)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !281, file: !220, line: 130, baseType: !54, size: 32, offset: 160)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !281, file: !220, line: 131, baseType: !54, size: 32, offset: 192)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !281, file: !220, line: 132, baseType: !54, size: 32, offset: 224)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "closefrom", scope: !281, file: !220, line: 133, baseType: !54, size: 32, offset: 256)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !281, file: !220, line: 134, baseType: !54, size: 32, offset: 288)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !281, file: !220, line: 135, baseType: !232, size: 64, offset: 320)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !281, file: !220, line: 136, baseType: !72, size: 64, offset: 384)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !281, file: !220, line: 137, baseType: !72, size: 64, offset: 448)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "login_class", scope: !281, file: !220, line: 138, baseType: !72, size: 64, offset: 512)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "chroot", scope: !281, file: !220, line: 139, baseType: !72, size: 64, offset: 576)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "selinux_role", scope: !281, file: !220, line: 140, baseType: !72, size: 64, offset: 640)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "selinux_type", scope: !281, file: !220, line: 141, baseType: !72, size: 64, offset: 704)
!302 = !DILocation(line: 163, column: 28, scope: !246)
!303 = !DILocalVariable(name: "mask", scope: !246, file: !3, line: 164, type: !304)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !305, line: 7, baseType: !306)
!305 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/types/sigset_t.h", directory: "")
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !307, line: 8, baseType: !308)
!307 = !DIFile(filename: "/usr/include/aarch64-linux-gnu/bits/types/__sigset_t.h", directory: "")
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !307, line: 5, size: 1024, elements: !309)
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !308, file: !307, line: 7, baseType: !311, size: 1024)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !52, size: 1024, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 16)
!314 = !DILocation(line: 164, column: 14, scope: !246)
!315 = !DILocalVariable(name: "ok", scope: !246, file: !3, line: 165, type: !54)
!316 = !DILocation(line: 165, column: 9, scope: !246)
!317 = !DILocation(line: 167, column: 21, scope: !246)
!318 = !DILocation(line: 167, column: 2, scope: !246)
!319 = !DILocation(line: 173, column: 12, scope: !246)
!320 = !DILocation(line: 174, column: 12, scope: !246)
!321 = !DILocation(line: 175, column: 5, scope: !246)
!322 = !DILocation(line: 176, column: 5, scope: !246)
!323 = !DILocation(line: 180, column: 5, scope: !246)
!324 = !DILocalVariable(name: "b1", scope: !246, file: !3, line: 182, type: !54)
!325 = !DILocation(line: 182, column: 9, scope: !246)
!326 = !DILocation(line: 183, column: 24, scope: !246)
!327 = !DILocation(line: 183, column: 5, scope: !246)
!328 = !DILocation(line: 184, column: 9, scope: !329)
!329 = distinct !DILexicalBlock(scope: !246, file: !3, line: 184, column: 9)
!330 = !DILocation(line: 184, column: 12, scope: !329)
!331 = !DILocation(line: 184, column: 9, scope: !246)
!332 = !DILocation(line: 185, column: 21, scope: !333)
!333 = distinct !DILexicalBlock(scope: !329, file: !3, line: 184, column: 17)
!334 = !DILocation(line: 185, column: 19, scope: !333)
!335 = !DILocation(line: 186, column: 5, scope: !333)
!336 = !DILocation(line: 193, column: 28, scope: !246)
!337 = !DILocation(line: 193, column: 34, scope: !246)
!338 = !DILocation(line: 193, column: 17, scope: !246)
!339 = !DILocation(line: 193, column: 15, scope: !246)
!340 = !DILocation(line: 196, column: 38, scope: !246)
!341 = !DILocation(line: 196, column: 48, scope: !246)
!342 = !DILocation(line: 196, column: 59, scope: !246)
!343 = !DILocation(line: 196, column: 10, scope: !246)
!344 = !DILocation(line: 196, column: 8, scope: !246)
!345 = !DILocation(line: 197, column: 9, scope: !346)
!346 = distinct !DILexicalBlock(scope: !246, file: !3, line: 197, column: 9)
!347 = !DILocation(line: 197, column: 12, scope: !346)
!348 = !DILocation(line: 197, column: 9, scope: !246)
!349 = !DILocation(line: 198, column: 6, scope: !350)
!350 = distinct !DILexicalBlock(scope: !351, file: !3, line: 198, column: 6)
!351 = distinct !DILexicalBlock(scope: !346, file: !3, line: 197, column: 21)
!352 = !DILocation(line: 198, column: 9, scope: !350)
!353 = !DILocation(line: 198, column: 6, scope: !351)
!354 = !DILocation(line: 199, column: 6, scope: !350)
!355 = !DILocation(line: 201, column: 6, scope: !350)
!356 = !DILocation(line: 202, column: 5, scope: !351)
!357 = !DILocation(line: 204, column: 35, scope: !246)
!358 = !DILocation(line: 204, column: 5, scope: !246)
!359 = !DILocation(line: 205, column: 13, scope: !246)
!360 = !DILocation(line: 205, column: 23, scope: !246)
!361 = !DILocation(line: 205, column: 5, scope: !246)
!362 = !DILocation(line: 207, column: 6, scope: !363)
!363 = distinct !DILexicalBlock(scope: !246, file: !3, line: 205, column: 36)
!364 = !DILocation(line: 208, column: 23, scope: !365)
!365 = distinct !DILexicalBlock(scope: !363, file: !3, line: 208, column: 10)
!366 = !DILocation(line: 208, column: 27, scope: !365)
!367 = !DILocation(line: 208, column: 10, scope: !363)
!368 = !DILocation(line: 209, column: 10, scope: !365)
!369 = !DILocation(line: 209, column: 3, scope: !365)
!370 = !DILocation(line: 210, column: 56, scope: !363)
!371 = !DILocation(line: 210, column: 42, scope: !363)
!372 = !DILocation(line: 210, column: 6, scope: !363)
!373 = !DILocation(line: 211, column: 6, scope: !374)
!374 = distinct !DILexicalBlock(scope: !363, file: !3, line: 211, column: 6)
!375 = !DILocation(line: 211, column: 6, scope: !376)
!376 = distinct !DILexicalBlock(scope: !374, file: !3, line: 211, column: 6)
!377 = !DILocation(line: 212, column: 19, scope: !378)
!378 = distinct !DILexicalBlock(scope: !376, file: !3, line: 211, column: 42)
!379 = !DILocation(line: 212, column: 27, scope: !378)
!380 = !DILocation(line: 212, column: 37, scope: !378)
!381 = !DILocation(line: 213, column: 7, scope: !378)
!382 = !DILocation(line: 213, column: 14, scope: !378)
!383 = !DILocation(line: 213, column: 21, scope: !378)
!384 = !DILocation(line: 212, column: 8, scope: !378)
!385 = !DILocation(line: 212, column: 6, scope: !378)
!386 = !DILocation(line: 214, column: 7, scope: !387)
!387 = distinct !DILexicalBlock(scope: !378, file: !3, line: 214, column: 7)
!388 = !DILocation(line: 214, column: 10, scope: !387)
!389 = !DILocation(line: 214, column: 7, scope: !378)
!390 = !DILocation(line: 215, column: 26, scope: !387)
!391 = !DILocation(line: 215, column: 48, scope: !387)
!392 = !DILocation(line: 215, column: 34, scope: !387)
!393 = !DILocation(line: 215, column: 7, scope: !387)
!394 = !DILocation(line: 216, column: 6, scope: !378)
!395 = distinct !{!395, !373, !396, !397}
!396 = !DILocation(line: 216, column: 6, scope: !374)
!397 = !{!"llvm.loop.mustprogress"}
!398 = !DILocation(line: 217, column: 6, scope: !363)
!399 = !DILocation(line: 220, column: 11, scope: !363)
!400 = !DILocation(line: 220, column: 9, scope: !363)
!401 = !DILocation(line: 221, column: 11, scope: !363)
!402 = !DILocation(line: 221, column: 14, scope: !363)
!403 = !DILocation(line: 221, column: 6, scope: !363)
!404 = !DILocation(line: 224, column: 40, scope: !363)
!405 = !DILocation(line: 224, column: 50, scope: !363)
!406 = !DILocation(line: 224, column: 6, scope: !363)
!407 = !DILocation(line: 225, column: 6, scope: !363)
!408 = !DILocation(line: 231, column: 39, scope: !363)
!409 = !DILocation(line: 231, column: 46, scope: !363)
!410 = !DILocation(line: 232, column: 9, scope: !363)
!411 = !DILocation(line: 232, column: 3, scope: !363)
!412 = !DILocation(line: 232, column: 37, scope: !363)
!413 = !DILocation(line: 231, column: 11, scope: !363)
!414 = !DILocation(line: 231, column: 9, scope: !363)
!415 = !DILocation(line: 233, column: 11, scope: !363)
!416 = !DILocation(line: 233, column: 14, scope: !363)
!417 = !DILocation(line: 233, column: 6, scope: !363)
!418 = !DILocation(line: 236, column: 40, scope: !363)
!419 = !DILocation(line: 236, column: 47, scope: !363)
!420 = !DILocation(line: 236, column: 54, scope: !363)
!421 = !DILocation(line: 236, column: 11, scope: !363)
!422 = !DILocation(line: 236, column: 9, scope: !363)
!423 = !DILocation(line: 238, column: 48, scope: !363)
!424 = !DILocation(line: 238, column: 6, scope: !363)
!425 = !DILocation(line: 239, column: 10, scope: !426)
!426 = distinct !DILexicalBlock(scope: !363, file: !3, line: 239, column: 10)
!427 = !DILocation(line: 239, column: 13, scope: !426)
!428 = !DILocation(line: 239, column: 10, scope: !363)
!429 = !DILocation(line: 240, column: 7, scope: !430)
!430 = distinct !DILexicalBlock(scope: !431, file: !3, line: 240, column: 7)
!431 = distinct !DILexicalBlock(scope: !426, file: !3, line: 239, column: 22)
!432 = !DILocation(line: 240, column: 10, scope: !430)
!433 = !DILocation(line: 240, column: 7, scope: !431)
!434 = !DILocation(line: 241, column: 7, scope: !430)
!435 = !DILocation(line: 242, column: 3, scope: !431)
!436 = !DILocation(line: 245, column: 31, scope: !437)
!437 = distinct !DILexicalBlock(scope: !363, file: !3, line: 245, column: 6)
!438 = !DILocation(line: 245, column: 18, scope: !437)
!439 = !DILocation(line: 245, column: 11, scope: !437)
!440 = !DILocation(line: 245, column: 38, scope: !441)
!441 = distinct !DILexicalBlock(scope: !437, file: !3, line: 245, column: 6)
!442 = !DILocation(line: 245, column: 45, scope: !441)
!443 = !DILocation(line: 245, column: 6, scope: !437)
!444 = !DILocation(line: 246, column: 10, scope: !445)
!445 = distinct !DILexicalBlock(scope: !441, file: !3, line: 245, column: 69)
!446 = !DILocation(line: 246, column: 18, scope: !445)
!447 = !DILocation(line: 246, column: 8, scope: !445)
!448 = !DILocation(line: 247, column: 19, scope: !445)
!449 = !DILocation(line: 247, column: 27, scope: !445)
!450 = !DILocation(line: 247, column: 37, scope: !445)
!451 = !DILocation(line: 248, column: 7, scope: !445)
!452 = !DILocation(line: 248, column: 21, scope: !445)
!453 = !DILocation(line: 248, column: 28, scope: !445)
!454 = !DILocation(line: 248, column: 35, scope: !445)
!455 = !DILocation(line: 247, column: 8, scope: !445)
!456 = !DILocation(line: 247, column: 6, scope: !445)
!457 = !DILocation(line: 249, column: 11, scope: !445)
!458 = !DILocation(line: 249, column: 3, scope: !445)
!459 = !DILocation(line: 251, column: 7, scope: !460)
!460 = distinct !DILexicalBlock(scope: !445, file: !3, line: 249, column: 15)
!461 = !DILocation(line: 254, column: 30, scope: !460)
!462 = !DILocation(line: 254, column: 7, scope: !460)
!463 = !DILocation(line: 255, column: 7, scope: !460)
!464 = !DILocation(line: 257, column: 7, scope: !460)
!465 = !DILocation(line: 258, column: 7, scope: !460)
!466 = !DILocation(line: 260, column: 53, scope: !460)
!467 = !DILocation(line: 260, column: 61, scope: !460)
!468 = !DILocation(line: 260, column: 7, scope: !460)
!469 = !DILocation(line: 262, column: 6, scope: !445)
!470 = !DILocation(line: 245, column: 63, scope: !441)
!471 = !DILocation(line: 245, column: 61, scope: !441)
!472 = !DILocation(line: 245, column: 6, scope: !441)
!473 = distinct !{!473, !443, !474, !397}
!474 = !DILocation(line: 262, column: 6, scope: !437)
!475 = !DILocation(line: 263, column: 30, scope: !363)
!476 = !DILocation(line: 263, column: 6, scope: !363)
!477 = !DILocation(line: 264, column: 16, scope: !478)
!478 = distinct !DILexicalBlock(scope: !363, file: !3, line: 264, column: 10)
!479 = !DILocation(line: 264, column: 10, scope: !478)
!480 = !DILocation(line: 264, column: 10, scope: !363)
!481 = !DILocation(line: 265, column: 23, scope: !478)
!482 = !DILocation(line: 265, column: 3, scope: !478)
!483 = !DILocation(line: 267, column: 32, scope: !484)
!484 = distinct !DILexicalBlock(scope: !363, file: !3, line: 267, column: 10)
!485 = !DILocation(line: 267, column: 10, scope: !484)
!486 = !DILocation(line: 267, column: 10, scope: !363)
!487 = !DILocation(line: 268, column: 42, scope: !488)
!488 = distinct !DILexicalBlock(scope: !484, file: !3, line: 267, column: 53)
!489 = !DILocation(line: 268, column: 52, scope: !488)
!490 = !DILocation(line: 268, column: 14, scope: !488)
!491 = !DILocation(line: 268, column: 12, scope: !488)
!492 = !DILocation(line: 269, column: 6, scope: !488)
!493 = !DILocation(line: 270, column: 13, scope: !494)
!494 = distinct !DILexicalBlock(scope: !495, file: !3, line: 270, column: 7)
!495 = distinct !DILexicalBlock(scope: !484, file: !3, line: 269, column: 13)
!496 = !DILocation(line: 270, column: 7, scope: !494)
!497 = !DILocation(line: 270, column: 7, scope: !495)
!498 = !DILocation(line: 272, column: 11, scope: !499)
!499 = distinct !DILexicalBlock(scope: !500, file: !3, line: 272, column: 11)
!500 = distinct !DILexicalBlock(scope: !494, file: !3, line: 270, column: 37)
!501 = !DILocation(line: 272, column: 23, scope: !499)
!502 = !DILocation(line: 272, column: 31, scope: !499)
!503 = !DILocation(line: 272, column: 41, scope: !499)
!504 = !DILocation(line: 272, column: 34, scope: !499)
!505 = !DILocation(line: 272, column: 60, scope: !499)
!506 = !DILocation(line: 272, column: 65, scope: !499)
!507 = !DILocation(line: 273, column: 4, scope: !499)
!508 = !DILocation(line: 273, column: 16, scope: !499)
!509 = !DILocation(line: 273, column: 24, scope: !499)
!510 = !DILocation(line: 273, column: 27, scope: !499)
!511 = !DILocation(line: 273, column: 39, scope: !499)
!512 = !DILocation(line: 272, column: 11, scope: !500)
!513 = !DILocation(line: 274, column: 30, scope: !499)
!514 = !DILocation(line: 274, column: 18, scope: !499)
!515 = !DILocation(line: 274, column: 4, scope: !499)
!516 = !DILocation(line: 274, column: 16, scope: !499)
!517 = !DILocation(line: 275, column: 3, scope: !500)
!518 = !DILocation(line: 276, column: 44, scope: !495)
!519 = !DILocation(line: 276, column: 54, scope: !495)
!520 = !DILocation(line: 276, column: 14, scope: !495)
!521 = !DILocation(line: 276, column: 12, scope: !495)
!522 = !DILocation(line: 279, column: 6, scope: !363)
!523 = !DILocation(line: 281, column: 45, scope: !363)
!524 = !DILocation(line: 281, column: 6, scope: !363)
!525 = !DILocation(line: 283, column: 10, scope: !246)
!526 = !DILocation(line: 283, column: 5, scope: !246)
!527 = distinct !DISubprogram(name: "disable_coredumps", scope: !3, file: !3, line: 652, type: !528, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!528 = !DISubroutineType(types: !529)
!529 = !{null}
!530 = !DILocalVariable(name: "rl", scope: !527, file: !3, line: 655, type: !212)
!531 = !DILocation(line: 655, column: 19, scope: !527)
!532 = !DILocation(line: 664, column: 12, scope: !527)
!533 = !DILocation(line: 665, column: 22, scope: !527)
!534 = !DILocation(line: 665, column: 31, scope: !527)
!535 = !DILocation(line: 665, column: 8, scope: !527)
!536 = !DILocation(line: 665, column: 17, scope: !527)
!537 = !DILocation(line: 666, column: 9, scope: !538)
!538 = distinct !DILexicalBlock(scope: !527, file: !3, line: 666, column: 9)
!539 = !DILocation(line: 666, column: 9, scope: !527)
!540 = !DILocation(line: 667, column: 2, scope: !541)
!541 = distinct !DILexicalBlock(scope: !538, file: !3, line: 666, column: 39)
!542 = !DILocation(line: 668, column: 19, scope: !541)
!543 = !DILocation(line: 668, column: 5, scope: !541)
!544 = !DILocation(line: 668, column: 14, scope: !541)
!545 = !DILocation(line: 669, column: 8, scope: !541)
!546 = !DILocation(line: 670, column: 5, scope: !541)
!547 = !DILocation(line: 676, column: 12, scope: !527)
!548 = !DILocation(line: 677, column: 5, scope: !527)
!549 = !DILocation(line: 678, column: 8, scope: !527)
!550 = !DILocation(line: 678, column: 17, scope: !527)
!551 = !DILocation(line: 679, column: 12, scope: !527)
!552 = !DILocation(line: 681, column: 1, scope: !527)
!553 = distinct !DISubprogram(name: "fix_fds", scope: !3, file: !3, line: 291, type: !528, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!554 = !DILocalVariable(name: "miss", scope: !553, file: !3, line: 293, type: !555)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 96, elements: !556)
!556 = !{!557}
!557 = !DISubrange(count: 3)
!558 = !DILocation(line: 293, column: 9, scope: !553)
!559 = !DILocalVariable(name: "devnull", scope: !553, file: !3, line: 293, type: !54)
!560 = !DILocation(line: 293, column: 18, scope: !553)
!561 = !DILocation(line: 299, column: 26, scope: !553)
!562 = !DILocation(line: 299, column: 58, scope: !553)
!563 = !DILocation(line: 299, column: 5, scope: !553)
!564 = !DILocation(line: 299, column: 24, scope: !553)
!565 = !DILocation(line: 300, column: 27, scope: !553)
!566 = !DILocation(line: 300, column: 60, scope: !553)
!567 = !DILocation(line: 300, column: 5, scope: !553)
!568 = !DILocation(line: 300, column: 25, scope: !553)
!569 = !DILocation(line: 301, column: 27, scope: !553)
!570 = !DILocation(line: 301, column: 60, scope: !553)
!571 = !DILocation(line: 301, column: 5, scope: !553)
!572 = !DILocation(line: 301, column: 25, scope: !553)
!573 = !DILocation(line: 302, column: 9, scope: !574)
!574 = distinct !DILexicalBlock(scope: !553, file: !3, line: 302, column: 9)
!575 = !DILocation(line: 302, column: 28, scope: !574)
!576 = !DILocation(line: 302, column: 31, scope: !574)
!577 = !DILocation(line: 302, column: 51, scope: !574)
!578 = !DILocation(line: 302, column: 54, scope: !574)
!579 = !DILocation(line: 302, column: 9, scope: !553)
!580 = !DILocation(line: 303, column: 17, scope: !581)
!581 = distinct !DILexicalBlock(scope: !582, file: !3, line: 303, column: 6)
!582 = distinct !DILexicalBlock(scope: !574, file: !3, line: 302, column: 75)
!583 = !DILocation(line: 303, column: 15, scope: !581)
!584 = !DILocation(line: 303, column: 52, scope: !581)
!585 = !DILocation(line: 303, column: 6, scope: !582)
!586 = !DILocation(line: 304, column: 6, scope: !581)
!587 = !DILocation(line: 305, column: 6, scope: !588)
!588 = distinct !DILexicalBlock(scope: !582, file: !3, line: 305, column: 6)
!589 = !DILocation(line: 305, column: 25, scope: !588)
!590 = !DILocation(line: 305, column: 33, scope: !588)
!591 = !DILocation(line: 305, column: 28, scope: !588)
!592 = !DILocation(line: 305, column: 56, scope: !588)
!593 = !DILocation(line: 305, column: 6, scope: !582)
!594 = !DILocation(line: 306, column: 6, scope: !588)
!595 = !DILocation(line: 307, column: 6, scope: !596)
!596 = distinct !DILexicalBlock(scope: !582, file: !3, line: 307, column: 6)
!597 = !DILocation(line: 307, column: 26, scope: !596)
!598 = !DILocation(line: 307, column: 34, scope: !596)
!599 = !DILocation(line: 307, column: 29, scope: !596)
!600 = !DILocation(line: 307, column: 58, scope: !596)
!601 = !DILocation(line: 307, column: 6, scope: !582)
!602 = !DILocation(line: 308, column: 6, scope: !596)
!603 = !DILocation(line: 309, column: 6, scope: !604)
!604 = distinct !DILexicalBlock(scope: !582, file: !3, line: 309, column: 6)
!605 = !DILocation(line: 309, column: 26, scope: !604)
!606 = !DILocation(line: 309, column: 34, scope: !604)
!607 = !DILocation(line: 309, column: 29, scope: !604)
!608 = !DILocation(line: 309, column: 58, scope: !604)
!609 = !DILocation(line: 309, column: 6, scope: !582)
!610 = !DILocation(line: 310, column: 6, scope: !604)
!611 = !DILocation(line: 311, column: 6, scope: !612)
!612 = distinct !DILexicalBlock(scope: !582, file: !3, line: 311, column: 6)
!613 = !DILocation(line: 311, column: 14, scope: !612)
!614 = !DILocation(line: 311, column: 6, scope: !582)
!615 = !DILocation(line: 312, column: 12, scope: !612)
!616 = !DILocation(line: 312, column: 6, scope: !612)
!617 = !DILocation(line: 313, column: 5, scope: !582)
!618 = !DILocation(line: 314, column: 1, scope: !553)
!619 = distinct !DISubprogram(name: "get_user_info", scope: !3, file: !3, line: 350, type: !620, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!620 = !DISubroutineType(types: !621)
!621 = !{!130, !622}
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!623 = !DILocalVariable(name: "ud", arg: 1, scope: !619, file: !3, line: 350, type: !622)
!624 = !DILocation(line: 350, column: 36, scope: !619)
!625 = !DILocalVariable(name: "cwd", scope: !619, file: !3, line: 352, type: !626)
!626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 32768, elements: !627)
!627 = !{!628}
!628 = !DISubrange(count: 4096)
!629 = !DILocation(line: 352, column: 10, scope: !619)
!630 = !DILocalVariable(name: "host", scope: !619, file: !3, line: 353, type: !631)
!631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 512, elements: !632)
!632 = !{!633}
!633 = !DISubrange(count: 64)
!634 = !DILocation(line: 353, column: 10, scope: !619)
!635 = !DILocalVariable(name: "user_info", scope: !619, file: !3, line: 354, type: !130)
!636 = !DILocation(line: 354, column: 12, scope: !619)
!637 = !DILocalVariable(name: "cp", scope: !619, file: !3, line: 354, type: !111)
!638 = !DILocation(line: 354, column: 24, scope: !619)
!639 = !DILocalVariable(name: "pw", scope: !619, file: !3, line: 355, type: !148)
!640 = !DILocation(line: 355, column: 20, scope: !619)
!641 = !DILocalVariable(name: "i", scope: !619, file: !3, line: 356, type: !54)
!642 = !DILocation(line: 356, column: 9, scope: !619)
!643 = !DILocation(line: 361, column: 21, scope: !619)
!644 = !DILocation(line: 361, column: 2, scope: !619)
!645 = !DILocation(line: 362, column: 21, scope: !619)
!646 = !DILocation(line: 362, column: 2, scope: !619)
!647 = !DILocation(line: 363, column: 21, scope: !619)
!648 = !DILocation(line: 363, column: 2, scope: !619)
!649 = !DILocation(line: 364, column: 21, scope: !619)
!650 = !DILocation(line: 364, column: 2, scope: !619)
!651 = !DILocation(line: 365, column: 21, scope: !619)
!652 = !DILocation(line: 365, column: 2, scope: !619)
!653 = !DILocation(line: 367, column: 15, scope: !619)
!654 = !DILocation(line: 367, column: 5, scope: !619)
!655 = !DILocation(line: 367, column: 9, scope: !619)
!656 = !DILocation(line: 367, column: 13, scope: !619)
!657 = !DILocation(line: 368, column: 16, scope: !619)
!658 = !DILocation(line: 368, column: 5, scope: !619)
!659 = !DILocation(line: 368, column: 9, scope: !619)
!660 = !DILocation(line: 368, column: 14, scope: !619)
!661 = !DILocation(line: 369, column: 15, scope: !619)
!662 = !DILocation(line: 369, column: 5, scope: !619)
!663 = !DILocation(line: 369, column: 9, scope: !619)
!664 = !DILocation(line: 369, column: 13, scope: !619)
!665 = !DILocation(line: 370, column: 16, scope: !619)
!666 = !DILocation(line: 370, column: 5, scope: !619)
!667 = !DILocation(line: 370, column: 9, scope: !619)
!668 = !DILocation(line: 370, column: 14, scope: !619)
!669 = !DILocation(line: 372, column: 19, scope: !619)
!670 = !DILocation(line: 372, column: 23, scope: !619)
!671 = !DILocation(line: 372, column: 10, scope: !619)
!672 = !DILocation(line: 372, column: 8, scope: !619)
!673 = !DILocation(line: 373, column: 9, scope: !674)
!674 = distinct !DILexicalBlock(scope: !619, file: !3, line: 373, column: 9)
!675 = !DILocation(line: 373, column: 12, scope: !674)
!676 = !DILocation(line: 373, column: 9, scope: !619)
!677 = !DILocation(line: 374, column: 58, scope: !674)
!678 = !DILocation(line: 374, column: 62, scope: !674)
!679 = !DILocation(line: 374, column: 2, scope: !674)
!680 = !DILocation(line: 377, column: 9, scope: !681)
!681 = distinct !DILexicalBlock(scope: !619, file: !3, line: 377, column: 9)
!682 = !DILocation(line: 377, column: 19, scope: !681)
!683 = !DILocation(line: 377, column: 22, scope: !681)
!684 = !DILocation(line: 377, column: 9, scope: !619)
!685 = !DILocation(line: 378, column: 2, scope: !681)
!686 = !DILocation(line: 379, column: 20, scope: !619)
!687 = !DILocation(line: 379, column: 30, scope: !619)
!688 = !DILocation(line: 379, column: 33, scope: !619)
!689 = !DILocation(line: 379, column: 51, scope: !619)
!690 = !DILocation(line: 379, column: 5, scope: !619)
!691 = !DILocation(line: 379, column: 9, scope: !619)
!692 = !DILocation(line: 379, column: 18, scope: !619)
!693 = !DILocation(line: 382, column: 22, scope: !694)
!694 = distinct !DILexicalBlock(scope: !619, file: !3, line: 382, column: 9)
!695 = !DILocation(line: 382, column: 10, scope: !694)
!696 = !DILocation(line: 382, column: 14, scope: !694)
!697 = !DILocation(line: 382, column: 20, scope: !694)
!698 = !DILocation(line: 382, column: 39, scope: !694)
!699 = !DILocation(line: 382, column: 47, scope: !694)
!700 = !DILocation(line: 382, column: 50, scope: !694)
!701 = !DILocation(line: 382, column: 54, scope: !694)
!702 = !DILocation(line: 382, column: 63, scope: !694)
!703 = !DILocation(line: 382, column: 9, scope: !619)
!704 = !DILocation(line: 383, column: 14, scope: !705)
!705 = distinct !DILexicalBlock(scope: !694, file: !3, line: 382, column: 72)
!706 = !DILocation(line: 383, column: 18, scope: !705)
!707 = !DILocation(line: 383, column: 32, scope: !705)
!708 = !DILocation(line: 383, column: 36, scope: !705)
!709 = !DILocation(line: 383, column: 2, scope: !705)
!710 = !DILocation(line: 383, column: 6, scope: !705)
!711 = !DILocation(line: 383, column: 12, scope: !705)
!712 = !DILocation(line: 384, column: 5, scope: !705)
!713 = !DILocation(line: 385, column: 25, scope: !619)
!714 = !DILocation(line: 385, column: 29, scope: !619)
!715 = !DILocation(line: 385, column: 17, scope: !619)
!716 = !DILocation(line: 385, column: 5, scope: !619)
!717 = !DILocation(line: 385, column: 9, scope: !619)
!718 = !DILocation(line: 385, column: 15, scope: !619)
!719 = !DILocation(line: 387, column: 16, scope: !619)
!720 = !DILocation(line: 387, column: 26, scope: !619)
!721 = !DILocation(line: 387, column: 56, scope: !619)
!722 = !DILocation(line: 387, column: 60, scope: !619)
!723 = !DILocation(line: 387, column: 5, scope: !619)
!724 = !DILocation(line: 388, column: 16, scope: !619)
!725 = !DILocation(line: 388, column: 26, scope: !619)
!726 = !DILocation(line: 388, column: 57, scope: !619)
!727 = !DILocation(line: 388, column: 61, scope: !619)
!728 = !DILocation(line: 388, column: 5, scope: !619)
!729 = !DILocation(line: 389, column: 16, scope: !619)
!730 = !DILocation(line: 389, column: 26, scope: !619)
!731 = !DILocation(line: 389, column: 56, scope: !619)
!732 = !DILocation(line: 389, column: 60, scope: !619)
!733 = !DILocation(line: 389, column: 5, scope: !619)
!734 = !DILocation(line: 390, column: 16, scope: !619)
!735 = !DILocation(line: 390, column: 26, scope: !619)
!736 = !DILocation(line: 390, column: 57, scope: !619)
!737 = !DILocation(line: 390, column: 61, scope: !619)
!738 = !DILocation(line: 390, column: 5, scope: !619)
!739 = !DILocation(line: 392, column: 31, scope: !740)
!740 = distinct !DILexicalBlock(scope: !619, file: !3, line: 392, column: 9)
!741 = !DILocation(line: 392, column: 15, scope: !740)
!742 = !DILocation(line: 392, column: 13, scope: !740)
!743 = !DILocation(line: 392, column: 36, scope: !740)
!744 = !DILocation(line: 392, column: 9, scope: !619)
!745 = !DILocation(line: 393, column: 19, scope: !740)
!746 = !DILocation(line: 393, column: 2, scope: !740)
!747 = !DILocation(line: 393, column: 12, scope: !740)
!748 = !DILocation(line: 393, column: 17, scope: !740)
!749 = !DILocation(line: 395, column: 16, scope: !750)
!750 = distinct !DILexicalBlock(scope: !619, file: !3, line: 395, column: 9)
!751 = !DILocation(line: 395, column: 9, scope: !750)
!752 = !DILocation(line: 395, column: 34, scope: !750)
!753 = !DILocation(line: 395, column: 9, scope: !619)
!754 = !DILocation(line: 396, column: 37, scope: !755)
!755 = distinct !DILexicalBlock(scope: !750, file: !3, line: 395, column: 43)
!756 = !DILocation(line: 396, column: 19, scope: !755)
!757 = !DILocation(line: 396, column: 2, scope: !755)
!758 = !DILocation(line: 396, column: 12, scope: !755)
!759 = !DILocation(line: 396, column: 17, scope: !755)
!760 = !DILocation(line: 397, column: 6, scope: !761)
!761 = distinct !DILexicalBlock(scope: !755, file: !3, line: 397, column: 6)
!762 = !DILocation(line: 397, column: 16, scope: !761)
!763 = !DILocation(line: 397, column: 19, scope: !761)
!764 = !DILocation(line: 397, column: 6, scope: !755)
!765 = !DILocation(line: 398, column: 6, scope: !761)
!766 = !DILocation(line: 399, column: 12, scope: !755)
!767 = !DILocation(line: 399, column: 22, scope: !755)
!768 = !DILocation(line: 399, column: 25, scope: !755)
!769 = !DILocation(line: 399, column: 42, scope: !755)
!770 = !DILocation(line: 399, column: 2, scope: !755)
!771 = !DILocation(line: 399, column: 6, scope: !755)
!772 = !DILocation(line: 399, column: 10, scope: !755)
!773 = !DILocation(line: 400, column: 5, scope: !755)
!774 = !DILocation(line: 402, column: 15, scope: !775)
!775 = distinct !DILexicalBlock(scope: !619, file: !3, line: 402, column: 9)
!776 = !DILocation(line: 402, column: 13, scope: !775)
!777 = !DILocation(line: 402, column: 38, scope: !775)
!778 = !DILocation(line: 402, column: 47, scope: !775)
!779 = !DILocation(line: 402, column: 45, scope: !775)
!780 = !DILocation(line: 402, column: 71, scope: !775)
!781 = !DILocation(line: 403, column: 8, scope: !775)
!782 = !DILocation(line: 403, column: 6, scope: !775)
!783 = !DILocation(line: 402, column: 9, scope: !619)
!784 = !DILocation(line: 404, column: 37, scope: !785)
!785 = distinct !DILexicalBlock(scope: !775, file: !3, line: 403, column: 33)
!786 = !DILocation(line: 404, column: 19, scope: !785)
!787 = !DILocation(line: 404, column: 2, scope: !785)
!788 = !DILocation(line: 404, column: 12, scope: !785)
!789 = !DILocation(line: 404, column: 17, scope: !785)
!790 = !DILocation(line: 405, column: 6, scope: !791)
!791 = distinct !DILexicalBlock(scope: !785, file: !3, line: 405, column: 6)
!792 = !DILocation(line: 405, column: 16, scope: !791)
!793 = !DILocation(line: 405, column: 19, scope: !791)
!794 = !DILocation(line: 405, column: 6, scope: !785)
!795 = !DILocation(line: 406, column: 6, scope: !791)
!796 = !DILocation(line: 407, column: 12, scope: !785)
!797 = !DILocation(line: 407, column: 22, scope: !785)
!798 = !DILocation(line: 407, column: 25, scope: !785)
!799 = !DILocation(line: 407, column: 42, scope: !785)
!800 = !DILocation(line: 407, column: 2, scope: !785)
!801 = !DILocation(line: 407, column: 6, scope: !785)
!802 = !DILocation(line: 407, column: 10, scope: !785)
!803 = !DILocation(line: 408, column: 5, scope: !785)
!804 = !DILocation(line: 410, column: 21, scope: !805)
!805 = distinct !DILexicalBlock(scope: !619, file: !3, line: 410, column: 9)
!806 = !DILocation(line: 410, column: 9, scope: !805)
!807 = !DILocation(line: 410, column: 41, scope: !805)
!808 = !DILocation(line: 410, column: 9, scope: !619)
!809 = !DILocation(line: 411, column: 2, scope: !805)
!810 = !DILocation(line: 411, column: 25, scope: !805)
!811 = !DILocation(line: 413, column: 10, scope: !805)
!812 = !DILocation(line: 413, column: 2, scope: !805)
!813 = !DILocation(line: 414, column: 41, scope: !619)
!814 = !DILocation(line: 414, column: 22, scope: !619)
!815 = !DILocation(line: 414, column: 5, scope: !619)
!816 = !DILocation(line: 414, column: 15, scope: !619)
!817 = !DILocation(line: 414, column: 20, scope: !619)
!818 = !DILocation(line: 415, column: 9, scope: !819)
!819 = distinct !DILexicalBlock(scope: !619, file: !3, line: 415, column: 9)
!820 = !DILocation(line: 415, column: 19, scope: !819)
!821 = !DILocation(line: 415, column: 22, scope: !819)
!822 = !DILocation(line: 415, column: 9, scope: !619)
!823 = !DILocation(line: 416, column: 2, scope: !819)
!824 = !DILocation(line: 417, column: 16, scope: !619)
!825 = !DILocation(line: 417, column: 26, scope: !619)
!826 = !DILocation(line: 417, column: 29, scope: !619)
!827 = !DILocation(line: 417, column: 47, scope: !619)
!828 = !DILocation(line: 417, column: 5, scope: !619)
!829 = !DILocation(line: 417, column: 9, scope: !619)
!830 = !DILocation(line: 417, column: 14, scope: !619)
!831 = !DILocation(line: 419, column: 18, scope: !619)
!832 = !DILocation(line: 419, column: 22, scope: !619)
!833 = !DILocation(line: 419, column: 33, scope: !619)
!834 = !DILocation(line: 419, column: 37, scope: !619)
!835 = !DILocation(line: 419, column: 5, scope: !619)
!836 = !DILocation(line: 420, column: 16, scope: !619)
!837 = !DILocation(line: 420, column: 26, scope: !619)
!838 = !DILocation(line: 420, column: 44, scope: !619)
!839 = !DILocation(line: 420, column: 48, scope: !619)
!840 = !DILocation(line: 420, column: 5, scope: !619)
!841 = !DILocation(line: 421, column: 16, scope: !619)
!842 = !DILocation(line: 421, column: 26, scope: !619)
!843 = !DILocation(line: 421, column: 43, scope: !619)
!844 = !DILocation(line: 421, column: 47, scope: !619)
!845 = !DILocation(line: 421, column: 5, scope: !619)
!846 = !DILocation(line: 423, column: 5, scope: !619)
!847 = !DILocation(line: 423, column: 15, scope: !619)
!848 = !DILocation(line: 423, column: 20, scope: !619)
!849 = !DILocation(line: 425, column: 12, scope: !619)
!850 = !DILocation(line: 425, column: 5, scope: !619)
!851 = distinct !DISubprogram(name: "policy_open", scope: !3, file: !3, line: 982, type: !852, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!852 = !DISubroutineType(types: !853)
!853 = !{!54, !69, !116, !116, !116}
!854 = !DILocalVariable(name: "plugin", arg: 1, scope: !851, file: !3, line: 982, type: !69)
!855 = !DILocation(line: 982, column: 38, scope: !851)
!856 = !DILocalVariable(name: "settings", arg: 2, scope: !851, file: !3, line: 982, type: !116)
!857 = !DILocation(line: 982, column: 59, scope: !851)
!858 = !DILocalVariable(name: "user_info", arg: 3, scope: !851, file: !3, line: 983, type: !116)
!859 = !DILocation(line: 983, column: 18, scope: !851)
!860 = !DILocalVariable(name: "user_env", arg: 4, scope: !851, file: !3, line: 983, type: !116)
!861 = !DILocation(line: 983, column: 44, scope: !851)
!862 = !DILocation(line: 985, column: 12, scope: !851)
!863 = !DILocation(line: 985, column: 20, scope: !851)
!864 = !DILocation(line: 985, column: 22, scope: !851)
!865 = !DILocation(line: 985, column: 30, scope: !851)
!866 = !DILocation(line: 986, column: 16, scope: !851)
!867 = !DILocation(line: 986, column: 26, scope: !851)
!868 = !DILocation(line: 986, column: 37, scope: !851)
!869 = !DILocation(line: 985, column: 5, scope: !851)
!870 = distinct !DISubprogram(name: "sudo_debug", scope: !3, file: !3, line: 1091, type: !871, scopeLine: 1092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !249)
!871 = !DISubroutineType(types: !872)
!872 = !{null, !54, !72, null}
!873 = !DILocalVariable(name: "level", arg: 1, scope: !870, file: !3, line: 1091, type: !54)
!874 = !DILocation(line: 1091, column: 16, scope: !870)
!875 = !DILocalVariable(name: "fmt", arg: 2, scope: !870, file: !3, line: 1091, type: !72)
!876 = !DILocation(line: 1091, column: 35, scope: !870)
!877 = !DILocalVariable(name: "ap", scope: !870, file: !3, line: 1093, type: !878)
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !879, line: 52, baseType: !880)
!879 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !881, line: 32, baseType: !882)
!881 = !DIFile(filename: "/usr/lib/llvm-13/lib/clang/13.0.1/include/stdarg.h", directory: "")
!882 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, baseType: !883)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", scope: !884, size: 256, elements: !885)
!884 = !DINamespace(name: "std", scope: null)
!885 = !{!886, !887, !888, !889, !890}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "__stack", scope: !883, file: !3, line: 1093, baseType: !49, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "__gr_top", scope: !883, file: !3, line: 1093, baseType: !49, size: 64, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "__vr_top", scope: !883, file: !3, line: 1093, baseType: !49, size: 64, offset: 128)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "__gr_offs", scope: !883, file: !3, line: 1093, baseType: !54, size: 32, offset: 192)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "__vr_offs", scope: !883, file: !3, line: 1093, baseType: !54, size: 32, offset: 224)
!891 = !DILocation(line: 1093, column: 13, scope: !870)
!892 = !DILocalVariable(name: "fmt2", scope: !870, file: !3, line: 1094, type: !111)
!893 = !DILocation(line: 1094, column: 11, scope: !870)
!894 = !DILocation(line: 1096, column: 9, scope: !895)
!895 = distinct !DILexicalBlock(scope: !870, file: !3, line: 1096, column: 9)
!896 = !DILocation(line: 1096, column: 17, scope: !895)
!897 = !DILocation(line: 1096, column: 15, scope: !895)
!898 = !DILocation(line: 1096, column: 9, scope: !870)
!899 = !DILocation(line: 1097, column: 2, scope: !895)
!900 = !DILocation(line: 1100, column: 34, scope: !870)
!901 = !DILocation(line: 1100, column: 49, scope: !870)
!902 = !DILocation(line: 1100, column: 5, scope: !870)
!903 = !DILocation(line: 1101, column: 5, scope: !870)
!904 = !DILocation(line: 1102, column: 14, scope: !870)
!905 = !DILocation(line: 1102, column: 22, scope: !870)
!906 = !DILocation(line: 1102, column: 5, scope: !870)
!907 = !DILocation(line: 1103, column: 5, scope: !870)
!908 = !DILocation(line: 1104, column: 11, scope: !870)
!909 = !DILocation(line: 1104, column: 5, scope: !870)
!910 = !DILocation(line: 1105, column: 1, scope: !870)
!911 = distinct !DISubprogram(name: "policy_show_version", scope: !3, file: !3, line: 996, type: !912, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!912 = !DISubroutineType(types: !913)
!913 = !{!54, !69, !54}
!914 = !DILocalVariable(name: "plugin", arg: 1, scope: !911, file: !3, line: 996, type: !69)
!915 = !DILocation(line: 996, column: 46, scope: !911)
!916 = !DILocalVariable(name: "verbose", arg: 2, scope: !911, file: !3, line: 996, type: !54)
!917 = !DILocation(line: 996, column: 58, scope: !911)
!918 = !DILocation(line: 998, column: 12, scope: !911)
!919 = !DILocation(line: 998, column: 20, scope: !911)
!920 = !DILocation(line: 998, column: 22, scope: !911)
!921 = !DILocation(line: 998, column: 30, scope: !911)
!922 = !DILocation(line: 998, column: 43, scope: !911)
!923 = !DILocation(line: 998, column: 5, scope: !911)
!924 = distinct !DISubprogram(name: "iolog_open", scope: !3, file: !3, line: 1052, type: !925, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!925 = !DISubroutineType(types: !926)
!926 = !{!54, !69, !116, !116, !116, !54, !116, !116}
!927 = !DILocalVariable(name: "plugin", arg: 1, scope: !924, file: !3, line: 1052, type: !69)
!928 = !DILocation(line: 1052, column: 37, scope: !924)
!929 = !DILocalVariable(name: "settings", arg: 2, scope: !924, file: !3, line: 1052, type: !116)
!930 = !DILocation(line: 1052, column: 58, scope: !924)
!931 = !DILocalVariable(name: "user_info", arg: 3, scope: !924, file: !3, line: 1053, type: !116)
!932 = !DILocation(line: 1053, column: 18, scope: !924)
!933 = !DILocalVariable(name: "command_info", arg: 4, scope: !924, file: !3, line: 1053, type: !116)
!934 = !DILocation(line: 1053, column: 44, scope: !924)
!935 = !DILocalVariable(name: "argc", arg: 5, scope: !924, file: !3, line: 1054, type: !54)
!936 = !DILocation(line: 1054, column: 9, scope: !924)
!937 = !DILocalVariable(name: "argv", arg: 6, scope: !924, file: !3, line: 1054, type: !116)
!938 = !DILocation(line: 1054, column: 28, scope: !924)
!939 = !DILocalVariable(name: "user_env", arg: 7, scope: !924, file: !3, line: 1054, type: !116)
!940 = !DILocation(line: 1054, column: 49, scope: !924)
!941 = !DILocalVariable(name: "rval", scope: !924, file: !3, line: 1056, type: !54)
!942 = !DILocation(line: 1056, column: 9, scope: !924)
!943 = !DILocation(line: 1061, column: 13, scope: !924)
!944 = !DILocation(line: 1061, column: 21, scope: !924)
!945 = !DILocation(line: 1061, column: 23, scope: !924)
!946 = !DILocation(line: 1061, column: 32, scope: !924)
!947 = !DILocation(line: 1061, column: 5, scope: !924)
!948 = !DILocation(line: 1063, column: 9, scope: !949)
!949 = distinct !DILexicalBlock(scope: !924, file: !3, line: 1061, column: 41)
!950 = !DILocation(line: 1063, column: 17, scope: !949)
!951 = !DILocation(line: 1063, column: 19, scope: !949)
!952 = !DILocation(line: 1063, column: 27, scope: !949)
!953 = !DILocation(line: 1063, column: 32, scope: !949)
!954 = !DILocation(line: 1063, column: 40, scope: !949)
!955 = !DILocation(line: 1063, column: 42, scope: !949)
!956 = !DILocation(line: 1063, column: 50, scope: !949)
!957 = !DILocation(line: 1064, column: 39, scope: !949)
!958 = !DILocation(line: 1064, column: 49, scope: !949)
!959 = !DILocation(line: 1064, column: 60, scope: !949)
!960 = !DILocation(line: 1064, column: 66, scope: !949)
!961 = !DILocation(line: 1065, column: 6, scope: !949)
!962 = !DILocation(line: 1063, column: 7, scope: !949)
!963 = !DILocation(line: 1066, column: 2, scope: !949)
!964 = !DILocation(line: 1068, column: 9, scope: !949)
!965 = !DILocation(line: 1068, column: 17, scope: !949)
!966 = !DILocation(line: 1068, column: 19, scope: !949)
!967 = !DILocation(line: 1068, column: 23, scope: !949)
!968 = !DILocation(line: 1069, column: 20, scope: !949)
!969 = !DILocation(line: 1069, column: 30, scope: !949)
!970 = !DILocation(line: 1069, column: 41, scope: !949)
!971 = !DILocation(line: 1069, column: 55, scope: !949)
!972 = !DILocation(line: 1069, column: 61, scope: !949)
!973 = !DILocation(line: 1070, column: 6, scope: !949)
!974 = !DILocation(line: 1068, column: 7, scope: !949)
!975 = !DILocation(line: 1071, column: 5, scope: !949)
!976 = !DILocation(line: 1072, column: 12, scope: !924)
!977 = !DILocation(line: 1072, column: 5, scope: !924)
!978 = distinct !DISubprogram(name: "iolog_show_version", scope: !3, file: !3, line: 1082, type: !912, scopeLine: 1083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!979 = !DILocalVariable(name: "plugin", arg: 1, scope: !978, file: !3, line: 1082, type: !69)
!980 = !DILocation(line: 1082, column: 45, scope: !978)
!981 = !DILocalVariable(name: "verbose", arg: 2, scope: !978, file: !3, line: 1082, type: !54)
!982 = !DILocation(line: 1082, column: 57, scope: !978)
!983 = !DILocation(line: 1084, column: 12, scope: !978)
!984 = !DILocation(line: 1084, column: 20, scope: !978)
!985 = !DILocation(line: 1084, column: 22, scope: !978)
!986 = !DILocation(line: 1084, column: 26, scope: !978)
!987 = !DILocation(line: 1084, column: 39, scope: !978)
!988 = !DILocation(line: 1084, column: 5, scope: !978)
!989 = distinct !DISubprogram(name: "policy_validate", scope: !3, file: !3, line: 1023, type: !990, scopeLine: 1024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!990 = !DISubroutineType(types: !991)
!991 = !{!54, !69}
!992 = !DILocalVariable(name: "plugin", arg: 1, scope: !989, file: !3, line: 1023, type: !69)
!993 = !DILocation(line: 1023, column: 42, scope: !989)
!994 = !DILocation(line: 1025, column: 9, scope: !995)
!995 = distinct !DILexicalBlock(scope: !989, file: !3, line: 1025, column: 9)
!996 = !DILocation(line: 1025, column: 17, scope: !995)
!997 = !DILocation(line: 1025, column: 19, scope: !995)
!998 = !DILocation(line: 1025, column: 27, scope: !995)
!999 = !DILocation(line: 1025, column: 36, scope: !995)
!1000 = !DILocation(line: 1025, column: 9, scope: !989)
!1001 = !DILocation(line: 1027, column: 6, scope: !1002)
!1002 = distinct !DILexicalBlock(scope: !995, file: !3, line: 1025, column: 45)
!1003 = !DILocation(line: 1027, column: 14, scope: !1002)
!1004 = !DILocation(line: 1026, column: 2, scope: !1002)
!1005 = !DILocation(line: 1028, column: 2, scope: !1002)
!1006 = !DILocation(line: 1030, column: 12, scope: !989)
!1007 = !DILocation(line: 1030, column: 20, scope: !989)
!1008 = !DILocation(line: 1030, column: 22, scope: !989)
!1009 = !DILocation(line: 1030, column: 30, scope: !989)
!1010 = !DILocation(line: 1030, column: 5, scope: !989)
!1011 = !DILocation(line: 1031, column: 1, scope: !989)
!1012 = distinct !DISubprogram(name: "policy_invalidate", scope: !3, file: !3, line: 1034, type: !1013, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{null, !69, !54}
!1015 = !DILocalVariable(name: "plugin", arg: 1, scope: !1012, file: !3, line: 1034, type: !69)
!1016 = !DILocation(line: 1034, column: 44, scope: !1012)
!1017 = !DILocalVariable(name: "remove", arg: 2, scope: !1012, file: !3, line: 1034, type: !54)
!1018 = !DILocation(line: 1034, column: 56, scope: !1012)
!1019 = !DILocation(line: 1036, column: 9, scope: !1020)
!1020 = distinct !DILexicalBlock(scope: !1012, file: !3, line: 1036, column: 9)
!1021 = !DILocation(line: 1036, column: 17, scope: !1020)
!1022 = !DILocation(line: 1036, column: 19, scope: !1020)
!1023 = !DILocation(line: 1036, column: 27, scope: !1020)
!1024 = !DILocation(line: 1036, column: 38, scope: !1020)
!1025 = !DILocation(line: 1036, column: 9, scope: !1012)
!1026 = !DILocation(line: 1038, column: 6, scope: !1027)
!1027 = distinct !DILexicalBlock(scope: !1020, file: !3, line: 1036, column: 47)
!1028 = !DILocation(line: 1038, column: 14, scope: !1027)
!1029 = !DILocation(line: 1037, column: 2, scope: !1027)
!1030 = !DILocation(line: 1040, column: 5, scope: !1012)
!1031 = !DILocation(line: 1040, column: 13, scope: !1012)
!1032 = !DILocation(line: 1040, column: 15, scope: !1012)
!1033 = !DILocation(line: 1040, column: 23, scope: !1012)
!1034 = !DILocation(line: 1040, column: 34, scope: !1012)
!1035 = !DILocation(line: 1041, column: 1, scope: !1012)
!1036 = distinct !DISubprogram(name: "policy_list", scope: !3, file: !3, line: 1011, type: !1037, scopeLine: 1013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!54, !69, !54, !116, !54, !72}
!1039 = !DILocalVariable(name: "plugin", arg: 1, scope: !1036, file: !3, line: 1011, type: !69)
!1040 = !DILocation(line: 1011, column: 38, scope: !1036)
!1041 = !DILocalVariable(name: "argc", arg: 2, scope: !1036, file: !3, line: 1011, type: !54)
!1042 = !DILocation(line: 1011, column: 50, scope: !1036)
!1043 = !DILocalVariable(name: "argv", arg: 3, scope: !1036, file: !3, line: 1011, type: !116)
!1044 = !DILocation(line: 1011, column: 69, scope: !1036)
!1045 = !DILocalVariable(name: "verbose", arg: 4, scope: !1036, file: !3, line: 1012, type: !54)
!1046 = !DILocation(line: 1012, column: 9, scope: !1036)
!1047 = !DILocalVariable(name: "list_user", arg: 5, scope: !1036, file: !3, line: 1012, type: !72)
!1048 = !DILocation(line: 1012, column: 30, scope: !1036)
!1049 = !DILocation(line: 1014, column: 9, scope: !1050)
!1050 = distinct !DILexicalBlock(scope: !1036, file: !3, line: 1014, column: 9)
!1051 = !DILocation(line: 1014, column: 17, scope: !1050)
!1052 = !DILocation(line: 1014, column: 19, scope: !1050)
!1053 = !DILocation(line: 1014, column: 27, scope: !1050)
!1054 = !DILocation(line: 1014, column: 32, scope: !1050)
!1055 = !DILocation(line: 1014, column: 9, scope: !1036)
!1056 = !DILocation(line: 1016, column: 6, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !1050, file: !3, line: 1014, column: 41)
!1058 = !DILocation(line: 1016, column: 14, scope: !1057)
!1059 = !DILocation(line: 1015, column: 2, scope: !1057)
!1060 = !DILocation(line: 1017, column: 2, scope: !1057)
!1061 = !DILocation(line: 1019, column: 12, scope: !1036)
!1062 = !DILocation(line: 1019, column: 20, scope: !1036)
!1063 = !DILocation(line: 1019, column: 22, scope: !1036)
!1064 = !DILocation(line: 1019, column: 30, scope: !1036)
!1065 = !DILocation(line: 1019, column: 35, scope: !1036)
!1066 = !DILocation(line: 1019, column: 41, scope: !1036)
!1067 = !DILocation(line: 1019, column: 47, scope: !1036)
!1068 = !DILocation(line: 1019, column: 56, scope: !1036)
!1069 = !DILocation(line: 1019, column: 5, scope: !1036)
!1070 = !DILocation(line: 1020, column: 1, scope: !1036)
!1071 = distinct !DISubprogram(name: "policy_check", scope: !3, file: !3, line: 1002, type: !1072, scopeLine: 1005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!54, !69, !54, !116, !130, !131, !131, !131}
!1074 = !DILocalVariable(name: "plugin", arg: 1, scope: !1071, file: !3, line: 1002, type: !69)
!1075 = !DILocation(line: 1002, column: 39, scope: !1071)
!1076 = !DILocalVariable(name: "argc", arg: 2, scope: !1071, file: !3, line: 1002, type: !54)
!1077 = !DILocation(line: 1002, column: 51, scope: !1071)
!1078 = !DILocalVariable(name: "argv", arg: 3, scope: !1071, file: !3, line: 1002, type: !116)
!1079 = !DILocation(line: 1002, column: 70, scope: !1071)
!1080 = !DILocalVariable(name: "env_add", arg: 4, scope: !1071, file: !3, line: 1003, type: !130)
!1081 = !DILocation(line: 1003, column: 11, scope: !1071)
!1082 = !DILocalVariable(name: "command_info", arg: 5, scope: !1071, file: !3, line: 1003, type: !131)
!1083 = !DILocation(line: 1003, column: 29, scope: !1071)
!1084 = !DILocalVariable(name: "argv_out", arg: 6, scope: !1071, file: !3, line: 1003, type: !131)
!1085 = !DILocation(line: 1003, column: 52, scope: !1071)
!1086 = !DILocalVariable(name: "user_env_out", arg: 7, scope: !1071, file: !3, line: 1004, type: !131)
!1087 = !DILocation(line: 1004, column: 12, scope: !1071)
!1088 = !DILocation(line: 1006, column: 12, scope: !1071)
!1089 = !DILocation(line: 1006, column: 20, scope: !1071)
!1090 = !DILocation(line: 1006, column: 22, scope: !1071)
!1091 = !DILocation(line: 1006, column: 30, scope: !1071)
!1092 = !DILocation(line: 1006, column: 43, scope: !1071)
!1093 = !DILocation(line: 1006, column: 49, scope: !1071)
!1094 = !DILocation(line: 1006, column: 55, scope: !1071)
!1095 = !DILocation(line: 1006, column: 64, scope: !1071)
!1096 = !DILocation(line: 1007, column: 2, scope: !1071)
!1097 = !DILocation(line: 1007, column: 12, scope: !1071)
!1098 = !DILocation(line: 1006, column: 5, scope: !1071)
!1099 = distinct !DISubprogram(name: "command_info_to_details", scope: !3, file: !3, line: 432, type: !1100, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{null, !116, !1102}
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!1103 = !DILocalVariable(name: "info", arg: 1, scope: !1099, file: !3, line: 432, type: !116)
!1104 = !DILocation(line: 432, column: 38, scope: !1099)
!1105 = !DILocalVariable(name: "details", arg: 2, scope: !1099, file: !3, line: 432, type: !1102)
!1106 = !DILocation(line: 432, column: 70, scope: !1099)
!1107 = !DILocalVariable(name: "i", scope: !1099, file: !3, line: 434, type: !54)
!1108 = !DILocation(line: 434, column: 9, scope: !1099)
!1109 = !DILocalVariable(name: "lval", scope: !1099, file: !3, line: 435, type: !1110)
!1110 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1111 = !DILocation(line: 435, column: 10, scope: !1099)
!1112 = !DILocalVariable(name: "ulval", scope: !1099, file: !3, line: 436, type: !52)
!1113 = !DILocation(line: 436, column: 19, scope: !1099)
!1114 = !DILocalVariable(name: "cp", scope: !1099, file: !3, line: 437, type: !111)
!1115 = !DILocation(line: 437, column: 11, scope: !1099)
!1116 = !DILocalVariable(name: "ep", scope: !1099, file: !3, line: 437, type: !111)
!1117 = !DILocation(line: 437, column: 16, scope: !1099)
!1118 = !DILocation(line: 439, column: 12, scope: !1099)
!1119 = !DILocation(line: 439, column: 5, scope: !1099)
!1120 = !DILocation(line: 440, column: 5, scope: !1099)
!1121 = !DILocation(line: 440, column: 14, scope: !1099)
!1122 = !DILocation(line: 440, column: 24, scope: !1099)
!1123 = !DILocation(line: 448, column: 12, scope: !1124)
!1124 = distinct !DILexicalBlock(scope: !1099, file: !3, line: 448, column: 5)
!1125 = !DILocation(line: 448, column: 10, scope: !1124)
!1126 = !DILocation(line: 448, column: 17, scope: !1127)
!1127 = distinct !DILexicalBlock(scope: !1124, file: !3, line: 448, column: 5)
!1128 = !DILocation(line: 448, column: 22, scope: !1127)
!1129 = !DILocation(line: 448, column: 25, scope: !1127)
!1130 = !DILocation(line: 448, column: 5, scope: !1124)
!1131 = !DILocation(line: 449, column: 36, scope: !1132)
!1132 = distinct !DILexicalBlock(scope: !1127, file: !3, line: 448, column: 39)
!1133 = !DILocation(line: 449, column: 41, scope: !1132)
!1134 = !DILocation(line: 449, column: 2, scope: !1132)
!1135 = !DILocation(line: 450, column: 10, scope: !1132)
!1136 = !DILocation(line: 450, column: 15, scope: !1132)
!1137 = !DILocation(line: 450, column: 2, scope: !1132)
!1138 = !DILocation(line: 452, column: 3, scope: !1139)
!1139 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 452, column: 3)
!1140 = distinct !DILexicalBlock(scope: !1132, file: !3, line: 450, column: 22)
!1141 = !DILocation(line: 452, column: 3, scope: !1140)
!1142 = !DILocation(line: 452, column: 3, scope: !1143)
!1143 = distinct !DILexicalBlock(scope: !1139, file: !3, line: 452, column: 3)
!1144 = !DILocation(line: 453, column: 3, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 453, column: 3)
!1146 = !DILocation(line: 453, column: 3, scope: !1140)
!1147 = !DILocation(line: 453, column: 3, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1145, file: !3, line: 453, column: 3)
!1149 = !DILocation(line: 454, column: 3, scope: !1150)
!1150 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 454, column: 3)
!1151 = !DILocation(line: 454, column: 3, scope: !1140)
!1152 = !DILocation(line: 454, column: 3, scope: !1153)
!1153 = distinct !DILexicalBlock(scope: !1150, file: !3, line: 454, column: 3)
!1154 = !DILocation(line: 455, column: 29, scope: !1155)
!1155 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 455, column: 7)
!1156 = !DILocation(line: 455, column: 34, scope: !1155)
!1157 = !DILocation(line: 455, column: 7, scope: !1155)
!1158 = !DILocation(line: 455, column: 64, scope: !1155)
!1159 = !DILocation(line: 455, column: 7, scope: !1140)
!1160 = !DILocation(line: 456, column: 12, scope: !1161)
!1161 = distinct !DILexicalBlock(scope: !1155, file: !3, line: 455, column: 70)
!1162 = !DILocation(line: 456, column: 17, scope: !1161)
!1163 = !DILocation(line: 456, column: 20, scope: !1161)
!1164 = !DILocation(line: 456, column: 43, scope: !1161)
!1165 = !DILocation(line: 456, column: 10, scope: !1161)
!1166 = !DILocation(line: 457, column: 12, scope: !1167)
!1167 = distinct !DILexicalBlock(scope: !1161, file: !3, line: 457, column: 11)
!1168 = !DILocation(line: 457, column: 11, scope: !1167)
!1169 = !DILocation(line: 457, column: 15, scope: !1167)
!1170 = !DILocation(line: 457, column: 11, scope: !1161)
!1171 = !DILocation(line: 458, column: 4, scope: !1167)
!1172 = !DILocation(line: 459, column: 7, scope: !1161)
!1173 = !DILocation(line: 459, column: 13, scope: !1161)
!1174 = !DILocation(line: 460, column: 21, scope: !1161)
!1175 = !DILocation(line: 460, column: 14, scope: !1161)
!1176 = !DILocation(line: 460, column: 12, scope: !1161)
!1177 = !DILocation(line: 461, column: 12, scope: !1178)
!1178 = distinct !DILexicalBlock(scope: !1161, file: !3, line: 461, column: 11)
!1179 = !DILocation(line: 461, column: 11, scope: !1178)
!1180 = !DILocation(line: 461, column: 15, scope: !1178)
!1181 = !DILocation(line: 461, column: 23, scope: !1178)
!1182 = !DILocation(line: 461, column: 27, scope: !1178)
!1183 = !DILocation(line: 461, column: 26, scope: !1178)
!1184 = !DILocation(line: 461, column: 30, scope: !1178)
!1185 = !DILocation(line: 461, column: 38, scope: !1178)
!1186 = !DILocation(line: 462, column: 6, scope: !1178)
!1187 = !DILocation(line: 462, column: 12, scope: !1178)
!1188 = !DILocation(line: 462, column: 22, scope: !1178)
!1189 = !DILocation(line: 463, column: 5, scope: !1178)
!1190 = !DILocation(line: 463, column: 10, scope: !1178)
!1191 = !DILocation(line: 463, column: 22, scope: !1178)
!1192 = !DILocation(line: 463, column: 25, scope: !1178)
!1193 = !DILocation(line: 463, column: 30, scope: !1178)
!1194 = !DILocation(line: 463, column: 44, scope: !1178)
!1195 = !DILocation(line: 464, column: 4, scope: !1178)
!1196 = !DILocation(line: 464, column: 9, scope: !1178)
!1197 = !DILocation(line: 464, column: 19, scope: !1178)
!1198 = !DILocation(line: 464, column: 22, scope: !1178)
!1199 = !DILocation(line: 464, column: 27, scope: !1178)
!1200 = !DILocation(line: 461, column: 11, scope: !1161)
!1201 = !DILocation(line: 465, column: 30, scope: !1202)
!1202 = distinct !DILexicalBlock(scope: !1178, file: !3, line: 464, column: 38)
!1203 = !DILocation(line: 465, column: 25, scope: !1202)
!1204 = !DILocation(line: 465, column: 4, scope: !1202)
!1205 = !DILocation(line: 465, column: 13, scope: !1202)
!1206 = !DILocation(line: 465, column: 23, scope: !1202)
!1207 = !DILocation(line: 466, column: 7, scope: !1202)
!1208 = !DILocation(line: 467, column: 7, scope: !1161)
!1209 = !DILocation(line: 469, column: 3, scope: !1140)
!1210 = !DILocation(line: 471, column: 3, scope: !1211)
!1211 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 471, column: 3)
!1212 = !DILocation(line: 471, column: 3, scope: !1140)
!1213 = !DILocation(line: 471, column: 3, scope: !1214)
!1214 = distinct !DILexicalBlock(scope: !1211, file: !3, line: 471, column: 3)
!1215 = !DILocation(line: 472, column: 3, scope: !1140)
!1216 = !DILocation(line: 475, column: 24, scope: !1217)
!1217 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 475, column: 7)
!1218 = !DILocation(line: 475, column: 29, scope: !1217)
!1219 = !DILocation(line: 475, column: 7, scope: !1217)
!1220 = !DILocation(line: 475, column: 54, scope: !1217)
!1221 = !DILocation(line: 475, column: 7, scope: !1140)
!1222 = !DILocation(line: 476, column: 12, scope: !1223)
!1223 = distinct !DILexicalBlock(scope: !1217, file: !3, line: 475, column: 60)
!1224 = !DILocation(line: 476, column: 17, scope: !1223)
!1225 = !DILocation(line: 476, column: 20, scope: !1223)
!1226 = !DILocation(line: 476, column: 38, scope: !1223)
!1227 = !DILocation(line: 476, column: 10, scope: !1223)
!1228 = !DILocation(line: 477, column: 12, scope: !1229)
!1229 = distinct !DILexicalBlock(scope: !1223, file: !3, line: 477, column: 11)
!1230 = !DILocation(line: 477, column: 11, scope: !1229)
!1231 = !DILocation(line: 477, column: 15, scope: !1229)
!1232 = !DILocation(line: 477, column: 11, scope: !1223)
!1233 = !DILocation(line: 478, column: 4, scope: !1229)
!1234 = !DILocation(line: 479, column: 7, scope: !1223)
!1235 = !DILocation(line: 479, column: 13, scope: !1223)
!1236 = !DILocation(line: 480, column: 21, scope: !1223)
!1237 = !DILocation(line: 480, column: 14, scope: !1223)
!1238 = !DILocation(line: 480, column: 12, scope: !1223)
!1239 = !DILocation(line: 481, column: 12, scope: !1240)
!1240 = distinct !DILexicalBlock(scope: !1223, file: !3, line: 481, column: 11)
!1241 = !DILocation(line: 481, column: 11, scope: !1240)
!1242 = !DILocation(line: 481, column: 15, scope: !1240)
!1243 = !DILocation(line: 481, column: 23, scope: !1240)
!1244 = !DILocation(line: 481, column: 27, scope: !1240)
!1245 = !DILocation(line: 481, column: 26, scope: !1240)
!1246 = !DILocation(line: 481, column: 30, scope: !1240)
!1247 = !DILocation(line: 481, column: 38, scope: !1240)
!1248 = !DILocation(line: 482, column: 6, scope: !1240)
!1249 = !DILocation(line: 482, column: 12, scope: !1240)
!1250 = !DILocation(line: 482, column: 22, scope: !1240)
!1251 = !DILocation(line: 483, column: 5, scope: !1240)
!1252 = !DILocation(line: 483, column: 10, scope: !1240)
!1253 = !DILocation(line: 483, column: 22, scope: !1240)
!1254 = !DILocation(line: 483, column: 25, scope: !1240)
!1255 = !DILocation(line: 483, column: 30, scope: !1240)
!1256 = !DILocation(line: 483, column: 44, scope: !1240)
!1257 = !DILocation(line: 484, column: 4, scope: !1240)
!1258 = !DILocation(line: 484, column: 9, scope: !1240)
!1259 = !DILocation(line: 484, column: 19, scope: !1240)
!1260 = !DILocation(line: 484, column: 22, scope: !1240)
!1261 = !DILocation(line: 484, column: 27, scope: !1240)
!1262 = !DILocation(line: 481, column: 11, scope: !1223)
!1263 = !DILocation(line: 485, column: 29, scope: !1264)
!1264 = distinct !DILexicalBlock(scope: !1240, file: !3, line: 484, column: 38)
!1265 = !DILocation(line: 485, column: 24, scope: !1264)
!1266 = !DILocation(line: 485, column: 4, scope: !1264)
!1267 = !DILocation(line: 485, column: 13, scope: !1264)
!1268 = !DILocation(line: 485, column: 22, scope: !1264)
!1269 = !DILocation(line: 486, column: 8, scope: !1264)
!1270 = !DILocation(line: 486, column: 17, scope: !1264)
!1271 = !DILocation(line: 486, column: 4, scope: !1264)
!1272 = !DILocation(line: 487, column: 7, scope: !1264)
!1273 = !DILocation(line: 488, column: 7, scope: !1223)
!1274 = !DILocation(line: 490, column: 26, scope: !1275)
!1275 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 490, column: 7)
!1276 = !DILocation(line: 490, column: 31, scope: !1275)
!1277 = !DILocation(line: 490, column: 7, scope: !1275)
!1278 = !DILocation(line: 490, column: 58, scope: !1275)
!1279 = !DILocation(line: 490, column: 7, scope: !1140)
!1280 = !DILocation(line: 491, column: 19, scope: !1281)
!1281 = distinct !DILexicalBlock(scope: !1282, file: !3, line: 491, column: 11)
!1282 = distinct !DILexicalBlock(scope: !1275, file: !3, line: 490, column: 64)
!1283 = !DILocation(line: 491, column: 24, scope: !1281)
!1284 = !DILocation(line: 491, column: 27, scope: !1281)
!1285 = !DILocation(line: 491, column: 47, scope: !1281)
!1286 = !DILocation(line: 491, column: 11, scope: !1281)
!1287 = !DILocation(line: 491, column: 52, scope: !1281)
!1288 = !DILocation(line: 491, column: 11, scope: !1282)
!1289 = !DILocation(line: 492, column: 8, scope: !1281)
!1290 = !DILocation(line: 492, column: 17, scope: !1281)
!1291 = !DILocation(line: 492, column: 4, scope: !1281)
!1292 = !DILocation(line: 493, column: 7, scope: !1282)
!1293 = !DILocation(line: 495, column: 3, scope: !1140)
!1294 = !DILocation(line: 497, column: 35, scope: !1295)
!1295 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 497, column: 7)
!1296 = !DILocation(line: 497, column: 40, scope: !1295)
!1297 = !DILocation(line: 497, column: 7, scope: !1295)
!1298 = !DILocation(line: 497, column: 76, scope: !1295)
!1299 = !DILocation(line: 497, column: 7, scope: !1140)
!1300 = !DILocation(line: 498, column: 19, scope: !1301)
!1301 = distinct !DILexicalBlock(scope: !1302, file: !3, line: 498, column: 11)
!1302 = distinct !DILexicalBlock(scope: !1295, file: !3, line: 497, column: 82)
!1303 = !DILocation(line: 498, column: 24, scope: !1301)
!1304 = !DILocation(line: 498, column: 27, scope: !1301)
!1305 = !DILocation(line: 498, column: 56, scope: !1301)
!1306 = !DILocation(line: 498, column: 11, scope: !1301)
!1307 = !DILocation(line: 498, column: 61, scope: !1301)
!1308 = !DILocation(line: 498, column: 11, scope: !1302)
!1309 = !DILocation(line: 499, column: 8, scope: !1301)
!1310 = !DILocation(line: 499, column: 17, scope: !1301)
!1311 = !DILocation(line: 499, column: 4, scope: !1301)
!1312 = !DILocation(line: 500, column: 7, scope: !1302)
!1313 = !DILocation(line: 502, column: 3, scope: !1140)
!1314 = !DILocation(line: 504, column: 30, scope: !1315)
!1315 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 504, column: 7)
!1316 = !DILocation(line: 504, column: 35, scope: !1315)
!1317 = !DILocation(line: 504, column: 7, scope: !1315)
!1318 = !DILocation(line: 504, column: 66, scope: !1315)
!1319 = !DILocation(line: 504, column: 7, scope: !1140)
!1320 = !DILocation(line: 505, column: 12, scope: !1321)
!1321 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 504, column: 72)
!1322 = !DILocation(line: 505, column: 17, scope: !1321)
!1323 = !DILocation(line: 505, column: 20, scope: !1321)
!1324 = !DILocation(line: 505, column: 44, scope: !1321)
!1325 = !DILocation(line: 505, column: 10, scope: !1321)
!1326 = !DILocation(line: 506, column: 12, scope: !1327)
!1327 = distinct !DILexicalBlock(scope: !1321, file: !3, line: 506, column: 11)
!1328 = !DILocation(line: 506, column: 11, scope: !1327)
!1329 = !DILocation(line: 506, column: 15, scope: !1327)
!1330 = !DILocation(line: 506, column: 11, scope: !1321)
!1331 = !DILocation(line: 507, column: 4, scope: !1327)
!1332 = !DILocation(line: 508, column: 7, scope: !1321)
!1333 = !DILocation(line: 508, column: 13, scope: !1321)
!1334 = !DILocation(line: 509, column: 23, scope: !1321)
!1335 = !DILocation(line: 509, column: 15, scope: !1321)
!1336 = !DILocation(line: 509, column: 13, scope: !1321)
!1337 = !DILocation(line: 510, column: 12, scope: !1338)
!1338 = distinct !DILexicalBlock(scope: !1321, file: !3, line: 510, column: 11)
!1339 = !DILocation(line: 510, column: 11, scope: !1338)
!1340 = !DILocation(line: 510, column: 15, scope: !1338)
!1341 = !DILocation(line: 510, column: 23, scope: !1338)
!1342 = !DILocation(line: 510, column: 27, scope: !1338)
!1343 = !DILocation(line: 510, column: 26, scope: !1338)
!1344 = !DILocation(line: 510, column: 30, scope: !1338)
!1345 = !DILocation(line: 510, column: 38, scope: !1338)
!1346 = !DILocation(line: 511, column: 5, scope: !1338)
!1347 = !DILocation(line: 511, column: 11, scope: !1338)
!1348 = !DILocation(line: 511, column: 21, scope: !1338)
!1349 = !DILocation(line: 511, column: 24, scope: !1338)
!1350 = !DILocation(line: 511, column: 30, scope: !1338)
!1351 = !DILocation(line: 510, column: 11, scope: !1321)
!1352 = !DILocation(line: 512, column: 27, scope: !1353)
!1353 = distinct !DILexicalBlock(scope: !1338, file: !3, line: 511, column: 45)
!1354 = !DILocation(line: 512, column: 20, scope: !1353)
!1355 = !DILocation(line: 512, column: 4, scope: !1353)
!1356 = !DILocation(line: 512, column: 13, scope: !1353)
!1357 = !DILocation(line: 512, column: 18, scope: !1353)
!1358 = !DILocation(line: 513, column: 8, scope: !1353)
!1359 = !DILocation(line: 513, column: 17, scope: !1353)
!1360 = !DILocation(line: 513, column: 4, scope: !1353)
!1361 = !DILocation(line: 514, column: 7, scope: !1353)
!1362 = !DILocation(line: 515, column: 7, scope: !1321)
!1363 = !DILocation(line: 517, column: 30, scope: !1364)
!1364 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 517, column: 7)
!1365 = !DILocation(line: 517, column: 35, scope: !1364)
!1366 = !DILocation(line: 517, column: 7, scope: !1364)
!1367 = !DILocation(line: 517, column: 66, scope: !1364)
!1368 = !DILocation(line: 517, column: 7, scope: !1140)
!1369 = !DILocation(line: 518, column: 12, scope: !1370)
!1370 = distinct !DILexicalBlock(scope: !1364, file: !3, line: 517, column: 72)
!1371 = !DILocation(line: 518, column: 17, scope: !1370)
!1372 = !DILocation(line: 518, column: 20, scope: !1370)
!1373 = !DILocation(line: 518, column: 44, scope: !1370)
!1374 = !DILocation(line: 518, column: 10, scope: !1370)
!1375 = !DILocation(line: 519, column: 12, scope: !1376)
!1376 = distinct !DILexicalBlock(scope: !1370, file: !3, line: 519, column: 11)
!1377 = !DILocation(line: 519, column: 11, scope: !1376)
!1378 = !DILocation(line: 519, column: 15, scope: !1376)
!1379 = !DILocation(line: 519, column: 11, scope: !1370)
!1380 = !DILocation(line: 520, column: 4, scope: !1376)
!1381 = !DILocation(line: 521, column: 7, scope: !1370)
!1382 = !DILocation(line: 521, column: 13, scope: !1370)
!1383 = !DILocation(line: 522, column: 23, scope: !1370)
!1384 = !DILocation(line: 522, column: 15, scope: !1370)
!1385 = !DILocation(line: 522, column: 13, scope: !1370)
!1386 = !DILocation(line: 523, column: 12, scope: !1387)
!1387 = distinct !DILexicalBlock(scope: !1370, file: !3, line: 523, column: 11)
!1388 = !DILocation(line: 523, column: 11, scope: !1387)
!1389 = !DILocation(line: 523, column: 15, scope: !1387)
!1390 = !DILocation(line: 523, column: 23, scope: !1387)
!1391 = !DILocation(line: 523, column: 27, scope: !1387)
!1392 = !DILocation(line: 523, column: 26, scope: !1387)
!1393 = !DILocation(line: 523, column: 30, scope: !1387)
!1394 = !DILocation(line: 523, column: 38, scope: !1387)
!1395 = !DILocation(line: 524, column: 5, scope: !1387)
!1396 = !DILocation(line: 524, column: 11, scope: !1387)
!1397 = !DILocation(line: 524, column: 21, scope: !1387)
!1398 = !DILocation(line: 524, column: 24, scope: !1387)
!1399 = !DILocation(line: 524, column: 30, scope: !1387)
!1400 = !DILocation(line: 523, column: 11, scope: !1370)
!1401 = !DILocation(line: 525, column: 27, scope: !1402)
!1402 = distinct !DILexicalBlock(scope: !1387, file: !3, line: 524, column: 45)
!1403 = !DILocation(line: 525, column: 20, scope: !1402)
!1404 = !DILocation(line: 525, column: 4, scope: !1402)
!1405 = !DILocation(line: 525, column: 13, scope: !1402)
!1406 = !DILocation(line: 525, column: 18, scope: !1402)
!1407 = !DILocation(line: 526, column: 8, scope: !1402)
!1408 = !DILocation(line: 526, column: 17, scope: !1402)
!1409 = !DILocation(line: 526, column: 4, scope: !1402)
!1410 = !DILocation(line: 527, column: 7, scope: !1402)
!1411 = !DILocation(line: 528, column: 7, scope: !1370)
!1412 = !DILocation(line: 530, column: 29, scope: !1413)
!1413 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 530, column: 7)
!1414 = !DILocation(line: 530, column: 34, scope: !1413)
!1415 = !DILocation(line: 530, column: 7, scope: !1413)
!1416 = !DILocation(line: 530, column: 64, scope: !1413)
!1417 = !DILocation(line: 530, column: 7, scope: !1140)
!1418 = !DILocation(line: 531, column: 12, scope: !1419)
!1419 = distinct !DILexicalBlock(scope: !1413, file: !3, line: 530, column: 70)
!1420 = !DILocation(line: 531, column: 17, scope: !1419)
!1421 = !DILocation(line: 531, column: 20, scope: !1419)
!1422 = !DILocation(line: 531, column: 43, scope: !1419)
!1423 = !DILocation(line: 531, column: 10, scope: !1419)
!1424 = !DILocation(line: 532, column: 12, scope: !1425)
!1425 = distinct !DILexicalBlock(scope: !1419, file: !3, line: 532, column: 11)
!1426 = !DILocation(line: 532, column: 11, scope: !1425)
!1427 = !DILocation(line: 532, column: 15, scope: !1425)
!1428 = !DILocation(line: 532, column: 11, scope: !1419)
!1429 = !DILocation(line: 533, column: 4, scope: !1425)
!1430 = !DILocation(line: 534, column: 7, scope: !1419)
!1431 = !DILocation(line: 534, column: 13, scope: !1419)
!1432 = !DILocation(line: 535, column: 23, scope: !1419)
!1433 = !DILocation(line: 535, column: 15, scope: !1419)
!1434 = !DILocation(line: 535, column: 13, scope: !1419)
!1435 = !DILocation(line: 536, column: 12, scope: !1436)
!1436 = distinct !DILexicalBlock(scope: !1419, file: !3, line: 536, column: 11)
!1437 = !DILocation(line: 536, column: 11, scope: !1436)
!1438 = !DILocation(line: 536, column: 15, scope: !1436)
!1439 = !DILocation(line: 536, column: 23, scope: !1436)
!1440 = !DILocation(line: 536, column: 27, scope: !1436)
!1441 = !DILocation(line: 536, column: 26, scope: !1436)
!1442 = !DILocation(line: 536, column: 30, scope: !1436)
!1443 = !DILocation(line: 536, column: 38, scope: !1436)
!1444 = !DILocation(line: 537, column: 5, scope: !1436)
!1445 = !DILocation(line: 537, column: 11, scope: !1436)
!1446 = !DILocation(line: 537, column: 21, scope: !1436)
!1447 = !DILocation(line: 537, column: 24, scope: !1436)
!1448 = !DILocation(line: 537, column: 30, scope: !1436)
!1449 = !DILocation(line: 536, column: 11, scope: !1419)
!1450 = !DILocation(line: 538, column: 26, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !1436, file: !3, line: 537, column: 45)
!1452 = !DILocation(line: 538, column: 19, scope: !1451)
!1453 = !DILocation(line: 538, column: 4, scope: !1451)
!1454 = !DILocation(line: 538, column: 13, scope: !1451)
!1455 = !DILocation(line: 538, column: 17, scope: !1451)
!1456 = !DILocation(line: 539, column: 8, scope: !1451)
!1457 = !DILocation(line: 539, column: 17, scope: !1451)
!1458 = !DILocation(line: 539, column: 4, scope: !1451)
!1459 = !DILocation(line: 540, column: 7, scope: !1451)
!1460 = !DILocation(line: 541, column: 7, scope: !1419)
!1461 = !DILocation(line: 543, column: 32, scope: !1462)
!1462 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 543, column: 7)
!1463 = !DILocation(line: 543, column: 37, scope: !1462)
!1464 = !DILocation(line: 543, column: 7, scope: !1462)
!1465 = !DILocation(line: 543, column: 70, scope: !1462)
!1466 = !DILocation(line: 543, column: 7, scope: !1140)
!1467 = !DILocalVariable(name: "j", scope: !1468, file: !3, line: 544, type: !54)
!1468 = distinct !DILexicalBlock(scope: !1462, file: !3, line: 543, column: 76)
!1469 = !DILocation(line: 544, column: 11, scope: !1468)
!1470 = !DILocation(line: 547, column: 12, scope: !1468)
!1471 = !DILocation(line: 547, column: 17, scope: !1468)
!1472 = !DILocation(line: 547, column: 20, scope: !1468)
!1473 = !DILocation(line: 547, column: 46, scope: !1468)
!1474 = !DILocation(line: 547, column: 10, scope: !1468)
!1475 = !DILocation(line: 548, column: 12, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1468, file: !3, line: 548, column: 11)
!1477 = !DILocation(line: 548, column: 11, scope: !1476)
!1478 = !DILocation(line: 548, column: 15, scope: !1476)
!1479 = !DILocation(line: 548, column: 11, scope: !1468)
!1480 = !DILocation(line: 549, column: 4, scope: !1476)
!1481 = !DILocation(line: 550, column: 7, scope: !1468)
!1482 = !DILocation(line: 551, column: 4, scope: !1483)
!1483 = distinct !DILexicalBlock(scope: !1484, file: !3, line: 550, column: 16)
!1484 = distinct !DILexicalBlock(scope: !1485, file: !3, line: 550, column: 7)
!1485 = distinct !DILexicalBlock(scope: !1468, file: !3, line: 550, column: 7)
!1486 = !DILocation(line: 551, column: 13, scope: !1483)
!1487 = !DILocation(line: 551, column: 20, scope: !1483)
!1488 = !DILocation(line: 552, column: 21, scope: !1489)
!1489 = distinct !DILexicalBlock(scope: !1483, file: !3, line: 552, column: 8)
!1490 = !DILocation(line: 552, column: 14, scope: !1489)
!1491 = !DILocation(line: 552, column: 12, scope: !1489)
!1492 = !DILocation(line: 552, column: 31, scope: !1489)
!1493 = !DILocation(line: 552, column: 8, scope: !1483)
!1494 = !DILocation(line: 553, column: 8, scope: !1489)
!1495 = !DILocation(line: 554, column: 6, scope: !1483)
!1496 = !DILocation(line: 550, column: 7, scope: !1484)
!1497 = distinct !{!1497, !1498, !1499}
!1498 = !DILocation(line: 550, column: 7, scope: !1485)
!1499 = !DILocation(line: 555, column: 7, scope: !1485)
!1500 = !DILocation(line: 556, column: 11, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1468, file: !3, line: 556, column: 11)
!1502 = !DILocation(line: 556, column: 20, scope: !1501)
!1503 = !DILocation(line: 556, column: 28, scope: !1501)
!1504 = !DILocation(line: 556, column: 11, scope: !1468)
!1505 = !DILocation(line: 558, column: 17, scope: !1506)
!1506 = distinct !DILexicalBlock(scope: !1501, file: !3, line: 556, column: 34)
!1507 = !DILocation(line: 558, column: 26, scope: !1506)
!1508 = !DILocation(line: 558, column: 8, scope: !1506)
!1509 = !DILocation(line: 557, column: 4, scope: !1506)
!1510 = !DILocation(line: 557, column: 13, scope: !1506)
!1511 = !DILocation(line: 557, column: 20, scope: !1506)
!1512 = !DILocation(line: 559, column: 9, scope: !1506)
!1513 = !DILocation(line: 559, column: 14, scope: !1506)
!1514 = !DILocation(line: 559, column: 17, scope: !1506)
!1515 = !DILocation(line: 559, column: 43, scope: !1506)
!1516 = !DILocation(line: 559, column: 7, scope: !1506)
!1517 = !DILocation(line: 560, column: 11, scope: !1518)
!1518 = distinct !DILexicalBlock(scope: !1506, file: !3, line: 560, column: 4)
!1519 = !DILocation(line: 560, column: 9, scope: !1518)
!1520 = !DILocation(line: 560, column: 16, scope: !1521)
!1521 = distinct !DILexicalBlock(scope: !1518, file: !3, line: 560, column: 4)
!1522 = !DILocation(line: 560, column: 20, scope: !1521)
!1523 = !DILocation(line: 560, column: 29, scope: !1521)
!1524 = !DILocation(line: 560, column: 18, scope: !1521)
!1525 = !DILocation(line: 560, column: 4, scope: !1518)
!1526 = !DILocation(line: 561, column: 8, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1521, file: !3, line: 560, column: 39)
!1528 = !DILocation(line: 561, column: 14, scope: !1527)
!1529 = !DILocation(line: 562, column: 24, scope: !1527)
!1530 = !DILocation(line: 562, column: 16, scope: !1527)
!1531 = !DILocation(line: 562, column: 14, scope: !1527)
!1532 = !DILocation(line: 563, column: 13, scope: !1533)
!1533 = distinct !DILexicalBlock(scope: !1527, file: !3, line: 563, column: 12)
!1534 = !DILocation(line: 563, column: 12, scope: !1533)
!1535 = !DILocation(line: 563, column: 16, scope: !1533)
!1536 = !DILocation(line: 563, column: 24, scope: !1533)
!1537 = !DILocation(line: 563, column: 29, scope: !1533)
!1538 = !DILocation(line: 563, column: 28, scope: !1533)
!1539 = !DILocation(line: 563, column: 32, scope: !1533)
!1540 = !DILocation(line: 563, column: 39, scope: !1533)
!1541 = !DILocation(line: 563, column: 43, scope: !1533)
!1542 = !DILocation(line: 563, column: 42, scope: !1533)
!1543 = !DILocation(line: 563, column: 46, scope: !1533)
!1544 = !DILocation(line: 563, column: 55, scope: !1533)
!1545 = !DILocation(line: 564, column: 6, scope: !1533)
!1546 = !DILocation(line: 564, column: 12, scope: !1533)
!1547 = !DILocation(line: 564, column: 25, scope: !1533)
!1548 = !DILocation(line: 564, column: 28, scope: !1533)
!1549 = !DILocation(line: 564, column: 34, scope: !1533)
!1550 = !DILocation(line: 563, column: 12, scope: !1527)
!1551 = !DILocation(line: 565, column: 5, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1533, file: !3, line: 564, column: 46)
!1553 = !DILocation(line: 567, column: 38, scope: !1527)
!1554 = !DILocation(line: 567, column: 31, scope: !1527)
!1555 = !DILocation(line: 567, column: 8, scope: !1527)
!1556 = !DILocation(line: 567, column: 17, scope: !1527)
!1557 = !DILocation(line: 567, column: 25, scope: !1527)
!1558 = !DILocation(line: 567, column: 29, scope: !1527)
!1559 = !DILocation(line: 568, column: 13, scope: !1527)
!1560 = !DILocation(line: 568, column: 16, scope: !1527)
!1561 = !DILocation(line: 568, column: 11, scope: !1527)
!1562 = !DILocation(line: 560, column: 4, scope: !1521)
!1563 = distinct !{!1563, !1525, !1564, !397}
!1564 = !DILocation(line: 569, column: 4, scope: !1518)
!1565 = !DILocation(line: 570, column: 23, scope: !1506)
!1566 = !DILocation(line: 570, column: 4, scope: !1506)
!1567 = !DILocation(line: 570, column: 13, scope: !1506)
!1568 = !DILocation(line: 570, column: 21, scope: !1506)
!1569 = !DILocation(line: 571, column: 7, scope: !1506)
!1570 = !DILocation(line: 572, column: 7, scope: !1468)
!1571 = !DILocation(line: 574, column: 29, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 574, column: 7)
!1573 = !DILocation(line: 574, column: 34, scope: !1572)
!1574 = !DILocation(line: 574, column: 7, scope: !1572)
!1575 = !DILocation(line: 574, column: 64, scope: !1572)
!1576 = !DILocation(line: 574, column: 7, scope: !1140)
!1577 = !DILocation(line: 575, column: 12, scope: !1578)
!1578 = distinct !DILexicalBlock(scope: !1572, file: !3, line: 574, column: 70)
!1579 = !DILocation(line: 575, column: 17, scope: !1578)
!1580 = !DILocation(line: 575, column: 20, scope: !1578)
!1581 = !DILocation(line: 575, column: 43, scope: !1578)
!1582 = !DILocation(line: 575, column: 10, scope: !1578)
!1583 = !DILocation(line: 576, column: 12, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1578, file: !3, line: 576, column: 11)
!1585 = !DILocation(line: 576, column: 11, scope: !1584)
!1586 = !DILocation(line: 576, column: 15, scope: !1584)
!1587 = !DILocation(line: 576, column: 11, scope: !1578)
!1588 = !DILocation(line: 577, column: 4, scope: !1584)
!1589 = !DILocation(line: 578, column: 7, scope: !1578)
!1590 = !DILocation(line: 578, column: 13, scope: !1578)
!1591 = !DILocation(line: 579, column: 23, scope: !1578)
!1592 = !DILocation(line: 579, column: 15, scope: !1578)
!1593 = !DILocation(line: 579, column: 13, scope: !1578)
!1594 = !DILocation(line: 580, column: 12, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1578, file: !3, line: 580, column: 11)
!1596 = !DILocation(line: 580, column: 11, scope: !1595)
!1597 = !DILocation(line: 580, column: 15, scope: !1595)
!1598 = !DILocation(line: 580, column: 23, scope: !1595)
!1599 = !DILocation(line: 580, column: 27, scope: !1595)
!1600 = !DILocation(line: 580, column: 26, scope: !1595)
!1601 = !DILocation(line: 580, column: 30, scope: !1595)
!1602 = !DILocation(line: 580, column: 38, scope: !1595)
!1603 = !DILocation(line: 581, column: 5, scope: !1595)
!1604 = !DILocation(line: 581, column: 11, scope: !1595)
!1605 = !DILocation(line: 581, column: 21, scope: !1595)
!1606 = !DILocation(line: 581, column: 24, scope: !1595)
!1607 = !DILocation(line: 581, column: 30, scope: !1595)
!1608 = !DILocation(line: 580, column: 11, scope: !1578)
!1609 = !DILocation(line: 582, column: 26, scope: !1610)
!1610 = distinct !DILexicalBlock(scope: !1595, file: !3, line: 581, column: 45)
!1611 = !DILocation(line: 582, column: 19, scope: !1610)
!1612 = !DILocation(line: 582, column: 4, scope: !1610)
!1613 = !DILocation(line: 582, column: 13, scope: !1610)
!1614 = !DILocation(line: 582, column: 17, scope: !1610)
!1615 = !DILocation(line: 583, column: 8, scope: !1610)
!1616 = !DILocation(line: 583, column: 17, scope: !1610)
!1617 = !DILocation(line: 583, column: 4, scope: !1610)
!1618 = !DILocation(line: 584, column: 7, scope: !1610)
!1619 = !DILocation(line: 585, column: 7, scope: !1578)
!1620 = !DILocation(line: 587, column: 3, scope: !1140)
!1621 = !DILocation(line: 589, column: 3, scope: !1622)
!1622 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 589, column: 3)
!1623 = !DILocation(line: 589, column: 3, scope: !1140)
!1624 = !DILocation(line: 589, column: 3, scope: !1625)
!1625 = distinct !DILexicalBlock(scope: !1622, file: !3, line: 589, column: 3)
!1626 = !DILocation(line: 590, column: 3, scope: !1627)
!1627 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 590, column: 3)
!1628 = !DILocation(line: 590, column: 3, scope: !1140)
!1629 = !DILocation(line: 590, column: 3, scope: !1630)
!1630 = distinct !DILexicalBlock(scope: !1627, file: !3, line: 590, column: 3)
!1631 = !DILocation(line: 591, column: 28, scope: !1632)
!1632 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 591, column: 7)
!1633 = !DILocation(line: 591, column: 33, scope: !1632)
!1634 = !DILocation(line: 591, column: 7, scope: !1632)
!1635 = !DILocation(line: 591, column: 62, scope: !1632)
!1636 = !DILocation(line: 591, column: 7, scope: !1140)
!1637 = !DILocation(line: 592, column: 19, scope: !1638)
!1638 = distinct !DILexicalBlock(scope: !1639, file: !3, line: 592, column: 11)
!1639 = distinct !DILexicalBlock(scope: !1632, file: !3, line: 591, column: 68)
!1640 = !DILocation(line: 592, column: 24, scope: !1638)
!1641 = !DILocation(line: 592, column: 27, scope: !1638)
!1642 = !DILocation(line: 592, column: 49, scope: !1638)
!1643 = !DILocation(line: 592, column: 11, scope: !1638)
!1644 = !DILocation(line: 592, column: 54, scope: !1638)
!1645 = !DILocation(line: 592, column: 11, scope: !1639)
!1646 = !DILocation(line: 593, column: 8, scope: !1638)
!1647 = !DILocation(line: 593, column: 17, scope: !1638)
!1648 = !DILocation(line: 593, column: 4, scope: !1638)
!1649 = !DILocation(line: 594, column: 7, scope: !1639)
!1650 = !DILocation(line: 596, column: 3, scope: !1140)
!1651 = !DILocation(line: 598, column: 27, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 598, column: 7)
!1653 = !DILocation(line: 598, column: 32, scope: !1652)
!1654 = !DILocation(line: 598, column: 7, scope: !1652)
!1655 = !DILocation(line: 598, column: 60, scope: !1652)
!1656 = !DILocation(line: 598, column: 7, scope: !1140)
!1657 = !DILocation(line: 599, column: 12, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1652, file: !3, line: 598, column: 66)
!1659 = !DILocation(line: 599, column: 17, scope: !1658)
!1660 = !DILocation(line: 599, column: 20, scope: !1658)
!1661 = !DILocation(line: 599, column: 41, scope: !1658)
!1662 = !DILocation(line: 599, column: 10, scope: !1658)
!1663 = !DILocation(line: 600, column: 12, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1658, file: !3, line: 600, column: 11)
!1665 = !DILocation(line: 600, column: 11, scope: !1664)
!1666 = !DILocation(line: 600, column: 15, scope: !1664)
!1667 = !DILocation(line: 600, column: 11, scope: !1658)
!1668 = !DILocation(line: 601, column: 4, scope: !1664)
!1669 = !DILocation(line: 602, column: 7, scope: !1658)
!1670 = !DILocation(line: 602, column: 13, scope: !1658)
!1671 = !DILocation(line: 603, column: 21, scope: !1658)
!1672 = !DILocation(line: 603, column: 14, scope: !1658)
!1673 = !DILocation(line: 603, column: 12, scope: !1658)
!1674 = !DILocation(line: 604, column: 12, scope: !1675)
!1675 = distinct !DILexicalBlock(scope: !1658, file: !3, line: 604, column: 11)
!1676 = !DILocation(line: 604, column: 11, scope: !1675)
!1677 = !DILocation(line: 604, column: 15, scope: !1675)
!1678 = !DILocation(line: 604, column: 23, scope: !1675)
!1679 = !DILocation(line: 604, column: 27, scope: !1675)
!1680 = !DILocation(line: 604, column: 26, scope: !1675)
!1681 = !DILocation(line: 604, column: 30, scope: !1675)
!1682 = !DILocation(line: 604, column: 38, scope: !1675)
!1683 = !DILocation(line: 605, column: 6, scope: !1675)
!1684 = !DILocation(line: 605, column: 12, scope: !1675)
!1685 = !DILocation(line: 605, column: 22, scope: !1675)
!1686 = !DILocation(line: 606, column: 5, scope: !1675)
!1687 = !DILocation(line: 606, column: 10, scope: !1675)
!1688 = !DILocation(line: 606, column: 22, scope: !1675)
!1689 = !DILocation(line: 606, column: 25, scope: !1675)
!1690 = !DILocation(line: 606, column: 30, scope: !1675)
!1691 = !DILocation(line: 606, column: 44, scope: !1675)
!1692 = !DILocation(line: 607, column: 4, scope: !1675)
!1693 = !DILocation(line: 607, column: 9, scope: !1675)
!1694 = !DILocation(line: 607, column: 20, scope: !1675)
!1695 = !DILocation(line: 607, column: 23, scope: !1675)
!1696 = !DILocation(line: 607, column: 28, scope: !1675)
!1697 = !DILocation(line: 604, column: 11, scope: !1658)
!1698 = !DILocation(line: 608, column: 28, scope: !1699)
!1699 = distinct !DILexicalBlock(scope: !1675, file: !3, line: 607, column: 34)
!1700 = !DILocation(line: 608, column: 23, scope: !1699)
!1701 = !DILocation(line: 608, column: 4, scope: !1699)
!1702 = !DILocation(line: 608, column: 13, scope: !1699)
!1703 = !DILocation(line: 608, column: 21, scope: !1699)
!1704 = !DILocation(line: 609, column: 8, scope: !1699)
!1705 = !DILocation(line: 609, column: 17, scope: !1699)
!1706 = !DILocation(line: 609, column: 4, scope: !1699)
!1707 = !DILocation(line: 610, column: 7, scope: !1699)
!1708 = !DILocation(line: 611, column: 7, scope: !1658)
!1709 = !DILocation(line: 613, column: 3, scope: !1140)
!1710 = !DILocation(line: 615, column: 25, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 615, column: 7)
!1712 = !DILocation(line: 615, column: 30, scope: !1711)
!1713 = !DILocation(line: 615, column: 7, scope: !1711)
!1714 = !DILocation(line: 615, column: 56, scope: !1711)
!1715 = !DILocation(line: 615, column: 7, scope: !1140)
!1716 = !DILocation(line: 616, column: 12, scope: !1717)
!1717 = distinct !DILexicalBlock(scope: !1711, file: !3, line: 615, column: 62)
!1718 = !DILocation(line: 616, column: 17, scope: !1717)
!1719 = !DILocation(line: 616, column: 20, scope: !1717)
!1720 = !DILocation(line: 616, column: 39, scope: !1717)
!1721 = !DILocation(line: 616, column: 10, scope: !1717)
!1722 = !DILocation(line: 617, column: 12, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1717, file: !3, line: 617, column: 11)
!1724 = !DILocation(line: 617, column: 11, scope: !1723)
!1725 = !DILocation(line: 617, column: 15, scope: !1723)
!1726 = !DILocation(line: 617, column: 11, scope: !1717)
!1727 = !DILocation(line: 618, column: 4, scope: !1723)
!1728 = !DILocation(line: 619, column: 7, scope: !1717)
!1729 = !DILocation(line: 619, column: 13, scope: !1717)
!1730 = !DILocation(line: 620, column: 23, scope: !1717)
!1731 = !DILocation(line: 620, column: 15, scope: !1717)
!1732 = !DILocation(line: 620, column: 13, scope: !1717)
!1733 = !DILocation(line: 621, column: 12, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1717, file: !3, line: 621, column: 11)
!1735 = !DILocation(line: 621, column: 11, scope: !1734)
!1736 = !DILocation(line: 621, column: 15, scope: !1734)
!1737 = !DILocation(line: 621, column: 23, scope: !1734)
!1738 = !DILocation(line: 621, column: 27, scope: !1734)
!1739 = !DILocation(line: 621, column: 26, scope: !1734)
!1740 = !DILocation(line: 621, column: 30, scope: !1734)
!1741 = !DILocation(line: 621, column: 38, scope: !1734)
!1742 = !DILocation(line: 622, column: 5, scope: !1734)
!1743 = !DILocation(line: 622, column: 11, scope: !1734)
!1744 = !DILocation(line: 622, column: 21, scope: !1734)
!1745 = !DILocation(line: 622, column: 24, scope: !1734)
!1746 = !DILocation(line: 622, column: 30, scope: !1734)
!1747 = !DILocation(line: 621, column: 11, scope: !1717)
!1748 = !DILocation(line: 623, column: 28, scope: !1749)
!1749 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 622, column: 45)
!1750 = !DILocation(line: 623, column: 21, scope: !1749)
!1751 = !DILocation(line: 623, column: 4, scope: !1749)
!1752 = !DILocation(line: 623, column: 13, scope: !1749)
!1753 = !DILocation(line: 623, column: 19, scope: !1749)
!1754 = !DILocation(line: 624, column: 8, scope: !1749)
!1755 = !DILocation(line: 624, column: 17, scope: !1749)
!1756 = !DILocation(line: 624, column: 4, scope: !1749)
!1757 = !DILocation(line: 625, column: 7, scope: !1749)
!1758 = !DILocation(line: 626, column: 7, scope: !1717)
!1759 = !DILocation(line: 628, column: 27, scope: !1760)
!1760 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 628, column: 7)
!1761 = !DILocation(line: 628, column: 32, scope: !1760)
!1762 = !DILocation(line: 628, column: 7, scope: !1760)
!1763 = !DILocation(line: 628, column: 60, scope: !1760)
!1764 = !DILocation(line: 628, column: 7, scope: !1140)
!1765 = !DILocation(line: 629, column: 19, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 629, column: 11)
!1767 = distinct !DILexicalBlock(scope: !1760, file: !3, line: 628, column: 66)
!1768 = !DILocation(line: 629, column: 24, scope: !1766)
!1769 = !DILocation(line: 629, column: 27, scope: !1766)
!1770 = !DILocation(line: 629, column: 48, scope: !1766)
!1771 = !DILocation(line: 629, column: 11, scope: !1766)
!1772 = !DILocation(line: 629, column: 53, scope: !1766)
!1773 = !DILocation(line: 629, column: 11, scope: !1767)
!1774 = !DILocation(line: 630, column: 8, scope: !1766)
!1775 = !DILocation(line: 630, column: 17, scope: !1766)
!1776 = !DILocation(line: 630, column: 4, scope: !1766)
!1777 = !DILocation(line: 631, column: 7, scope: !1767)
!1778 = !DILocation(line: 633, column: 3, scope: !1140)
!1779 = !DILocation(line: 635, column: 5, scope: !1132)
!1780 = !DILocation(line: 448, column: 35, scope: !1127)
!1781 = !DILocation(line: 448, column: 5, scope: !1127)
!1782 = distinct !{!1782, !1130, !1783, !397}
!1783 = !DILocation(line: 635, column: 5, scope: !1124)
!1784 = !DILocation(line: 637, column: 16, scope: !1785)
!1785 = distinct !DILexicalBlock(scope: !1099, file: !3, line: 637, column: 9)
!1786 = !DILocation(line: 637, column: 25, scope: !1785)
!1787 = !DILocation(line: 637, column: 10, scope: !1785)
!1788 = !DILocation(line: 637, column: 9, scope: !1099)
!1789 = !DILocation(line: 638, column: 18, scope: !1785)
!1790 = !DILocation(line: 638, column: 27, scope: !1785)
!1791 = !DILocation(line: 638, column: 2, scope: !1785)
!1792 = !DILocation(line: 638, column: 11, scope: !1785)
!1793 = !DILocation(line: 638, column: 16, scope: !1785)
!1794 = !DILocation(line: 644, column: 1, scope: !1099)
!1795 = distinct !DISubprogram(name: "escape_cmnd", scope: !3, file: !3, line: 916, type: !1796, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{!111, !72}
!1798 = !DILocalVariable(name: "src", arg: 1, scope: !1795, file: !3, line: 916, type: !72)
!1799 = !DILocation(line: 916, column: 25, scope: !1795)
!1800 = !DILocalVariable(name: "cmnd", scope: !1795, file: !3, line: 918, type: !111)
!1801 = !DILocation(line: 918, column: 11, scope: !1795)
!1802 = !DILocalVariable(name: "dst", scope: !1795, file: !3, line: 918, type: !111)
!1803 = !DILocation(line: 918, column: 18, scope: !1795)
!1804 = !DILocation(line: 921, column: 38, scope: !1795)
!1805 = !DILocation(line: 921, column: 31, scope: !1795)
!1806 = !DILocation(line: 921, column: 29, scope: !1795)
!1807 = !DILocation(line: 921, column: 44, scope: !1795)
!1808 = !DILocation(line: 921, column: 18, scope: !1795)
!1809 = !DILocation(line: 921, column: 16, scope: !1795)
!1810 = !DILocation(line: 921, column: 10, scope: !1795)
!1811 = !DILocation(line: 922, column: 5, scope: !1795)
!1812 = !DILocation(line: 922, column: 13, scope: !1795)
!1813 = !DILocation(line: 922, column: 12, scope: !1795)
!1814 = !DILocation(line: 922, column: 17, scope: !1795)
!1815 = !DILocation(line: 923, column: 7, scope: !1816)
!1816 = distinct !DILexicalBlock(scope: !1817, file: !3, line: 923, column: 6)
!1817 = distinct !DILexicalBlock(scope: !1795, file: !3, line: 922, column: 26)
!1818 = !DILocation(line: 923, column: 36, scope: !1816)
!1819 = !DILocation(line: 923, column: 40, scope: !1816)
!1820 = !DILocation(line: 923, column: 69, scope: !1816)
!1821 = !DILocation(line: 924, column: 7, scope: !1816)
!1822 = !DILocation(line: 924, column: 6, scope: !1816)
!1823 = !DILocation(line: 924, column: 11, scope: !1816)
!1824 = !DILocation(line: 924, column: 18, scope: !1816)
!1825 = !DILocation(line: 924, column: 22, scope: !1816)
!1826 = !DILocation(line: 924, column: 21, scope: !1816)
!1827 = !DILocation(line: 924, column: 26, scope: !1816)
!1828 = !DILocation(line: 923, column: 6, scope: !1817)
!1829 = !DILocation(line: 926, column: 10, scope: !1830)
!1830 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 924, column: 34)
!1831 = !DILocation(line: 926, column: 13, scope: !1830)
!1832 = !DILocation(line: 927, column: 2, scope: !1830)
!1833 = !DILocation(line: 928, column: 15, scope: !1817)
!1834 = !DILocation(line: 928, column: 11, scope: !1817)
!1835 = !DILocation(line: 928, column: 6, scope: !1817)
!1836 = !DILocation(line: 928, column: 9, scope: !1817)
!1837 = distinct !{!1837, !1811, !1838, !397}
!1838 = !DILocation(line: 929, column: 5, scope: !1795)
!1839 = !DILocation(line: 930, column: 9, scope: !1795)
!1840 = !DILocation(line: 930, column: 12, scope: !1795)
!1841 = !DILocation(line: 932, column: 12, scope: !1795)
!1842 = !DILocation(line: 932, column: 5, scope: !1795)
!1843 = distinct !DISubprogram(name: "run_command", scope: !3, file: !3, line: 939, type: !1844, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !249)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!54, !1102, !130, !130}
!1846 = !DILocalVariable(name: "details", arg: 1, scope: !1843, file: !3, line: 939, type: !1102)
!1847 = !DILocation(line: 939, column: 37, scope: !1843)
!1848 = !DILocalVariable(name: "argv", arg: 2, scope: !1843, file: !3, line: 939, type: !130)
!1849 = !DILocation(line: 939, column: 52, scope: !1843)
!1850 = !DILocalVariable(name: "envp", arg: 3, scope: !1843, file: !3, line: 939, type: !130)
!1851 = !DILocation(line: 939, column: 66, scope: !1843)
!1852 = !DILocalVariable(name: "plugin", scope: !1843, file: !3, line: 941, type: !69)
!1853 = !DILocation(line: 941, column: 30, scope: !1843)
!1854 = !DILocalVariable(name: "cstat", scope: !1843, file: !3, line: 942, type: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "command_status", file: !220, line: 145, size: 64, elements: !1856)
!1856 = !{!1857, !1858}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1855, file: !220, line: 150, baseType: !54, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1855, file: !220, line: 151, baseType: !54, size: 32, offset: 32)
!1859 = !DILocation(line: 942, column: 27, scope: !1843)
!1860 = !DILocalVariable(name: "exitcode", scope: !1843, file: !3, line: 943, type: !54)
!1861 = !DILocation(line: 943, column: 9, scope: !1843)
!1862 = !DILocation(line: 945, column: 11, scope: !1843)
!1863 = !DILocation(line: 945, column: 16, scope: !1843)
!1864 = !DILocation(line: 946, column: 11, scope: !1843)
!1865 = !DILocation(line: 946, column: 15, scope: !1843)
!1866 = !DILocation(line: 948, column: 17, scope: !1843)
!1867 = !DILocation(line: 948, column: 26, scope: !1843)
!1868 = !DILocation(line: 948, column: 32, scope: !1843)
!1869 = !DILocation(line: 948, column: 5, scope: !1843)
!1870 = !DILocation(line: 950, column: 19, scope: !1843)
!1871 = !DILocation(line: 950, column: 5, scope: !1843)
!1872 = !DILocation(line: 953, column: 2, scope: !1873)
!1873 = distinct !DILexicalBlock(scope: !1843, file: !3, line: 950, column: 25)
!1874 = !DILocation(line: 954, column: 40, scope: !1873)
!1875 = !DILocation(line: 954, column: 2, scope: !1873)
!1876 = !DILocation(line: 955, column: 2, scope: !1877)
!1877 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 955, column: 2)
!1878 = !DILocation(line: 955, column: 2, scope: !1879)
!1879 = distinct !DILexicalBlock(scope: !1877, file: !3, line: 955, column: 2)
!1880 = !DILocation(line: 956, column: 6, scope: !1881)
!1881 = distinct !DILexicalBlock(scope: !1879, file: !3, line: 955, column: 38)
!1882 = !DILocation(line: 957, column: 18, scope: !1881)
!1883 = !DILocation(line: 957, column: 35, scope: !1881)
!1884 = !DILocation(line: 957, column: 6, scope: !1881)
!1885 = !DILocation(line: 958, column: 2, scope: !1881)
!1886 = distinct !{!1886, !1876, !1887, !397}
!1887 = !DILocation(line: 958, column: 2, scope: !1877)
!1888 = !DILocation(line: 959, column: 11, scope: !1873)
!1889 = !DILocation(line: 960, column: 2, scope: !1873)
!1890 = !DILocation(line: 963, column: 2, scope: !1873)
!1891 = !DILocation(line: 964, column: 37, scope: !1873)
!1892 = !DILocation(line: 964, column: 2, scope: !1873)
!1893 = !DILocation(line: 965, column: 2, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 965, column: 2)
!1895 = !DILocation(line: 965, column: 2, scope: !1896)
!1896 = distinct !DILexicalBlock(scope: !1894, file: !3, line: 965, column: 2)
!1897 = !DILocation(line: 966, column: 6, scope: !1898)
!1898 = distinct !DILexicalBlock(scope: !1896, file: !3, line: 965, column: 38)
!1899 = !DILocation(line: 967, column: 18, scope: !1898)
!1900 = !DILocation(line: 967, column: 32, scope: !1898)
!1901 = !DILocation(line: 967, column: 6, scope: !1898)
!1902 = !DILocation(line: 968, column: 2, scope: !1898)
!1903 = distinct !{!1903, !1893, !1904, !397}
!1904 = !DILocation(line: 968, column: 2, scope: !1894)
!1905 = !DILocation(line: 969, column: 6, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 969, column: 6)
!1907 = !DILocation(line: 969, column: 6, scope: !1873)
!1908 = !DILocation(line: 970, column: 17, scope: !1906)
!1909 = !DILocation(line: 970, column: 15, scope: !1906)
!1910 = !DILocation(line: 970, column: 6, scope: !1906)
!1911 = !DILocation(line: 971, column: 11, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !1906, file: !3, line: 971, column: 11)
!1913 = !DILocation(line: 971, column: 11, scope: !1906)
!1914 = !DILocation(line: 972, column: 17, scope: !1912)
!1915 = !DILocation(line: 972, column: 37, scope: !1912)
!1916 = !DILocation(line: 972, column: 15, scope: !1912)
!1917 = !DILocation(line: 972, column: 6, scope: !1912)
!1918 = !DILocation(line: 973, column: 2, scope: !1873)
!1919 = !DILocation(line: 975, column: 63, scope: !1873)
!1920 = !DILocation(line: 975, column: 2, scope: !1873)
!1921 = !DILocation(line: 976, column: 2, scope: !1873)
!1922 = !DILocation(line: 978, column: 12, scope: !1843)
!1923 = !DILocation(line: 978, column: 5, scope: !1843)
!1924 = distinct !DISubprogram(name: "exec_setup", scope: !3, file: !3, line: 750, type: !1925, scopeLine: 751, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !249)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{!54, !1102, !72, !54}
!1927 = !DILocalVariable(name: "details", arg: 1, scope: !1924, file: !3, line: 750, type: !1102)
!1928 = !DILocation(line: 750, column: 36, scope: !1924)
!1929 = !DILocalVariable(name: "ptyname", arg: 2, scope: !1924, file: !3, line: 750, type: !72)
!1930 = !DILocation(line: 750, column: 57, scope: !1924)
!1931 = !DILocalVariable(name: "ptyfd", arg: 3, scope: !1924, file: !3, line: 750, type: !54)
!1932 = !DILocation(line: 750, column: 70, scope: !1924)
!1933 = !DILocalVariable(name: "rval", scope: !1924, file: !3, line: 752, type: !54)
!1934 = !DILocation(line: 752, column: 9, scope: !1924)
!1935 = !DILocalVariable(name: "pw", scope: !1924, file: !3, line: 753, type: !148)
!1936 = !DILocation(line: 753, column: 20, scope: !1924)
!1937 = !DILocation(line: 758, column: 19, scope: !1924)
!1938 = !DILocation(line: 758, column: 28, scope: !1924)
!1939 = !DILocation(line: 758, column: 10, scope: !1924)
!1940 = !DILocation(line: 758, column: 8, scope: !1924)
!1941 = !DILocation(line: 767, column: 45, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 767, column: 9)
!1943 = !DILocation(line: 767, column: 9, scope: !1942)
!1944 = !DILocation(line: 767, column: 49, scope: !1942)
!1945 = !DILocation(line: 767, column: 9, scope: !1924)
!1946 = !DILocation(line: 768, column: 2, scope: !1942)
!1947 = !DILocation(line: 778, column: 9, scope: !1948)
!1948 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 778, column: 9)
!1949 = !DILocation(line: 778, column: 12, scope: !1948)
!1950 = !DILocation(line: 778, column: 9, scope: !1924)
!1951 = !DILocation(line: 809, column: 5, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !1948, file: !3, line: 778, column: 21)
!1953 = !DILocation(line: 815, column: 15, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 815, column: 9)
!1955 = !DILocation(line: 815, column: 24, scope: !1954)
!1956 = !DILocation(line: 815, column: 9, scope: !1954)
!1957 = !DILocation(line: 815, column: 44, scope: !1954)
!1958 = !DILocation(line: 815, column: 55, scope: !1954)
!1959 = !DILocation(line: 815, column: 64, scope: !1954)
!1960 = !DILocation(line: 815, column: 47, scope: !1954)
!1961 = !DILocation(line: 815, column: 9, scope: !1924)
!1962 = !DILocation(line: 816, column: 48, scope: !1963)
!1963 = distinct !DILexicalBlock(scope: !1954, file: !3, line: 815, column: 71)
!1964 = !DILocation(line: 816, column: 57, scope: !1963)
!1965 = !DILocation(line: 816, column: 2, scope: !1963)
!1966 = !DILocation(line: 817, column: 2, scope: !1963)
!1967 = !DILocation(line: 820, column: 15, scope: !1968)
!1968 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 820, column: 9)
!1969 = !DILocation(line: 820, column: 24, scope: !1968)
!1970 = !DILocation(line: 820, column: 9, scope: !1968)
!1971 = !DILocation(line: 820, column: 43, scope: !1968)
!1972 = !DILocation(line: 820, column: 53, scope: !1968)
!1973 = !DILocation(line: 820, column: 62, scope: !1968)
!1974 = !DILocation(line: 820, column: 46, scope: !1968)
!1975 = !DILocation(line: 820, column: 9, scope: !1924)
!1976 = !DILocation(line: 821, column: 47, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1968, file: !3, line: 820, column: 68)
!1978 = !DILocation(line: 821, column: 56, scope: !1977)
!1979 = !DILocation(line: 821, column: 2, scope: !1977)
!1980 = !DILocation(line: 822, column: 2, scope: !1977)
!1981 = !DILocation(line: 825, column: 16, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 825, column: 9)
!1983 = !DILocation(line: 825, column: 25, scope: !1982)
!1984 = !DILocation(line: 825, column: 10, scope: !1982)
!1985 = !DILocation(line: 825, column: 9, scope: !1924)
!1986 = !DILocation(line: 827, column: 6, scope: !1987)
!1987 = distinct !DILexicalBlock(scope: !1988, file: !3, line: 827, column: 6)
!1988 = distinct !DILexicalBlock(scope: !1982, file: !3, line: 825, column: 53)
!1989 = !DILocation(line: 827, column: 15, scope: !1987)
!1990 = !DILocation(line: 827, column: 23, scope: !1987)
!1991 = !DILocation(line: 827, column: 6, scope: !1988)
!1992 = !DILocation(line: 828, column: 20, scope: !1993)
!1993 = distinct !DILexicalBlock(scope: !1994, file: !3, line: 828, column: 10)
!1994 = distinct !DILexicalBlock(scope: !1987, file: !3, line: 827, column: 29)
!1995 = !DILocation(line: 828, column: 29, scope: !1993)
!1996 = !DILocation(line: 828, column: 38, scope: !1993)
!1997 = !DILocation(line: 828, column: 47, scope: !1993)
!1998 = !DILocation(line: 828, column: 10, scope: !1993)
!1999 = !DILocation(line: 828, column: 55, scope: !1993)
!2000 = !DILocation(line: 828, column: 10, scope: !1994)
!2001 = !DILocation(line: 829, column: 3, scope: !2002)
!2002 = distinct !DILexicalBlock(scope: !1993, file: !3, line: 828, column: 60)
!2003 = !DILocation(line: 830, column: 3, scope: !2002)
!2004 = !DILocation(line: 832, column: 2, scope: !1994)
!2005 = !DILocation(line: 839, column: 5, scope: !1988)
!2006 = !DILocation(line: 841, column: 15, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 841, column: 9)
!2008 = !DILocation(line: 841, column: 24, scope: !2007)
!2009 = !DILocation(line: 841, column: 9, scope: !2007)
!2010 = !DILocation(line: 841, column: 9, scope: !1924)
!2011 = !DILocation(line: 842, column: 35, scope: !2012)
!2012 = distinct !DILexicalBlock(scope: !2013, file: !3, line: 842, column: 6)
!2013 = distinct !DILexicalBlock(scope: !2007, file: !3, line: 841, column: 49)
!2014 = !DILocation(line: 842, column: 44, scope: !2012)
!2015 = !DILocation(line: 842, column: 6, scope: !2012)
!2016 = !DILocation(line: 842, column: 54, scope: !2012)
!2017 = !DILocation(line: 842, column: 6, scope: !2013)
!2018 = !DILocation(line: 843, column: 6, scope: !2019)
!2019 = distinct !DILexicalBlock(scope: !2012, file: !3, line: 842, column: 60)
!2020 = !DILocation(line: 844, column: 6, scope: !2019)
!2021 = !DILocation(line: 846, column: 5, scope: !2013)
!2022 = !DILocation(line: 847, column: 15, scope: !2023)
!2023 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 847, column: 9)
!2024 = !DILocation(line: 847, column: 24, scope: !2023)
!2025 = !DILocation(line: 847, column: 9, scope: !2023)
!2026 = !DILocation(line: 847, column: 9, scope: !1924)
!2027 = !DILocation(line: 848, column: 15, scope: !2023)
!2028 = !DILocation(line: 848, column: 24, scope: !2023)
!2029 = !DILocation(line: 848, column: 9, scope: !2023)
!2030 = !DILocation(line: 848, column: 2, scope: !2023)
!2031 = !DILocation(line: 849, column: 9, scope: !2032)
!2032 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 849, column: 9)
!2033 = !DILocation(line: 849, column: 18, scope: !2032)
!2034 = !DILocation(line: 849, column: 9, scope: !1924)
!2035 = !DILocation(line: 850, column: 13, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2037, file: !3, line: 850, column: 6)
!2037 = distinct !DILexicalBlock(scope: !2032, file: !3, line: 849, column: 26)
!2038 = !DILocation(line: 850, column: 22, scope: !2036)
!2039 = !DILocation(line: 850, column: 6, scope: !2036)
!2040 = !DILocation(line: 850, column: 30, scope: !2036)
!2041 = !DILocation(line: 850, column: 35, scope: !2036)
!2042 = !DILocation(line: 850, column: 38, scope: !2036)
!2043 = !DILocation(line: 850, column: 49, scope: !2036)
!2044 = !DILocation(line: 850, column: 6, scope: !2037)
!2045 = !DILocation(line: 851, column: 45, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !2036, file: !3, line: 850, column: 55)
!2047 = !DILocation(line: 851, column: 54, scope: !2046)
!2048 = !DILocation(line: 851, column: 6, scope: !2046)
!2049 = !DILocation(line: 852, column: 6, scope: !2046)
!2050 = !DILocation(line: 854, column: 5, scope: !2037)
!2051 = !DILocation(line: 857, column: 19, scope: !2052)
!2052 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 857, column: 9)
!2053 = !DILocation(line: 857, column: 28, scope: !2052)
!2054 = !DILocation(line: 857, column: 33, scope: !2052)
!2055 = !DILocation(line: 857, column: 42, scope: !2052)
!2056 = !DILocation(line: 857, column: 48, scope: !2052)
!2057 = !DILocation(line: 857, column: 57, scope: !2052)
!2058 = !DILocation(line: 857, column: 9, scope: !2052)
!2059 = !DILocation(line: 857, column: 63, scope: !2052)
!2060 = !DILocation(line: 857, column: 9, scope: !1924)
!2061 = !DILocation(line: 858, column: 52, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !2052, file: !3, line: 857, column: 69)
!2063 = !DILocation(line: 858, column: 61, scope: !2062)
!2064 = !DILocation(line: 859, column: 6, scope: !2062)
!2065 = !DILocation(line: 859, column: 15, scope: !2062)
!2066 = !DILocation(line: 858, column: 2, scope: !2062)
!2067 = !DILocation(line: 860, column: 2, scope: !2062)
!2068 = !DILocation(line: 880, column: 9, scope: !2069)
!2069 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 880, column: 9)
!2070 = !DILocation(line: 880, column: 18, scope: !2069)
!2071 = !DILocation(line: 880, column: 9, scope: !1924)
!2072 = !DILocation(line: 881, column: 6, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2074, file: !3, line: 881, column: 6)
!2074 = distinct !DILexicalBlock(scope: !2069, file: !3, line: 880, column: 23)
!2075 = !DILocation(line: 881, column: 15, scope: !2073)
!2076 = !DILocation(line: 881, column: 22, scope: !2073)
!2077 = !DILocation(line: 881, column: 32, scope: !2073)
!2078 = !DILocation(line: 881, column: 41, scope: !2073)
!2079 = !DILocation(line: 881, column: 59, scope: !2073)
!2080 = !DILocation(line: 881, column: 25, scope: !2073)
!2081 = !DILocation(line: 881, column: 64, scope: !2073)
!2082 = !DILocation(line: 881, column: 6, scope: !2074)
!2083 = !DILocation(line: 883, column: 16, scope: !2084)
!2084 = distinct !DILexicalBlock(scope: !2085, file: !3, line: 883, column: 10)
!2085 = distinct !DILexicalBlock(scope: !2073, file: !3, line: 881, column: 70)
!2086 = !DILocation(line: 883, column: 25, scope: !2084)
!2087 = !DILocation(line: 883, column: 10, scope: !2084)
!2088 = !DILocation(line: 883, column: 30, scope: !2084)
!2089 = !DILocation(line: 883, column: 10, scope: !2085)
!2090 = !DILocation(line: 884, column: 47, scope: !2091)
!2091 = distinct !DILexicalBlock(scope: !2084, file: !3, line: 883, column: 36)
!2092 = !DILocation(line: 884, column: 56, scope: !2091)
!2093 = !DILocation(line: 884, column: 3, scope: !2091)
!2094 = !DILocation(line: 885, column: 3, scope: !2091)
!2095 = !DILocation(line: 887, column: 2, scope: !2085)
!2096 = !DILocation(line: 888, column: 5, scope: !2074)
!2097 = !DILocalVariable(name: "rl", scope: !2098, file: !3, line: 897, type: !212)
!2098 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 896, column: 5)
!2099 = !DILocation(line: 897, column: 16, scope: !2098)
!2100 = !DILocation(line: 898, column: 6, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !2098, file: !3, line: 898, column: 6)
!2102 = !DILocation(line: 898, column: 35, scope: !2101)
!2103 = !DILocation(line: 898, column: 6, scope: !2098)
!2104 = !DILocation(line: 899, column: 13, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2106, file: !3, line: 899, column: 10)
!2106 = distinct !DILexicalBlock(scope: !2101, file: !3, line: 898, column: 41)
!2107 = !DILocation(line: 899, column: 22, scope: !2105)
!2108 = !DILocation(line: 899, column: 39, scope: !2105)
!2109 = !DILocation(line: 899, column: 45, scope: !2105)
!2110 = !DILocation(line: 899, column: 54, scope: !2105)
!2111 = !DILocation(line: 899, column: 10, scope: !2106)
!2112 = !DILocation(line: 900, column: 10, scope: !2105)
!2113 = !DILocation(line: 900, column: 3, scope: !2105)
!2114 = !DILocation(line: 901, column: 2, scope: !2106)
!2115 = !DILocation(line: 905, column: 10, scope: !1924)
!2116 = !DILocation(line: 905, column: 5, scope: !1924)
!2117 = !DILabel(scope: !1924, name: "done", file: !3, line: 907)
!2118 = !DILocation(line: 907, column: 1, scope: !1924)
!2119 = !DILocation(line: 908, column: 12, scope: !1924)
!2120 = !DILocation(line: 908, column: 5, scope: !1924)
!2121 = distinct !DISubprogram(name: "policy_init_session", scope: !3, file: !3, line: 1044, type: !2122, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{!54, !69, !148}
!2124 = !DILocalVariable(name: "plugin", arg: 1, scope: !2121, file: !3, line: 1044, type: !69)
!2125 = !DILocation(line: 1044, column: 46, scope: !2121)
!2126 = !DILocalVariable(name: "pwd", arg: 2, scope: !2121, file: !3, line: 1044, type: !148)
!2127 = !DILocation(line: 1044, column: 69, scope: !2121)
!2128 = !DILocation(line: 1046, column: 9, scope: !2129)
!2129 = distinct !DILexicalBlock(scope: !2121, file: !3, line: 1046, column: 9)
!2130 = !DILocation(line: 1046, column: 17, scope: !2129)
!2131 = !DILocation(line: 1046, column: 19, scope: !2129)
!2132 = !DILocation(line: 1046, column: 27, scope: !2129)
!2133 = !DILocation(line: 1046, column: 9, scope: !2121)
!2134 = !DILocation(line: 1047, column: 9, scope: !2129)
!2135 = !DILocation(line: 1047, column: 17, scope: !2129)
!2136 = !DILocation(line: 1047, column: 19, scope: !2129)
!2137 = !DILocation(line: 1047, column: 27, scope: !2129)
!2138 = !DILocation(line: 1047, column: 40, scope: !2129)
!2139 = !DILocation(line: 1047, column: 2, scope: !2129)
!2140 = !DILocation(line: 1048, column: 5, scope: !2121)
!2141 = !DILocation(line: 1049, column: 1, scope: !2121)
!2142 = distinct !DISubprogram(name: "policy_close", scope: !3, file: !3, line: 990, type: !2143, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{null, !69, !54, !54}
!2145 = !DILocalVariable(name: "plugin", arg: 1, scope: !2142, file: !3, line: 990, type: !69)
!2146 = !DILocation(line: 990, column: 39, scope: !2142)
!2147 = !DILocalVariable(name: "exit_status", arg: 2, scope: !2142, file: !3, line: 990, type: !54)
!2148 = !DILocation(line: 990, column: 51, scope: !2142)
!2149 = !DILocalVariable(name: "error", arg: 3, scope: !2142, file: !3, line: 990, type: !54)
!2150 = !DILocation(line: 990, column: 68, scope: !2142)
!2151 = !DILocation(line: 992, column: 5, scope: !2142)
!2152 = !DILocation(line: 992, column: 13, scope: !2142)
!2153 = !DILocation(line: 992, column: 15, scope: !2142)
!2154 = !DILocation(line: 992, column: 23, scope: !2142)
!2155 = !DILocation(line: 992, column: 29, scope: !2142)
!2156 = !DILocation(line: 992, column: 42, scope: !2142)
!2157 = !DILocation(line: 993, column: 1, scope: !2142)
!2158 = distinct !DISubprogram(name: "iolog_close", scope: !3, file: !3, line: 1076, type: !2143, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!2159 = !DILocalVariable(name: "plugin", arg: 1, scope: !2158, file: !3, line: 1076, type: !69)
!2160 = !DILocation(line: 1076, column: 38, scope: !2158)
!2161 = !DILocalVariable(name: "exit_status", arg: 2, scope: !2158, file: !3, line: 1076, type: !54)
!2162 = !DILocation(line: 1076, column: 50, scope: !2158)
!2163 = !DILocalVariable(name: "error", arg: 3, scope: !2158, file: !3, line: 1076, type: !54)
!2164 = !DILocation(line: 1076, column: 67, scope: !2158)
!2165 = !DILocation(line: 1078, column: 5, scope: !2158)
!2166 = !DILocation(line: 1078, column: 13, scope: !2158)
!2167 = !DILocation(line: 1078, column: 15, scope: !2158)
!2168 = !DILocation(line: 1078, column: 19, scope: !2158)
!2169 = !DILocation(line: 1078, column: 25, scope: !2158)
!2170 = !DILocation(line: 1078, column: 38, scope: !2158)
!2171 = !DILocation(line: 1079, column: 1, scope: !2158)
!2172 = distinct !DISubprogram(name: "get_user_groups", scope: !3, file: !3, line: 317, type: !2173, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !249)
!2173 = !DISubroutineType(types: !2174)
!2174 = !{!111, !622}
!2175 = !DILocalVariable(name: "ud", arg: 1, scope: !2172, file: !3, line: 317, type: !622)
!2176 = !DILocation(line: 317, column: 38, scope: !2172)
!2177 = !DILocalVariable(name: "gid_list", scope: !2172, file: !3, line: 319, type: !111)
!2178 = !DILocation(line: 319, column: 11, scope: !2172)
!2179 = !DILocalVariable(name: "glsize", scope: !2172, file: !3, line: 321, type: !2180)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2181, line: 46, baseType: !52)
!2181 = !DIFile(filename: "/usr/lib/llvm-13/lib/clang/13.0.1/include/stddef.h", directory: "")
!2182 = !DILocation(line: 321, column: 12, scope: !2172)
!2183 = !DILocalVariable(name: "cp", scope: !2172, file: !3, line: 322, type: !111)
!2184 = !DILocation(line: 322, column: 11, scope: !2172)
!2185 = !DILocalVariable(name: "i", scope: !2172, file: !3, line: 323, type: !54)
!2186 = !DILocation(line: 323, column: 9, scope: !2172)
!2187 = !DILocalVariable(name: "len", scope: !2172, file: !3, line: 323, type: !54)
!2188 = !DILocation(line: 323, column: 12, scope: !2172)
!2189 = !DILocation(line: 325, column: 24, scope: !2190)
!2190 = distinct !DILexicalBlock(scope: !2172, file: !3, line: 325, column: 9)
!2191 = !DILocation(line: 325, column: 10, scope: !2190)
!2192 = !DILocation(line: 325, column: 14, scope: !2190)
!2193 = !DILocation(line: 325, column: 22, scope: !2190)
!2194 = !DILocation(line: 325, column: 44, scope: !2190)
!2195 = !DILocation(line: 325, column: 9, scope: !2172)
!2196 = !DILocation(line: 326, column: 2, scope: !2190)
!2197 = !DILocation(line: 328, column: 27, scope: !2172)
!2198 = !DILocation(line: 328, column: 31, scope: !2172)
!2199 = !DILocation(line: 328, column: 18, scope: !2172)
!2200 = !DILocation(line: 328, column: 5, scope: !2172)
!2201 = !DILocation(line: 328, column: 9, scope: !2172)
!2202 = !DILocation(line: 328, column: 16, scope: !2172)
!2203 = !DILocation(line: 329, column: 19, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2172, file: !3, line: 329, column: 9)
!2205 = !DILocation(line: 329, column: 23, scope: !2204)
!2206 = !DILocation(line: 329, column: 32, scope: !2204)
!2207 = !DILocation(line: 329, column: 36, scope: !2204)
!2208 = !DILocation(line: 329, column: 9, scope: !2204)
!2209 = !DILocation(line: 329, column: 44, scope: !2204)
!2210 = !DILocation(line: 329, column: 9, scope: !2172)
!2211 = !DILocation(line: 330, column: 2, scope: !2204)
!2212 = !DILocation(line: 331, column: 39, scope: !2172)
!2213 = !DILocation(line: 331, column: 43, scope: !2172)
!2214 = !DILocation(line: 331, column: 51, scope: !2172)
!2215 = !DILocation(line: 331, column: 38, scope: !2172)
!2216 = !DILocation(line: 331, column: 36, scope: !2172)
!2217 = !DILocation(line: 331, column: 12, scope: !2172)
!2218 = !DILocation(line: 332, column: 24, scope: !2172)
!2219 = !DILocation(line: 332, column: 16, scope: !2172)
!2220 = !DILocation(line: 332, column: 14, scope: !2172)
!2221 = !DILocation(line: 333, column: 12, scope: !2172)
!2222 = !DILocation(line: 333, column: 5, scope: !2172)
!2223 = !DILocation(line: 334, column: 10, scope: !2172)
!2224 = !DILocation(line: 334, column: 19, scope: !2172)
!2225 = !DILocation(line: 334, column: 39, scope: !2172)
!2226 = !DILocation(line: 334, column: 8, scope: !2172)
!2227 = !DILocation(line: 335, column: 12, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2172, file: !3, line: 335, column: 5)
!2229 = !DILocation(line: 335, column: 10, scope: !2228)
!2230 = !DILocation(line: 335, column: 17, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2228, file: !3, line: 335, column: 5)
!2232 = !DILocation(line: 335, column: 21, scope: !2231)
!2233 = !DILocation(line: 335, column: 25, scope: !2231)
!2234 = !DILocation(line: 335, column: 19, scope: !2231)
!2235 = !DILocation(line: 335, column: 5, scope: !2228)
!2236 = !DILocation(line: 337, column: 17, scope: !2237)
!2237 = distinct !DILexicalBlock(scope: !2231, file: !3, line: 335, column: 39)
!2238 = !DILocation(line: 337, column: 21, scope: !2237)
!2239 = !DILocation(line: 337, column: 31, scope: !2237)
!2240 = !DILocation(line: 337, column: 36, scope: !2237)
!2241 = !DILocation(line: 337, column: 34, scope: !2237)
!2242 = !DILocation(line: 337, column: 28, scope: !2237)
!2243 = !DILocation(line: 338, column: 6, scope: !2237)
!2244 = !DILocation(line: 338, column: 34, scope: !2237)
!2245 = !DILocation(line: 338, column: 38, scope: !2237)
!2246 = !DILocation(line: 338, column: 45, scope: !2237)
!2247 = !DILocation(line: 337, column: 8, scope: !2237)
!2248 = !DILocation(line: 337, column: 6, scope: !2237)
!2249 = !DILocation(line: 339, column: 8, scope: !2237)
!2250 = !DILocation(line: 339, column: 5, scope: !2237)
!2251 = !DILocation(line: 340, column: 5, scope: !2237)
!2252 = !DILocation(line: 335, column: 35, scope: !2231)
!2253 = !DILocation(line: 335, column: 5, scope: !2231)
!2254 = distinct !{!2254, !2235, !2255, !397}
!2255 = !DILocation(line: 340, column: 5, scope: !2228)
!2256 = !DILocation(line: 342, column: 12, scope: !2172)
!2257 = !DILocation(line: 342, column: 5, scope: !2172)
!2258 = !DILocation(line: 343, column: 1, scope: !2172)
